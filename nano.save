
var VFD = VFD || {};
Array.prototype.indexOf || (Array.prototype.indexOf = function(a) {
        var b = this.length >>> 0,
            c = Number(arguments[1]) || 0;
        for (c = 0 > c ? Math.ceil(c) : Math.floor(c), 0 > c && (c += b); b > c; c++)
            if (c in this && this[c] === a) return c;
        return -1
    }), Array.prototype.filter || (Array.prototype.filter = function(a, b) {
        var c, d, e, f = [];
        if (!this || "function" != typeof a || a instanceof RegExp) throw new TypeError;
        for (e = this.length, c = 0; e > c; c++) this.hasOwnProperty(c) && (d = this[c], a.call(b, d, c, this) && f.push(d));
        return f
    }), VFD.client = function(a) {
        "use strict";

        function b(a, b) {
            var c = t[a] = t[a] || [];
            return c.push({
                cb: b
            }), this
        }

        function c(a, b) {
            var c = t[a];
            if (c) {
                for (var d = 0; d < c.length; d++) c[d].cb(b);
                return this
            }
        }

        function d(b, c) {
            var d = a.extend({
                    d: "pc",
                    output: "json"
                }, b),
                e = a.extend({}, c),
                f = [];
            for (var g in d) null != d[g] && f.push(g + "=" + d[g]);
            var h = [];
            for (var g in e) h.push(null != d[g] ? g + "=" + encodeURIComponent(e[g]) : g);
            f = f.join("/"), h = h.length > 0 ? "?" + h.join("&") : "";
            var i = s.base_vfd_url + f + h,
                j = ruf().defer(),
                k = {
                    responseHeader: {
                        Date: !0
                    }
                };
            return ruf("get").http(i, k).then(function(a) {
                a = r(a), j.resolve(a)
            }, function(a) {
                ruf().console("error", a)
            }), j.promise
        }

        function e(b, c) {
            var c = c || {},
                e = {
                    ak: b,
                    sk: c.sk || null,
                    pg: c.pg || null,
                    sort: c.sort || null,
                    cf: c.cf || null,
                    pto: c.pto || null,
                    pfrom: c.pfrom || null
                },
                f = a.Deferred(),
                g = d(e);
            return g.then(function(a) {
                f.resolve(a)
            }, function(a, b, c) {
                f.reject(a, b, c)
            }), f.promise()
        }

        function f(b) {
            var c = a.Deferred(),
                e = {
                    fun: "catchup",
                    sort: b.sort || null,
                    pg: b.pg || "1",
                    bcdate: b.bcdate || null,
                    station: b.station || null,
                    pto: b.pto,
                    pfrom: b.pfrom
                };
            s.product && (e.product = s.product);
            var f = d(e);
            return f.then(function(a) {
                c.resolve(a)
            }, function(a, b, d) {
                c.reject(a, b, d)
            }), c.promise()
        }

        function g(b) {
            var c = a.Deferred(),
                e = {
                    fun: "popular",
                    ak: b.ak || null,
                    product: s.product || null
                },
                f = d(e);
            return f.then(function(a, b, d) {
                c.resolve(a, d)
            }, function(a, b, d) {
                c.reject(a, b, d)
            }), c.promise()
        }

        function h(b, c) {
            var e = a.Deferred(),
                f = {
                    fun: "preview",
                    ak: b.ak || null,
                    product: s.product || null,
                    sort: b.sort || null,
                    cf: b.cf || null
                },
                g = c === !0 ? {
                    fullfeed: null
                } : null,
                h = d(f, g);
            return h.then(function(a, b, c) {
                e.resolve(a, c)
            }, function(a, b, c) {
                e.reject(a, b, c)
            }), e.promise()
        }

        function i(b) {
            var c = a.Deferred(),
                e = {
                    fun: "abstract",
                    ak: 165740,
                    fmt: "smooth",
                    genre: b.genre || null,
                    station: b.station || null,
                    pg: b.pg || null,
                    sort: b.sort || null,
                    cf: b.className || null
                },
                f = d(e);
            return f.then(function(a, b, d) {
                c.resolve(a, d)
            }, function(a, b, d) {
                c.reject(a, b, d)
            }), c.promise()
        }

        function j(b) {
            var c = a.Deferred(),
                e = {
                    fun: "az",
                    ak: b.ak || null,
                    fmt: "smooth",
                    genre: b.genre || null,
                    station: b.station || null,
                    pg: b.pg || "1",
                    product: s.product || null
                },
                f = d(e);
            return f.then(function(a, b, d) {
                c.resolve(a, d)
            }, function(a, b, d) {
                c.reject(a, b, d)
            }), c.promise()
        }

        function k(b) {
            var c = a.Deferred(),
                e = {
                    fun: "getseasons",
                    ak: b.key
                },
                f = d(e);
            return f.then(function(a, b, d) {
                c.resolve(a, d)
            }, function(a, b, d) {
                c.reject(a, b, d)
            }), c.promise()
        }

        function l(b) {
            var c = a.Deferred(),
                e = {
                    fun: "progsubtype",
                    subtype: "rtlxlserie",
                    fmt: "smooth",
                    product: s.product || null,
                    pg: b.pg || "1"
                },
                f = d(e);
            return f.then(function(a, b, d) {
                c.resolve(a, d)
            }, function(a, b, d) {
                c.reject(a, b, d)
            }), c.promise()
        }

        function m(b, c) {
            var e = a.Deferred(),
                f = {
                    fun: "abstract",
                    uuid: b,
                    d: c.d || "pc",
                    fmt: c.fmt || "smooth"
                },
                g = d(f);
            return g.then(function(a, b, c) {
                e.resolve(a, c)
            }, function(a, b, c) {
                e.reject(a, b, c)
            }), e.promise()
        }

        function n(b) {
            var c = a.Deferred(),
                e = {
                    fun: "subclass",
                    pg: "1",
                    subclass: "videosnack",
                    product: s.product || null
                };
            return d(e).then(function(a, b, d) {
                c.resolve(a, d)
            }, function(a, b, d) {
                c.reject(a, b, d)
            }), c.promise()
        }

        function o(b) {
            var c = a.Deferred(),
                e = {
                    fun: "az",
                    fmt: "smooth",
                    pg: "1",
                    product: s.product || null
                };
            return d(e).then(function(a, b, d) {
                c.resolve(a, d)
            }, function(a, b, d) {
                c.reject(a, b, d)
            }), c.promise()
        }

        function p(a, b) {
            var c = a.getUTCFullYear() + VFD.util.pad(a.getUTCMonth() + 1, 2) + VFD.util.pad(a.getUTCDate(), 2);
            return b === !0 && (c = c + VFD.util.pad(a.getUTCHours(), 2) + VFD.util.pad(a.getUTCMinutes(), 2)), c
        }

        function q(a, b, c, d, e) {
            return ruf(b).forEach(function(b) {
                return b[c] === a ? (e(b), b[d]) : void 0
            })
        }

        function r(a) {
            Date.now();
            return ruf(a.material).forEach(function(b) {
                b.episodeKey = "" !== b.episode_key ? b.episode_key : 0, b.unixTimestamp = 1e3 * b.display_date, b.isPreview = VFD.util.isPreview(b), b.isLive = VFD.util.isLive(b), b.title = b.title ? b.title : q(b.episode_key, a.episodes, "key", "name", function(a) {
                    "" === b.synopsis && (b.synopsis = a.synopsis)
                }) || "", b.name = b.name ? b.name : q(b.abstract_key, a.abstracts, "key", "name", function(a) {
                    "" === b.synopsis && (b.synopsis = a.synopsis), b.progsubtype = a.progsubtype
                }) || "", b.isPaid = "avod" !== b.ddr_model.toLowerCase(), b.url = ruf("{name}-{abstract}/{uuid}").format({
                    name: RTL.xl.slugify(b.name),
                    "abstract": b.abstract_key,
                    uuid: b.uuid
                })
            }), a
        }
        var s = {
                base_vfd_url: "http://www.rtl.nl/system/s4m/vfd/version=2/",
                product: !1
            },
            t = {},
            u = function(a) {
                if (a)
                    for (var b in a) a.hasOwnProperty(b) && (s[b] = a[b])
            };
        return {
            on: b,
            trigger: c,
            config: s,
            setOptions: function(a) {
                return u(a)
            },
            getAz: function(a) {
                var a = a || {};
                return o(a)
            },
            getVideoSnacks: function(a) {
                var a = a || {};
                return n(a)
            },
            getAbstract: function(a, b) {
                var b = b || {};
                if (b.daterange) {
                    var c = b.daterange[0],
                        d = b.daterange[1];
                    c = p(c), d = p(d, !0), b.pfrom = c, b.pto = d
                }
                if (!a) throw "Abstract key missing";
                return e(a, b)
            },
            getPopular: function(a) {
                var a = a || {};
                return g(a)
            },
            getPreview: function(a, b) {
                var a = a || {};
                return h(a, b)
            },
            getCatchUp: function(a) {
                var a = a || {};
                if (a.bcdate && a.bcdate instanceof Date) {
                    var b = a.bcdate;
                    a.bcdate = b.getUTCFullYear() + VFD.util.pad(b.getUTCMonth() + 1, 2) + VFD.util.pad(b.getUTCDate(), 2)
                } else a.bcdate && a.bcdate instanceof Array;
                if (a.dateRange) {
                    var c = a.dateRange[0],
                        d = a.dateRange[1];
                    c = p(c), d = p(d), a.pfrom = c, a.pto = d
                }
                if (a.from && a.from instanceof Date) {
                    var c = p(a.from);
                    a.pfrom = c
                }
                return f(a)
            },
            getUuids: function(b, c) {
                var e = b.sort().join(","),
                    f = a.Deferred(),
                    g = {
                        fun: "uuids",
                        pg: "1",
                        uuids: e,
                        product: s.product || null
                    };
                return d(g).then(function(a, b, c) {
                    f.resolve(a, c)
                }, function(a, b, c) {
                    f.reject(a, b, c)
                }), f.promise()
            },
            getViews: function(b) {
                var c = a.Deferred(),
                    e = {
                        fun: "viewcount",
                        uuid: b,
                        d: null,
                        output: null
                    };
                return d(e).then(function(a, b, d) {
                    c.resolve(a, d)
                }, function(a, b, d) {
                    c.reject(a, b, d)
                }), c.promise()
            },
            getSeries: function(a) {
                return l(a)
            },
            getFilms: function(a) {
                var a = a || {};
                return i(a)
            },
            getAZ: function(a) {
                var a = a || {};
                return j(a)
            },
            getSeasons: function(a) {
                var a = a || {};
                return k(a)
            },
            getFilmGenres: function(a) {
                return i({
                    genre: "LIST"
                })
            },
            getMaterial: function(b, c) {
                if (!b) throw "[VFD] UUID argument missing";
                var c = a.extend({}, c);
                return m(b, c)
            }
        }
    }(jQuery), VFD.Model = function(a) {
        function b(a) {
            window.console && window.console.warn && console.warn(a)
        }
        this._data = a, this.materials = new VFD.Collection, this.classnames = [], this.seasons = [];
        var c = {},
            d = {},
            e = {},
            f = {};
        if (a.abstracts)
            for (var g = 0; g < a.abstracts.length; g++) {
                var h = a.abstracts[g];
                c[h.key] = h
            }
        if (a.seasons)
            for (var g = 0; g < a.seasons.length; g++) {
                var h = a.seasons[g];
                d[h.key] = h, this.seasons.push(h)
            }
        if (a.episodes)
            for (var g = 0; g < a.episodes.length; g++) {
                var h = a.episodes[g];
                h.ext = {}, e[h.key] = h
            }
        if (a.schedule)
            for (var g = 0; g < a.schedule.length; g++) {
                var h = a.schedule[g];
                f[h.episode_key] = h
            }
        if (a.classes) {
            for (var i = {}, g = 0; g < a.classes.length; g++) {
                var h = a.classes[g];
                i[h.display] || (i[h.display] = {
                    display: h.display,
                    classnames: []
                }), i[h.display].classnames || (i[h.display].classnames = []), -1 == i[h.display].classnames.indexOf(h.classname) && i[h.display].classnames.push(h.classname)
            }
            this.classnames = i
        }
        if (a.material)
            for (var g = 0; g < a.material.length; g++) {
                var j = a.material[g];
                if (j.abstract_key) {
                    if (j.season = d[j.season_key] || null, j["abstract"] = c[j.abstract_key] || null, j.episode = e[j.episode_key] || null, j.episode && "trailer" == j.classname) j.episode.ext = {
                        trailer: j.uuid
                    };
                    else if (j.related_material && j.related_material.length) {
                        var k = j.related_material[0];
                        "trailer" === k.classname && (j.episode.ext.trailer = k.uuid)
                    }
                    j.schedule = f[j.episode_key] || null, j.title || (j.title = j.episode && j.episode.name ? j.episode.name : ""), this.materials.push(j)
                } else b("Material " + j.uuid + " has no abstract_key!")
            }
        a.meta && a.meta.thumb_base_url && (a.meta.thumb_base_url = a.meta.thumb_base_url.replace(/\/p\/thumb\//gi, "/p/thumblarge/"), a.meta.thumb_base_url = a.meta.thumb_base_url.replace(/\/l\/thumb\//gi, "/l/thumblarge/"), -1 !== a.meta.thumb_base_url.indexOf("/l/thumblarge/") && (a.meta.thumb_base_landscape_url = a.meta.thumb_base_url), -1 !== a.meta.thumb_base_url.indexOf("/p/thumblarge/") && (a.meta.thumb_base_portrait_url = a.meta.thumb_base_url), !a.meta.thumb_base_landscape_url && a.meta.thumb_base_portrait_url && (a.meta.thumb_base_landscape_url = a.meta.thumb_base_portrait_url.replace(/\/p\/thumblarge\//g, "/l/thumblarge/")), !a.meta.thumb_base_portrait_url && a.meta.thumb_base_landscape_url && (a.meta.thumb_base_portrait_url = a.meta.thumb_base_landscape_url.replace(/\/l\/thumblarge\//g, "/p/thumblarge/")), a.meta.thumb_base_landscape_url || (a.meta.thumb_base_landscape_url = a.meta.thumb_base_url))
    }, VFD.Model.prototype = {
        getMaterials: function(a) {
            return a ? this.materials.filter(a) : this.materials
        },
        getCount: function() {
            return {
                total: this._data.meta.nr_of_videos_total,
                onPage: this._data.meta.nr_of_videos_onpage
            }
        }
    }, VFD.Collection = function() {
        function a() {
            arguments.length && Array.apply(this, arguments)
        }
        return a.prototype = new Array, a.prototype.take = function(a) {
            return this.slice(0, a)
        }, a.prototype.sortBy = function(a, b) {
            if (null == a) return this;
            a = a.split(".");
            var c = a.length;
            return this.sort(function(d, e) {
                for (var f = 0; c > f;) d = d[a[f]], e = e[a[f]], f++;
                return e > d ? "asc" == b ? -1 : 1 : d > e ? "asc" == b ? 1 : -1 : 0
            }), this
        }, a.prototype.filter = function(b, c) {
            for (var d = new a, e = this.length, f = 0; e > f; f++) this.hasOwnProperty(f) && (value = this[f], b.call(c, value, f, this) && d.push(value));
            return d
        }, a
    }(), VFD.util = function(a) {
        function b(a, b) {
            for (var c = "" + a; c.length < b;) c = "0" + c;
            return c
        }

        function c(b, c) {
            a.console && a.console.log && console.log(b, c)
        }

        function d(a) {
            var b = new Date;
            VFD.serverDate && (b = VFD.serverDate);
            var c = Math.round((new Date).getTime() / 1e3);
            return a.original_date > c && "uitzending" === a.classname ? !0 : !1
        }

        function e(a) {
            return "livestream" === a.classname
        }

        function f(a) {
            return "SVOD" == a.ddr_model || "TVOD" == a.ddr_model ? !0 : !1
        }

        function g() {
            return "http://covers.rtl.nl/system/cover/"
        }

        function h(a, b, c) {
            if (a) {
                var d = "portrait" === b ? "p" : "l",
                    e = c ? c : "thumblarge";
                return "165740" === a.abstract_key ? g() + d + "/" + e + "/" + a.episode_key : a.season_key ? g() + "l/" + e + "/" + a.season_key : a.abstract_key ? g() + "l/" + e + "/" + a.abstract_key : null
            }
        }

        function i(a) {
            return a ? "165740" === a.abstract_key ? g() + "l/carrousel/" + a.episode_key : a.season_key ? g() + "l/carrousel/" + a.season_key : null : void 0
        }

        function j() {
            return "http://screenshots.rtl.nl/system/thumb/"
        }

        function k(a) {
            if ("165740" === a.abstract_key) return o(a.uuid);
            var b = a.uuid;
            return n(a["abstract"]) + "/" + b
        }

        function l(a) {
            return a.episode && a.episode.ext.trailer ? "trailer/" + a.episode.ext.trailer : void 0
        }

        function m(a, b) {
            if ("165740" === a.key) return "films";
            var c = "gemist/" + n(a);
            return b && (c += "/s/" + b), c
        }

        function n(a) {
            return p(a.name || "") + "-" + a.key
        }

        function o(a) {
            return "films/" + a
        }

        function p(a) {
            return a = a.replace(/[^a-zA-Z0-9\-\s]/g, ""), a = a.replace(/\s+/g, "-"), encodeURIComponent(a).toLowerCase()
        }

        function q(a, b) {
            return a + b.key.slice(0, 1) + "/" + b.key + ".png"
        }

        function r(a) {
            var b = a.split(":");
            return 1 == b.length ? parseFloat(a) : 2 == b.length ? 60 * parseInt(b[0]) + parseInt(b[1]) : 3 == b.length ? 3600 * b[0] + 60 * b[1] + 1 * b[2] : void 0
        }

        function s(a) {
            var b = document.createElement("div");
            return b.innerHTML = '<a href="' + a + '">x</a>', b.firstChild.href
        }

        function t(a) {
            return a && "165740" === a.abstract_key
        }

        function u(a) {
            var b = "video.other",
                c = g() + "l/thumblarge/" + a.uuid + "?nicam=" + a.nicam;
            "uitzending" === a.classname ? b = "video.episode" : c = j() + "sz=720x404/uuid=" + a.uuid, "165740" === a.abstract_key && (b = "video.movie");
            var d = [];
            a.title && d.push(a.title), a["abstract"] && d.push(a["abstract"].name), d = d.join(" - ");
            var e = "";
            "165740" === a.abstract_key && a.episode ? e = a.episode.synopsis : a.synopsis ? e = a.synopsis : a["abstract"].synopsis && (e = a["abstract"].synopsis);
            var h = Math.round(r(a.duration)),
                i = {
                    "og:title": d,
                    "og:type": b,
                    "og:description": e,
                    "og:url": s("#!/" + k(a)),
                    "og:image": c,
                    "video:duration": h,
                    "video:release_date": moment(1e3 * a.original_date).format("YYYY-MM-DDTHH:mm:ss.SS Z")
                };
            if (!f(a) && "uitzending" != a.classname) {
                var l = "system/videoplayer/derden/facebook/rtlosmf.swf?rtlxlid=" + a.uuid + "&publicatiepunt=facebookcom&context=facebook&playcount=1&ccontrols=https://secure.rtl.nl/system/scripts/flashplayer/controlbar_default.swf";
                $.extend(i, {
                    "og:video:type": "application/x-shockwave-flash",
                    "og:video": "http://www.rtl.nl/" + l,
                    "og:video:secure_url": "https://secure.rtl.nl/" + l,
                    "og:video:width": 720,
                    "og:video:height": 404
                })
            }
            return i
        }

        function v(a, b) {
            var c = a.name;
            return b && (c += ", " + b.name), {
                "og:type": "video.tv_show",
                "og:title": c,
                "og:description": a.synopsis,
                "og:url": s("#!/" + m(a)),
                "og:image": q("http://data.rtl.nl/service/programma_logos/", a)
            }
        }

        function w(a) {
            var b = [];
            a.title && b.push(a.title), a["abstract"] && b.push(a["abstract"].name), b = b.join(" - ").substring(0, 70);
            var c = "";
            a.synopsis ? c = a.synopsis : a["abstract"].synopsis && (c = a["abstract"].synopsis);
            var d = "https://secure.rtl.nl/system/videoplayer/derden/twitter/video_embed.html#uuid=" + a.uuid,
                e = "http://cover.rtl.nl/system/cover/l/thumblarge/" + a.uuid,
                g = "rtlxl://" + a.uuid,
                h = {
                    "twitter:site": "@rtlxl",
                    "twitter:creator": "@rtlxl",
                    "twitter:card": "player",
                    "twitter:title": b,
                    "twitter:url": s("#!/" + k(a)),
                    "twitter:description": c,
                    "twitter:image": e,
                    "twitter:app:id:iphone": "411290027",
                    "twitter:app:id:ipad": "411290027",
                    "twitter:app:id:googleplay": "com.tapptic.rtl5.rtlxl",
                    "twitter:app:url:iphone": g,
                    "twitter:app:url:ipad": g,
                    "twitter:app:url:googleplay": g
                };
            return f(a) || "uitzending" == a.classname || $.extend(h, {
                "twitter:player": d,
                "twitter:player:width": 720,
                "twitter:player:height": 404
            }), h
        }

        function x(a, b) {
            var c = a.name,
                d = b ? b.key : a.key,
                e = g() + "l/pc/" + d,
                f = a.synopsis;
            b && (c += ", " + b.name, f = b.synopsis);
            var h = {
                "twitter:card": "summary_large_image",
                "twitter:site": "@rtlxl",
                "twitter:creator": "@rtlxl",
                "twitter:title": c,
                "twitter:description": f,
                "twitter:image:src": e,
                "twitter:app:id:iphone": "411290027",
                "twitter:app:id:ipad": "411290027",
                "twitter:app:id:googleplay": "com.tapptic.rtl5.rtlxl"
            };
            return h
        }

        function y(a) {
            if (a) {
                var b = "",
                    c = a.videopath.split("/");
                if (c.length > 9) {
                    var c = c.slice(5, 11);
                    c[5] = c[5].replace(".ssm", ""), b = "/" + c.join("/")
                }
                return b
            }
        }

        function z(a, b) {
            if (!a) return null;
            if (!(t(a) && a.related_material && a.related_material instanceof Array)) return null;
            for (var c = 0; c < a.related_material.length; c++)
                if (a.related_material[c].classname === b) {
                    var d = a.related_material[c];
                    return d
                }
            return null
        }
        return {
            pad: b,
            log: c,
            getRelated: z,
            parseDuration: r,
            isPaid: f,
            isPreview: d,
            isLive: e,
            isMovie: t,
            getMaterialOgData: u,
            getAbstractOgData: v,
            getMaterialTwitterData: w,
            getAbstractTwitterData: x,
            coverUrl: h,
            coverBaseUrl: g,
            coverRetinarUrl: i,
            screenshotBaseUrl: j,
            materialPath: k,
            trailerPath: l,
            abstractPath: m,
            filmPath: o,
            getComponentPath: y,
            progLogoUrl: q,
            qualifyURL: s
        }
    }(window),
    function(a, b) {
        "use strict";
        var c = {
                version: "1",
                fun: null,
                model: "svod"
            },
            d = "http://xlapi.rtl.nl",
            e = function() {
                var a = {};
                return a.promise = new Promise(function(b, c) {
                    a.resolve = b, a.reject = c
                }), a
            },
            f = function(a, b) {
                var c, d = {};
                for (c in a) Object.prototype.hasOwnProperty.call(a, c) && (d[c] = a[c]);
                for (c in b) Object.prototype.hasOwnProperty.call(b, c) && (d[c] = b[c]);
                return d
            },
            g = function(a, e) {
                var e = f(c, e);
                VFD.client.config.product && (e.product = VFD.client.config.product);
                var g = [];
                for (var i in e) null != e[i] && g.push(i + "=" + encodeURIComponent(e[i]));
                g = g.join("/");
                var j = d + "/" + g;
                return b("get").http(j).then(function(b) {
                    b = h(b), a.resolve(b)
                }, function() {
                    a.reject(data)
                }), a.promise
            },
            h = function(a) {
                return a
            },
            i = a.xlapi = {};
        i.defer = e, i.az = function(a) {
            var b = {
                fun: "az"
            };
            return g(a, b)
        }
    }(window, ruf);
var RtlId = RtlId || {};
RtlId.client = function(a) {
        "use strict";

        function b() {
            v && !(!v.debug == !0 || window.console && window.console.log)
        }

        function c() {
            window.console && window.console.warn && arguments.length > 0 && console.warn(arguments[0])
        }

        function d(a, b) {
            window.console && window.console.assert && console.assert(a, b)
        }

        function e(a) {
            if (a)
                for (var b in a) a.hasOwnProperty(b) && (v[b] = a[b])
        }

        function f(d, e, f) {
            var g = a.extend({
                channel: v.channel
            }, e);
            "channel" in e && null == e.channel && delete g.channel;
            var h, i = g,
                j = (f || v.base_list_url) + d,
                k = Math.round((new Date).getTime()),
                l = a.ajax({
                    url: j,
                    type: "POST",
                    data: i,
                    timeout: 5e3,
                    xhrFields: {
                        withCredentials: !0
                    },
                    dataType: "jsonp"
                }).done(function() {
                    h = Math.round((new Date).getTime()), b("<- Post result in " + (h - k) + "ms., from " + j)
                }).fail(function(a) {
                    c("<- Post result ERROR from " + j + ", " + a.statusText)
                });
            return b("-> Post to: " + j), l
        }

        function g(a) {
            var b = "GetList",
                c = {
                    key: "XL_Favourites"
                };
            return a === !0 && (b = "GetExtendedList", c.key = "XL_Favt_Videos", c.channel = "system"), f(b, c)
        }

        function h() {
            var a = "GetList",
                b = {
                    key: "XL_Favourites"
                };
            return a = "GetExtendedList", b.key = "XL_Favourites", b.channel = "xl", f(a, b)
        }

        function i(a) {
            if (!a) throw "parameter 'objectId' missing";
            return f("PostVideo", {
                key: "XL_Favourites",
                videoId: a,
                parameters: null
            })
        }

        function j(a) {
            if (!a) throw "parameter 'objectId' missing";
            return f("DeleteVideo", {
                key: "XL_Favourites",
                videoId: a
            })
        }

        function k(a) {
            if (!a) throw "parameter 'objectId' missing";
            return f("PostVideo", {
                key: "XL_Later",
                videoId: a,
                parameters: null
            })
        }

        function l(a) {
            if (!a) throw "parameter 'objectId' missing";
            return f("DeleteVideo", {
                key: "XL_Later",
                videoId: a
            })
        }

        function m(a) {
            var b = a === !0 ? "GetExtendedList" : "GetList";
            return f(b, {
                key: "XL_Later"
            })
        }

        function n(a) {
            if (!a) throw "parameter 'objectId' missing";
            return d("string" == typeof a, "String expected as history objectId"), f("PostVideo", {
                key: "XL_History",
                videoId: a,
                parameters: null
            })
        }

        function o(a) {
            var b = a === !0 ? "GetExtendedList" : "GetList";
            return f(b, {
                key: "XL_History"
            })
        }

        function p() {
            var a = "DeleteAllVideos";
            return f(a, {
                key: "XL_History"
            })
        }

        function q(b) {
            var c = a.extend({
                    channel: b.channel || "system",
                    key: b.key || "XL_Spotlight",
                    product: b.product || "rtlxl"
                }, b),
                d = "GetSpotlightList";
            return f(d, {
                channel: c.channel,
                key: c.key,
                product: c.product,
                device: "desktop"
            })
        }

        function r(a, b) {
            var c = "GetSpotlightList";
            return f(c, {
                device: b,
                product: a,
                channel: "system",
                key: "XL_Spotlight"
            })
        }

        function s(a, b, c) {
            var d = {
                channel: null,
                deviceClass: a,
                uuid: b,
                product: c.product || "rtlxl"
            };
            return f("Add", d, v.base_spotlight_url)
        }

        function t(a, b, c) {
            var d = {
                channel: null,
                deviceClass: a,
                uuid: b,
                product: c.product || "rtlxl"
            };
            return f("Delete", d, v.base_spotlight_url)
        }

        function u(a) {
            var b = {
                uuid: a
            };
            return f("Check", b, v.base_spotlight_url)
        }
        var v = {
            base_list_url: "http://test-myrtl.rtl.nl/VideoListJson/",
            base_spotlight_url: "http://test-myrtl.rtl.nl/Spotlight/",
            base_auth_url: "http://www.rtl.nl/system/xlv3/check.html",
            channel: "xl",
            debug: location.hostname.search(/localhost/g) > -1
        };
        return {
            setOptions: e,
            getFavouriteOnlyList: h,
            getFavourites: g,
            setFavourite: i,
            removeFavourite: j,
            addWatchLater: k,
            removeWatchLater: l,
            getWatchLaterList: m,
            addToHistory: n,
            getHistoryList: o,
            clearHistory: p,
            getSpotlightList: q,
            getSpotlightListSpec: r,
            addToSpotlight: s,
            deleteFromSpotlight: t,
            checkOnSpotlight: u
        }
    }(jQuery),
    function(a) {
        function b(b, d) {
            var b = a.extend({}, b),
                e = [];
            for (var f in b) null != b[f] && e.push(f + "=" + encodeURIComponent(b[f]));
            e = e.join("&");
            var d = d ? d : c.base_url,
                g = a("<a>", {
                    href: d
                })[0];
            d += g.search ? "&" : "?", d += e;
            var h = a.ajax({
                url: d,
                dataType: "jsonp"
            });
            return h
        }
        var c = {
                base_url: "https://rtlid.rtl.nl/api/Channel.JSON",
                newsletter_token: "2ZiPLZANTNTSCELVoV14rg==",
                api_token: "GzEgLmGVUCtfjhELQglnP7rYkCxTs0vvsddCPaNfS1WkNjxgdcgztGT1nUvlRRWmR2shaaIMIlory+/23MoyzY6Trw8r4tOpVcaSR6men94="
            },
            d = {
                getStatus: function() {
                    var a = b({
                        newsletter: c.newsletter_token,
                        api_token: c.api_token
                    });
                    return a.then(function() {}), a
                },
                callUrl: function(a) {
                    return b({
                        api_token: c.api_token
                    }, a)
                }
            };
        window.RtlId.Newsletters = d
    }(jQuery), RtlId.MijnRTL = function() {
        this.favorites = [], this.watchLater = []
    }, RtlId.MijnRTL.prototype = {
        getPlaylist: function() {}
    }, window.RTL = window.RTL ? window.RTL : {}, RTL.xl = RTL.xl ? RTL.xl : {};
var RTLXL = RTLXL || {};
RTLXL.Util = function() {
    return {
        isSilverlightDisabled: function() {
            try {
                var a = navigator.plugins["Silverlight Plug-In"];
                if (a) {
                    if (!("ActiveXObject" in window)) return !1;
                    try {
                        new ActiveXObject("AgControl.AgControl")
                    } catch (b) {
                        return !0
                    }
                }
            } catch (c) {}
            return !1
        },
        readCookie: function(a) {
            for (var b = a + "=", c = document.cookie.split(";"), d = 0; d < c.length; d++) {
                for (var e = c[d];
                    " " == e.charAt(0);) e = e.substring(1, e.length);
                if (0 == e.indexOf(b)) return e.substring(b.length, e.length)
            }
            return null
        },
        createCookie: function(a, b, c) {
            if (c) {
                var d = new Date;
                d.setTime(d.getTime() + 24 * c * 60 * 60 * 1e3);
                var e = "; expires=" + d.toGMTString()
            } else var e = "";
            document.cookie = a + "=" + b + e + "; path=/"
        },
        trunc: function(a, b, c) {
            if (a) {
                var c = c ? c : "&hellip;";
                return a.substr(0, b - 1) + (a.length > b - 1 ? c : "")
            }
        },
        getQueryParam: function(a) {
            return decodeURIComponent((new RegExp("[?|&]" + a + "=([^&;]+?)(&|#|;|$)").exec(location.search) || [, ""])[1].replace(/\+/g, "%20")) || null
        },
        isSameDay: function(a, b) {
            return a && b ? a.getFullYear() === b.getFullYear() && a.getMonth() === b.getMonth() && a.getDate() === b.getDate() : !1
        },
        anyMatchInArray: function(a, b) {
            for (var c = !1, d = 0, e = b.length; !c && e > d; d++) a.indexOf(b[d]) > -1 && (c = !0);
            return c
        }
    }
}(window), RTLXL.DOMMeta = function() {
    "use strict";

    function a(a, b) {
        for (var b = b || "name", c = document.getElementsByTagName("meta"), d = {}, e = 0; e < c.length; e++) {
            var f = c[e].getAttribute(b);
            f && (d[f] = c[e])
        }
        for (var g in a) {
            var h = d[g];
            h && h.parentNode.removeChild(h);
            var i = document.createElement("meta");
            i.setAttribute(b, g), i.setAttribute("content", a[g]), i.setAttribute("data-src", "js"), document.getElementsByTagName("head")[0].appendChild(i)
        }
    }
    return {
        addMetaTags: function(b, c) {
            return a(b, c)
        }
    }
}(window), RTLXL.PlatformDetect = {}, RTLXL.Mobile = function() {
    function a() {
        var a = navigator.userAgent,
            b = "";
        return b = /iPhone|iPad|iPod/i.test(a) ? "ios" : /(?=.*Android)(?=.*Mobile).*/i.test(a) ? "android-phone" : /Android/i.test(a) ? "android-tablet" : /Blackberry|RIM\sTablet/i.test(a) ? "blackberry" : /Windows Phone/i.test(a) ? "windows-phone" : /(?=.*Windows)(?=.*Touch).*/i.test(a) ? "windows-tablet" : "unknown", {
            device: b,
            hasHtml5Video: !!document.createElement("video").canPlayType,
            isMobile: function() {
                return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini|Mobile/i.test(a) ? !0 : !1
            },
            isMac: function() {
                return navigator.platform.indexOf("MacIntel") >= 0
            },
            isChrome: function() {
                return !!window.chrome
            },
            isIPad: function() {
                return null !== a.match(/iPad/i)
            },
            isIPhone: function() {
                return null !== a.match(/iPhone/i)
            },
            iOSVersion: function() {
                var a = navigator.userAgent.match(/OS (\d+)_/i);
                return a && a[1] ? a[1] : void 0
            },
            isAndroidTablet: function() {
                return "android-tablet" == b
            },
            isAndroidPhone: function() {
                return "android-phone" == b && !this.isAndroidTablet()
            },
            isWindowsTablet: function() {
                return "windows-tablet" == b
            },
            isWindowsPhone: function() {
                return "windows-phone" == b
            }
        }
    }

    function b(b) {
        if (b) {
            var f = a(),
                g = f.device;
            /ios/.test(g) ? (document.location = "rtlxl://" + b, d = setTimeout(function() {
                window.confirm("Je hebt de RTL XL app niet geÃ¯nstalleerd. Wil je deze app installeren?") ? document.location = e.Apple : (clearTimeout(d), d = null)
            }, 300), window.addEventListener("pagehide", c)) : /^android/.test(g) && window.confirm("Wil je de video openen in de RTL XL App?") && (document.location = "rtlxl://" + b)
        }
    }

    function c() {
        clearTimeout(d), d = null, window.removeEventListener("pagehide", c)
    }
    var d = null,
        e = {
            Google: "https://play.google.com/store/apps/details?id=com.tapptic.rtl5.rtlxl&hl=nl",
            Apple: "https://itunes.apple.com/nl/app/rtl-xl/id411290027?mt=8",
            Windows: "http://www.windowsphone.com/"
        };
    return {
        appStart: b,
        detect: a
    }
}(window), RTL.xl.platform = RTLXL.Mobile.detect(), RTL.xl.slugify = function() {
    var a = {
            "Ã¢": "a",
            "Ã ": "a",
            "Ã¡": "a",
            "Ã¤": "a",
            "Ã„": "a",
            "Ã": "a",
            "Ã€": "a",
            "Ã‚": "a",
            "Ã‡": "c",
            "Ã§": "c",
            "Ãª": "e",
            "Ã¨": "e",
            "Ã«": "e",
            "Ã©": "e",
            "Ã‰": "e",
            "Ã‹": "e",
            "Ãˆ": "e",
            "ÃŠ": "e",
            "Ã®": "i",
            "Ã¬": "i",
            "Ã¯": "i",
            "Ã­": "i",
            "Ã": "i",
            "Ã": "i",
            "ÃŒ": "i",
            "ÃŽ": "i",
            "Ã´": "o",
            "Ã²": "o",
            "Ã¶": "o",
            "Ã³": "o",
            "Ã“": "o",
            "Ã–": "o",
            "Ã’": "o",
            "Ã”": "o",
            "Ã»": "u",
            "Ã¹": "u",
            "Ã¼": "u",
            "Ãº": "u",
            "Ãš": "u",
            "Ãœ": "u",
            "Ã™": "u",
            "Ã›": "u",
            "Ã¿": "y",
            "Ã½": "y",
            "Ã": "y",
            "Å¸": "y"
        },
        b = /(\u00C0|\u00C1|\u00C2|\u00C3|\u00C4|\u00C5|\u00C7|\u00C8|\u00C9|\u00CA|\u00CB|\u00CC|\u00CD|\u00CE|\u00CF|\u00D2|\u00D3|\u00D4|\u00D5|\u00D6|\u00D9|\u00DA|\u00DB|\u00DC|\u00DD|\u00E0|\u00E1|\u00E2|\u00E3|\u00E4|\u00E5|\u00E7|\u00E8|\u00E9|\u00EA|\u00EB|\u00EC|\u00ED|\u00EE|\u00EF|\u00F2|\u00F3|\u00F4|\u00F6|\u00F9|\u00FA|\u00FB|\u00FC|\u00FD|\u00FF)/g;
    return function(c) {
        if (!c) return void 0;
        var d = c.replace(b, function(b) {
            return b && a[b] ? a[b] : void 0
        }).toLowerCase().replace(/\W/g, "-").replace(/(\-){2,}/g, "-").replace(/(\-)$/, "");
        return d
    }
}(), RTL.xl.sanitizeVFDMaterial = function(a, b, c, d) {
    return a.synopsis && a.title && a.name ? a : (ruf(d).forEach(function(b) {
        return b.key === a.episode_key ? (a.title = a.title ? a.title : b.name, a.synopsis = a.synopsis ? a.synopsis : b.synopsis, a.genre = b.genre, !0) : void 0
    }), a.genre = a.genre || "", a.synopsis = a.synopsis ? a.synopsis : c.synopsis ? c.synopsis : b.synopsis, a.progsubtype = b.progsubtype, a.url = ruf("/#!/{0}-{1}/{2}").format([RTL.xl.slugify(a.name), a.season_key, a.uuid]), a)
}, RTL.xl.isPaid = function(a) {
    return VFD.util.isPaid(a)
}, RTL.xl.isLongForm = function(a) {
    if (a.ddr_timeframes) {
        var b = (Date.now(), ruf(a.ddr_timeframes).forEach(function(a) {
            return a.tariff > 0 ? !0 : void 0
        }) || !1);
        return b
    }
    return ruf().console("error", "object provided to isLongForm method contains no ddr_timeframes property"), new Error("object provided to isLongForm method contains no ddr_timeframes property")
}, RTLXL.config = {
    links: {
        svodHelp: "https://rtlxl.zendesk.com/hc/nl/articles/201355312"
    },
    rtlid: {
        base_list_url: "http://myrtl.rtl.nl/VideoListJson/",
        base_auth_url: "http://www.rtl.nl/system/xlv3/check.html",
        base_spotlight_url: "http://myrtl.rtl.nl/Spotlight/",
        logoff_url: "https://rtlid.rtl.nl/LogOn/Logoff?returnto=",
        logon_url: "https://rtlid.rtl.nl/LogOn?channel=xl&returnto=",
        base_rtlid_url: "https://rtlid.rtl.nl",
        newsletter_signup_url: "https://rtlid.rtl.nl/form/xl/",
        edit_profile_url: "https://rtlid.rtl.nl/Form/rtlid_profile",
        edit_email_url: "https://rtlid.rtl.nl/Profiel/WijzigEmailAdresAanvraag",
        edit_password_url: "https://rtlid.rtl.nl/Profiel/ResetWachtwoordAanvraag",
        delete_profile_url: "https://rtlid.rtl.nl/profiel/verwijderregistratieaanvraag"
    },
    drmServer: {
        host: "http://licenseproxy.rtl.nl/"
    },
    rightsmanager: {
        playready: "http://licenseproxy.rtl.nl/RightsManager.asmx",
        widevine: "http://licenseproxy.rtl.nl/Drm/Widevine"
    },
    ask: {
        rtlviewmode: "extern"
    },
    licenseproxy: {
        host: "http://licenseproxy.rtl.nl"
    },
    videoplayer: {
        player_detect_version: "1.0",
        host: "http://www.rtl.nl"
    },
    payments: {
        host: "http://betalen.rtl.nl"
    },
    recommendations: {
        apiBaseUrl: "http://srapi.rtlxl.nl/api/1.0/"
    },
    svodShop: {
        ab: {
            variant1: "Pages/#!/meerxl"
        }
    },
    env: "prod"
};
var rtlxl = window.angular.module("rtlxlApp", ["analytics", "angularLocalStorage", "ngRoute", "mailchimp"]);
! function() {
    rtlxl.constant("svodPrice", 3.99);
    var a = ["$route", function(a) {
        var b = a.current.params["abstract"],
            c = b.split("-");
        if (c.length > 1) return c[c.length - 1];
        throw "Invalid abstract key"
    }];
    rtlxl.config(["$locationProvider", "$routeProvider", "$provide", function(b, c) {
        var d = window.location.hash;
        0 === d.indexOf("#/u") && (window.location.hash = "#!" + d.substring(1)), 0 === d.indexOf("#/a") && (window.location.hash = "#!" + d.substring(1)), "#_=_" === d && (window.location.hash = "", history.pushState("", document.title, window.location.pathname)), 0 === d.indexOf("#%21") && (window.location.hash = d.replace("#%21", "#!")), b.html5Mode(!1), b.hashPrefix("!"), c.when("/", {
            templateUrl: "views/pages/home.html",
            controller: "HomePageCtrl"
        }).when("/vooruitkijken", {
            templateUrl: "views/pages/vooruitkijken.html",
            controller: "VooruitkijkenPageCtrl"
        }).when("/gemist", {
            templateUrl: "views/pages/gemist.html",
            controller: "GemistPageCtrl"
        }).when("/sport", {
            templateUrl: "views/pages/sports.html",
            controller: "SportsPageCtrl"
        }).when("/unicorn", {
            templateUrl: "views/pages/unicorn.html",
            controller: "unicorn"
        }).when("/gemist/:abstract", {
            templateUrl: "views/pages/program.html",
            controller: "ProgramPageCtrl",
            resolve: {
                abstractKey: a
            }
        }).when("/gemist/:abstract/:section", {
            templateUrl: "views/pages/program.html",
            controller: "ProgramPageCtrl",
            resolve: {
                abstractKey: a
            }
        }).when("/gemist/:abstract/:section/:season", {
            templateUrl: "views/pages/program.html",
            controller: "ProgramPageCtrl",
            resolve: {
                abstractKey: a
            }
        }).when("/programmas/:section", {
            templateUrl: "views/pages/bladeren.html",
            controller: "BladerenPageCtrl"
        }).when("/nieuwsbrief", {
            templateUrl: "views/pages/newsletter.html",
            controller: "NewsletterPageCtrl"
        }).when("/a/:abstractKey", {
            redirectTo: function(a) {
                return "/gemist/-" + a.abstractKey
            }
        }).when("/u/:uuid", {
            templateUrl: "views/pages/video.html",
            controller: "PlayerPageCtrl"
        }).when("/mijnrtl", {
            templateUrl: "views/pages/mijnrtl.html",
            controller: "MijnRTLCtrl"
        }).when("/mijnrtl/:tab", {
            templateUrl: "views/pages/mijnrtl.html",
            controller: "MijnRTLCtrl"
        }).when("/check", {
            templateUrl: "views/pages/help.html",
            controller: "HelpCtrl"
        }).when("/meerxl", {
            templateUrl: "views/pages/subscribe.html",
            controller: "SubscribeCtrl"
        }).when("/meerxl/:variant", {
            templateUrl: "views/pages/subscribe.html",
            controller: "SubscribeCtrl"
        }).when("/:abstract/:uuid", {
            templateUrl: "views/pages/video.html",
            controller: "PlayerPageCtrl"
        }).when("/telekids", {
            templateUrl: "views/pages/telekids.html",
            controller: "TelekidsLandingCtrl"
        }).when("/live-tv", {
            templateUrl: "views/pages/live.html",
            controller: "LiveTvPageCtrl",
            className: "body-live-tv"
        }).otherwise({
            redirectTo: "/"
        })
    }]), rtlxl.run(["$rootScope", function(a) {
        setTimeout(function() {
            $.smartbanner({
                title: "RTL XL",
                author: "RTL Nederland",
                appStoreLanguage: "nl",
                appendToSelector: "#content"
            })
        }, 500);
        var b = !1;
        a.$on("$routeChangeStart", function() {
            if (b !== !0 && (b = !0, /Android|webOS|iPhone|iPad|iPod|BlackBerry|Windows Phone/i.test(navigator.userAgent) && "true" !== $.cookie("rtlxl_force_desktop"))) {
                var a = "mobile.html",
                    c = /[a-z0-9]{8}\-[a-z0-9]{4}\-[a-z0-9]{4}\-[a-z0-9]{4}\-[a-z0-9]{12}/i.exec(window.location);
                c && (a += "#!" + c[0]), window.location = a
            }
        });
        var c = "";
        a.$on("$routeChangeSuccess", function(a, b) {
            var d = b.$$route ? b.$$route.originalPath.split("/")[1] || "home" : "home";
            c !== d && (ruf("body").addClass(d), ruf("body").removeClass(c), c = d)
        }), a.loader = {
            dataLoading: !1,
            params: {
                radius: 7,
                css: {
                    zIndex: 0,
                    borderRadius: "50%",
                    width: "6px",
                    height: "6px"
                }
            }
        }
    }]), rtlxl.run(["$rootScope", "$templateCache", "$compile", "$http", function(a, b, c, d) {
        function e(b) {
            a.ie_error = !0;
            var d = c(b)(a);
            d.show(), $("#site-header").append(d)
        }
        var f = ruf();
        if (f.browser.isLegacyIe && f.browser.legacyIeVersion < 9) {
            var g = "views/modals/ie_error.html",
                h = b.get(g);
            h ? e(h) : d.get(g, {}).then(function(a) {
                b.put(g, a.data), h = a.data, e(h)
            })
        }
    }]), rtlxl.run(["analytics", function(a) {
        a.autoTrack()
    }]), rtlxl.run(["analytics", "askservice", "$rootScope", function(a, b) {
        window.fbAsyncInit = function() {
                try {
                    FB.Event.subscribe("edge.create", function(c, d) {
                        a.send("social", {
                            socialNetwork: "facebook",
                            socialAction: "like",
                            socialTarget: c
                        }), b.click(d, "like", {
                            action: "facebook"
                        })
                    }), FB.Event.subscribe("edge.remove", function(c, d) {
                        a.send("social", {
                            socialNetwork: "facebook",
                            socialAction: "unlike",
                            socialTarget: c
                        }), b.click(d, "unlike", {
                            action: "facebook"
                        })
                    })
                } catch (c) {}
            },
            function(a, b, c) {
                var d, e = a.getElementsByTagName(b)[0];
                a.getElementById(c) || (d = a.createElement(b), d.id = c, d.src = "//connect.facebook.net/nl_NL/all.js#xfbml=1&appId=374945769252702", e.parentNode.insertBefore(d, e))
            }(document, "script", "facebook-jssdk")
    }]), rtlxl.run(["$q", "$rootScope", "$log", "analytics", "rtlidService", "Tips", function(a, b, c, d, e, f) {
        var g = a.defer();
        b.checkEditmode = g.promise, RTL.rtlAccount.loginStatusChanged.then(function(a) {
            var h = a && a.isLoggedIn === !0;
            g.resolve(e.inEditMode()), h === !0 ? (b.currentUser = a, e.getAll().then(function(a) {
                b.mijnRtl = a, b.$broadcast("mijnRtlUpdate", {})
            }, function() {}), f.getVotingHistory().then(function(a) {
                b.votingHistory = a
            }, function() {
                c.warn("srapi history.json error")
            }), d.sendEvent("Mijn RTL", "status-ingelogd", a.rtlId)) : b.currentUser = null
        })
    }]), rtlxl.run(["$timeout", "$rootScope", "configservice", function(a, b, c) {
        if (RTL && RTL.init) {
            var d = c.getConfig().ask,
                e = RTLXL.Util.getQueryParam("rtlviewmode");
            e && ("/" === e.charAt(e.length - 1) && (e = e.substr(0, e.length - 1)), d.rtlviewmode = e.replace(/^\//g, "")), window.rtlviewmode = d.rtlviewmode, window.rtlsuppresslogging = !0, a(function() {
                RTL.init({
                    settings: {
                        initOnReady: !1,
                        viewOnInit: !1
                    },
                    metabar: {
                        visible: !1
                    },
                    meta: {
                        type: "home",
                        publicatiepunt: "rtlxlnl",
                        nav: "home",
                        collections: "rtlxl",
                        navprefix: "rtlxl",
                        datasource: "abstractkey"
                    },
                    ads: {
                        infiniteSlots: !0,
                        datasource: "abstractkey"
                    },
                    stats: {
                        datasource: "abstractkey",
                        defaultStation: "rtlxl"
                    }
                })
            })
        }
        b.$on("metaReady", function() {
            RTL && RTL.event && RTL.event.once(function() {
                RTL.event.fire("init"), RTL.event.once(function() {
                    RTL.event.fire("view")
                }, "initdone")
            }, "ready", !0)
        })
    }])
}(), rtlxl.controller("AppCtrl", ["$rootScope", "$route", "$scope", "askservice", "rtlidService", "analytics", "$interval", "$timeout", "storage", "usabilla", function(a, b, c, d, e, f, g, h, i, j) {
        "use strict";
        c.appCtrl = {
            metaReady: !1,
            TeleKidsMode: !1,
            adsEnabled: !1,
            hasSubscription: !1,
            editmode: !1,
            showProposition: {
                home: !1,
                gemist: !1
            },
            showRetention: {
                home: !1
            }
        }, c.$on("$routeChangeSuccess", function(a, d) {
            d !== a && (c.routeClassName = b.current.className)
        }), c.loginUrl = RTLXL.config.rtlid.logon_url, c.isLoggedIn = !1, c.isLoggedOut = !1, c.isHelpMobile = RTLXL.Mobile.detect().isMobile(), a.$on("metaReady", function() {
            c.appCtrl.metaReady = !0
        }), RTL.rtlAccount.loginStatusChanged.then(function(a) {
            h(function() {
                j.set({
                    Subscription: a.hasSubscription ? "Ja" : "Nee",
                    Ingelogd: a.isLoggedIn ? "Ja" : "Nee"
                }), a.isLoggedIn && j.set({
                    "RTL ID": a.rtlId
                }), c.isLoggedIn = a.isLoggedIn, c.isLoggedOut = !a.isLoggedIn, c.appCtrl.hasSubscription = a && a.hasSubscription, c.appCtrl.hasHadSubscription = a && a.hasHadSubscription, c.appCtrl.TeleKidsMode = e.isInTelekidsMode(), c.appCtrl.adsEnabled = !e.isInTelekidsMode() && !c.appCtrl.hasSubscription, c.appCtrl.editmode = e.inEditMode(), c.appCtrl.hasSubscription || c.appCtrl.hasHadSubscription || (c.appCtrl.showProposition.home = !i.get("hide-proposition-home"), c.appCtrl.showProposition.gemist = !i.get("hide-proposition-gemist"), i.get("hide-retention-home", !1)), !a.hasHadSubscription || a.hasSubscription || RTL.xl.platform.isMobile() || (c.appCtrl.showRetention.home = !i.get("hide-retention-home"))
            }), h(function() {
                c.appCtrl.adsEnabled && d.domchange()
            }, 100)
        }), e.on("TelekidsModeChanged", function(a) {
            c.appCtrl.TeleKidsMode = a, c.appCtrl.adsEnabled = !a && !c.appCtrl.hasSubscription
        }), a.$on("ga.before_send", function() {
            if (e.isLoggedIn() && a.currentUser) {
                var b = a.currentUser.rtlId;
                f.setField("dimension1", b), f.set("&uid", b)
            } else f.setField("dimension1")
        }), a.$on("$routeChangeSuccess", function() {
            a.navPage = null, VFD.client.setOptions(e.isInTelekidsMode() === !0 ? {
                product: "telekids"
            } : {
                product: !1
            })
        })
    }]), rtlxl.controller("navCtrl", ["$scope", "$location", "$route", "$rootScope", "rtlidService", function(a, b, c, d, e) {
        "use strict";
        a.navClass = function(a) {
            var c = b.path().substring(1) || "",
                f = [];
            return (a === c || a === d.navPage) && f.push("selected"), e.isInTelekidsMode() !== !0 || "films" !== a && "vooruitkijken" !== a || f.push("hidden"), f.join(" ")
        }
    }]), rtlxl.controller("MijnRTLCtrl", ["$scope", "$document", "$timeout", "askservice", "rtlidService", function(a, b, c, d, e) {
        "use strict";
        b[0].title = "Mijn RTL XL profiel", a.tabClick = function() {}, a.generateUrl = function(b) {
            return void 0 === b.uuid ? a.abstractUrl(b["abstract"]) : a.materialUrl(b)
        }, a.generateImgUrl = function(b) {
            return a.currentTab === a.tabs[0].name ? VFD.util.coverUrl(b) : "uitzending" === b.classname ? VFD.util.coverBaseUrl() + "l/pc/" + b.uuid : VFD.util.screenshotBaseUrl() + "sz=355x200/uuid=" + b.uuid
        }, a.checkCurrentTab = function(b) {
            return a.currentTab !== a.tabs[0].name ? b : void 0
        }, a.showPaid = function(b) {
            return a.currentTab !== a.tabs[0].name ? a.isPaid(b) : void 0
        }, a.prevPage = function() {
            a.getPagePos(-1)
        }, a.nextPage = function() {
            a.currentPage >= a.totalPages - 1 && a.items.length < a.totalItems, a.getPagePos(1)
        }, a.setScroll = function() {
            var b = $(".scroll-hor").width() / a.totalPages,
                c = b * (a.currentPage - 1);
            c === parseInt($(".scroll-slider").css("left"), 10) ? (c = b + c, setTimeout(function() {
                $(".scroll-slider").css("left", c)
            }, 50)) : $(".scroll-slider").css("left", c)
        }, a.onClearHistory = function(b) {
            var d = $(b.currentTarget);
            d.hasClass("disabled") || e.clearHistory().then(function() {
                d.addClass("disabled"), $("#history-message").text("Kijkgeschiedenis gewist"), c(function() {
                    a.items = [], a.calculatePages()
                })
            }, function() {})
        }
    }]), rtlxl.controller("PlayerPageCtrl", ["$scope", "$timeout", "$routeParams", "askservice", "rtlidService", "dcrservice", "$route", "$rootScope", "$q", "AbTest", function(a, b, c, d, e, f, g, h, i, j) {
        "use strict";
        var k = c.uuid,
            l = window.location.href.replace(/((\/){1}(\w|\-)+)$/, "").replace(/(\S)+(\#\!\/)/, "#!/gemist/");
        a.isPaid = !1, a.success = !0, a.isMobile = RTLXL.Mobile.detect().isMobile(), a.isMobileOverlayClosed = !1, a.programUrl = l, a.episodesUrl = l + "/uitzending", a.fragmentsUrl = l + "/eps_fragment,fragmenten", a.bonusUrl = l + "/onlineonly", ruf("get").http("http://www.rtl.nl/system/s4m/vfd/version=2/fun=viewcount/uuid=" + k).then(function(b) {
            a.viewCount = b.counter
        }), a.closeMobileOverlay = function() {
            a.isMobileOverlayClosed = !0
        }, RTL.rtlAccount.loginStatusChanged.then(function() {
            b(function() {
                a.editmode = e.inEditMode()
            })
        }), a.dartRect = !1, h.$watch("playerEvent", function() {
            "content_start" === h.playerEvent && (a.dartRect = !0, setTimeout(d.domchange, 100)), "ad_start" === h.playerEvent && (a.dartRect = !1, setTimeout(d.domchange, 100))
        }), VFD.client.getMaterial(k, {
            fmt: "smooth"
        }).then(function(c) {
            if (!c.material.length) return a.success = !1, d.setMeta({
                type: "404",
                nav: d.cleanNav(k),
                titel: "Video niet gevonden"
            }), void d.metaReadyDelayed(200);
            a.success = !0, a.material = new VFD.Model(c).getMaterials()[0], a.meta = c.meta, VFD.client.getAbstract(a.material.abstract_key, {
                sk: a.material.season_key,
                cf: "allow%20uitzending",
                pg: 1
            }).then(function(b) {
                a.episodes = {
                    type: "new",
                    items: b.material.splice(0, 5),
                    hasContent: function() {
                        return this.items.length > 0
                    }
                }
            }), VFD.client.getAbstract(a.material.abstract_key, {
                sk: a.material.season_key,
                cf: "deny%20uitzending",
                pg: 1
            }).then(function(c) {
                a.fragments = {
                    type: "new",
                    items: ruf(c.material).filter(function(a) {
                        var b = ["onlineonly"];
                        return -1 === b.indexOf(a.classname)
                    }).splice(0, 5),
                    hasContent: ruf().once(function() {
                        var d = ["fragment", "eps_fragment"],
                            e = ruf(c.material).forEach(function(a) {
                                return d.indexOf(a.classname) > -1 ? !0 : void 0
                            }) || !1;
                        return b(function() {
                            a.fragmentsUrl = e ? a.fragmentsUrl : l
                        }), this.items.length > 0
                    })
                }
            }), VFD.client.getAbstract(a.material.abstract_key, {
                sk: a.material.season_key,
                cf: "allow%20onlineonly",
                pg: 1
            }).then(function(b) {
                a.bonus = {
                    type: "new",
                    items: b.material.splice(0, 5),
                    hasContent: function() {
                        return this.items.length > 0
                    }
                }
            }), a.material && (a.progLogo = VFD.util.progLogoUrl(a.meta.proglogo_base_url, {
                key: a.material.abstract_key
            })), ruf().defer().all([RTL.rtlAccount.loginStatusChanged, j.showLoginWall()]).then(function(b) {
                var c = b[0],
                    d = b[1];
                a.showLoginWall = function() {
                    var b = RTL.xl.isLongForm(a.material) && !RTL.xl.isPaid(a.material) && !c.isLoggedIn && d ? !0 : !1;
                    return b
                }()
            }), a.$emit("hasMaterial", a.material), d.setMeta({
                type: "article",
                nav: d.cleanNav(a.material["abstract"].name),
                ui: a.material.uuid,
                titel: a.material.title,
                abstractkey: a.material.abstract_key,
                seasonkey: a.material.season_key
            }), d.metaReadyDelayed(200), h.$on("NLZietContext", function(a, b) {
                b === !0 && $(".web-link.nlziet").removeClass("disabled")
            }), a.websiteUrl = c.seasons.length && c.seasons[0].website ? c.seasons[0].website : a.material["abstract"].website, !a.websiteUrl && c.seasons.length && f.seasonConfig(a.material["abstract"].key).then(function(b) {
                b.data.Url && (a.websiteUrl = "http://www.rtl.nl" + b.data.Url)
            }), a.display_date = a.material.display_date ? moment(1e3 * a.material.display_date).format("dd D MMM YYYY") : "", a.isLive = "livestream" === a.material.classname, a.isLive && (a.display_date = "live"), a.abstractPagePath = "#!/" + VFD.util.abstractPath(a.material["abstract"]), a.duration = VFD.util.parseDuration(a.material.duration), a.isoDuration = a.material.duration, a.isoOriginalDate = moment(1e3 * a.material.original_date).format("YYYY-MM-DDTHH:mm:ss.SS Z"), a.datetime = moment(1e3 * a.material.display_date).format("YYYY-MM-DDTHH:mm:ssZ"), a.isPaid = VFD.util.isPaid(a.material), a.abstractPageTitle = a.material["abstract"].name + " uitzendingen", a.titleEpisodeStrip = "Afleveringen";
            var e, g, i = a.material["abstract"].name,
                m = moment(1e3 * a.material.display_date).format("dddd D MMMM YYYY");
            "eps_fragment" === a.material.classname ? (e = a.material.title, g = "Video over: " + a.material.title + ". Dit filmpje kijken uit " + i + " van " + m + ".") : "165740" === a.material.abstract_key ? (e = a.material.title + " online kijken!", g = "De film " + a.material.episode.name + "? Huren kan voor een klein bedrag. Kijk nu in de beste kwaliteit en met ondertiteling!") : (e = "Aflevering " + i + " - " + m + " terugkijken", g = "De uitzending " + a.material.title + " gemist van " + i + " " + m + "? Nu kijken!"), ruf('head link[rel="canonical"]').forEach(function(a) {
                a.parentNode && a.parentNode.removeChild(a)
            });
            var n = document.getElementsByTagName("head")[0],
                o = document.createElement("link"),
                p = "http://www.rtlxl.nl/#!/" + VFD.util.materialPath(a.material);
            o.setAttribute("rel", "canonical"), o.setAttribute("href", p), n.appendChild(o), document.title = e, window.RTLXL.DOMMeta.addMetaTags({
                description: g
            }, "name"), a.material.ddr_allow_sharing === !0 && (window.RTLXL.DOMMeta.addMetaTags(VFD.util.getMaterialOgData(a.material), "property"), ruf('meta[name^="twitter:"]').forEach(function(a) {
                a.parentNode && a.parentNode.removeChild(a)
            }), window.RTLXL.DOMMeta.addMetaTags(VFD.util.getMaterialTwitterData(a.material), "name"))
        }).fail(function() {
            d.setMeta({
                type: "404",
                nav: d.cleanNav(k),
                titel: "Video niet gevonden"
            }), d.metaReadyDelayed(200), a.success = !1
        })
    }]), rtlxl.controller("BladerenPageCtrl", ["$scope", "askservice", "VideoFeedService", "$routeParams", function(a, b, c, d) {
        "use strict";
        document.title = "RTL XL | mis geen moment", b.setMeta({
            nav: "bladeren",
            type: "index"
        }, !0), b.metaReadyDelayed(300), a.section = d.section, "az" === a.section ? (a.az = "ABCDEFGHIJKLMNOPQRSTUVWXYZ#", a.feed = new c({
            type: "az"
        }), a.setFilter = function(b) {
            a.azFilter !== b && (a.azFilter = b, a.feed.setItemFilter(a.azFilter ? {
                azFilter: a.azFilter
            } : null))
        }, a.setFilter("A")) : "populair" === a.section ? a.feed = new c({
            type: "populair"
        }) : "aanbevolen" === a.section && (a.feed = new c({
            type: "tips"
        })), a.feed && a.feed.page.load()
    }]), rtlxl.controller("ProgramPageCtrl", ["$rootScope", "$scope", "$routeParams", "$timeout", "$location", "VideoFeedService", "abstractKey", "askservice", "rtlidService", "xlService", "dcrservice", "$route", function(a, b, c, d, e, f, g, h, i, j) {
        "use strict";

        function k(a) {
            if (a.items.length > 1) {
                var d = a.items[0];
                b.topItem = {
                    item: d,
                    title: VFD.util.isPreview(d) ? "Vooruitkijken" : "Laatst uitgezonden",
                    url: "/#!/gemist/" + c["abstract"] + "/" + d.classname
                }, a.items.splice(0, 1), b.totalVooruitkijkItems = a.page.vooruitKijkItems
            }
        }

        function l(a) {
            b.abstracts.length && (b["abstract"] = b.abstracts[0], o("title", b["abstract"].name), b.title = b["abstract"].name, b.progLogo = VFD.util.progLogoUrl(b.meta.proglogo_base_url, b["abstract"]), b.websiteUrl = b["abstract"].website, o("coverUrl", "http://covers.rtl.nl/system/cover/l/carrousel/" + a.seasons[0].key), b.coverUrl = "http://covers.rtl.nl/system/cover/l/carrousel/" + a.seasons[0].key, document.title = b.title + " gemist? Nu een uitzending terugkijken.", window.RTLXL.DOMMeta.addMetaTags({
                description: "Als u een uitzending gemist heeft van " + b.title + " kunt u deze op RTL XL snel vinden en in hoge kwaliteit online terug kijken."
            }, "name"), window.RTLXL.DOMMeta.addMetaTags(VFD.util.getAbstractOgData(b["abstract"], b.seasons[0] || null), "property"), $('meta[name^="twitter:"]').remove(), window.RTLXL.DOMMeta.addMetaTags(VFD.util.getAbstractTwitterData(b["abstract"], b.seasons[0]), "name", function() {}))
        }

        function m(a) {
            var c, d, e, f, g;
            for (d in b.classes)
                if (b.classFilter === b.classes[d].classnames.join()) {
                    b.classTitle = b.classes[d].display;
                    break
                }
            if (b.usePeriodSeasons)
                for (b.seasons = [], b.usePeriodSeasons = !0, e = ["Zondag", "Maandag", "Dinsdag", "Woensdag", "Donderdag", "Vrijdag", "Zaterdag"], c = 0; 7 > c; c++) f = moment().subtract("days", c), g = "", g = 0 === c ? "Vandaag" : 1 === c ? "Gisteren" : e[f.day()], b.seasons.push({
                    name: g,
                    delta: c,
                    day: f.format("YYYY-MM-DD"),
                    key: g.toLowerCase()
                });
            else
                for (c = 0; c < a.length; c++)
                    for (d in a[c].materialcount)
                        if (b.classFilter.indexOf(d) >= 0) {
                            b.seasons.push(a[c]);
                            break
                        }
        }

        function n() {
            var a, c, d, e, g, i, n = j.getThumbstripSeasons(b.currentAbstract);
            n.then(function(j) {
                for (e = new VFD.Model(j), b.meta = j.meta, b.abstracts = j.abstracts, b.classes = e.classnames, e.seasons = e.seasons.reverse(), b.seasons = [], l(e), b.availableClasses = {}, a = 0; a < e.seasons.length; a++)
                    for (c in e.seasons[a].materialcount) b.availableClasses[c] = !0;
                if ("" === b.classFilter) {
                    b.seasons = e.seasons;
                    for (c in e.classnames) {
                        for (i = !1, a = 0; a < e.classnames[c].classnames.length; a++) e.classnames[c].classnames[a] in b.availableClasses && (i = !0);
                        i && (g = e.classnames[c].classnames.join(), d = new f({
                            type: "season",
                            classFilter: g,
                            key: b.currentAbstract,
                            title: e.classnames[c].display,
                            maxItems: "uitzending" === g ? 6 : 5,
                            maxVooruit: 1,
                            maxDateBack: b.usePeriodSeasons ? moment().subtract(7, "days").toDate() : null
                        }), "uitzending" === g && d.page.load().then(k), b.feeds.push(d))
                    }
                } else m(e.seasons), b.seasons.length > 0 && b.getSeason(b.currentSeason);
                h.setMeta({
                    type: "index",
                    nav: j.abstracts && j.abstracts.length ? h.cleanNav(j.abstracts[0].name) : "",
                    titel: j.abstracts && j.abstracts.length ? j.abstracts[0].name : "",
                    abstractkey: j.abstracts && j.abstracts.length ? j.abstracts[0].key : "",
                    seasonkey: b.currentSeason
                }), h.metaReady(), b.title || (b.notFound = !0)
            })
        }

        function o(b, c) {
            a.lastViewedProgram = a.lastViewedProgram || {}, a.lastViewedProgram[b] !== c && (a.lastViewedProgram[b] = c)
        }
        return "PROMO" === g ? void e.path("/") : (b.classFilter = c.section && c.section.length > 0 ? c.section : "", b.notFound = !1, b.currentAbstract = g, b.currentSeason = c.season, b.seasons = [], b.editmode = i.inEditMode(), a.navPage = "gemist", a.pageUrl = "/#!/gemist/" + c["abstract"], b.feeds = [], b.seasonFeed = null, b.usePeriodSeasons = ["210334", "132237", "215961"].indexOf(b.currentAbstract) >= 0, b.getSeason = function(a) {
            a ? b.currentSeason !== a && c.section && e.path("gemist/" + c["abstract"] + "/" + c.section + "/" + a, !1) : b.currentSeason = b.seasons.length ? b.seasons[0].key : null;
            for (var d = 0; d < b.seasons.length; d++) b.seasons[d].key === b.currentSeason && (b.season = b.seasons[d], b.season.website && (b.websiteUrl = b.season.website));
            if (b.usePeriodSeasons) {
                var g, h;
                b.season && (g = moment(b.season.day), g.add(5, "hours"), h = moment(g), h.add(1, "days")), b.seasonFeed = new f({
                    type: "season",
                    classFilter: b.classFilter,
                    key: b.currentAbstract,
                    daterange: [g.toDate(), h.toDate()],
                    pageSize: 50
                })
            } else b.seasonFeed = new f({
                type: "season",
                classFilter: b.classFilter,
                key: b.currentAbstract,
                seasonKey: b.currentSeason,
                pageSize: 50
            });
            b.seasonFeed.page.load()
        }, b.updateSeason = function(a, c) {
            b.getSeason(a, c)
        }, void n())
    }]), rtlxl.controller("LiveTvPageCtrl", ["$scope", "askservice", "$timeout", "analytics", function(a, b, c, d) {
        b.setMeta({
            nav: "live-tv",
            type: "index"
        }, !0), b.metaReadyDelayed(300), document.title = "RTL XL | Live TV";
        var e = "UYVux2jJT8GoF_GC6FZqiQ";
        d.chooseCustomVariation(e, function(b) {
            a.price = 0 == b ? 4.99 : 5.99, ga("set", "expId", e), ga("set", "expVar", b), d.sendEvent("live-tv-test", "scherm 1", a.price.toLocaleString())
        }), a.states = {
            start: {
                name: "start"
            },
            finish: {
                name: "finish"
            }
        }, angular.extend(a, {
            price: null,
            state: a.states.start,
            form: {
                response: null
            },
            showVideo: RTL.xl.platform.hasHtml5Video && !RTL.xl.platform.isMobile()
        }), a.$on("mailchimp.response", function(b, c) {
            a.form.response = c
        }), a.actionClick = function() {
            d.sendEvent("live-tv-test", "doelscherm", a.price);
            var b = a.states.finish,
                e = document.querySelector('[data-screen="' + a.state.name + '"]'),
                f = document.querySelector('[data-screen="' + b.name + '"]');
            f.style.opacity = "0", ruf([{
                target: e,
                css: {
                    opacity: "0"
                },
                delay: 200,
                duration: 350
            }]).animate().then(function() {
                c(function() {
                    a.state = a.states.finish
                }), angular.element(f).animate({
                    opacity: 1
                }, 500), document.querySelector("#mc-mail").focus()
            })
        }
    }]), rtlxl.controller("GemistPageCtrl", ["$scope", "askservice", "rtlidService", "$timeout", "storage", "VideoFeedService", function(a, b, c, d, e, f) {
        "use strict";

        function g(b) {
            0 === b ? a.weekdays.push("Zondag") : 1 === b ? a.weekdays.push("Maandag") : 2 === b ? a.weekdays.push("Dinsdag") : 3 === b ? a.weekdays.push("Woensdag") : 4 === b ? a.weekdays.push("Donderdag") : 5 === b ? a.weekdays.push("Vrijdag") : 6 === b && a.weekdays.push("Zaterdag")
        }

        function h() {
            var b = new Date;
            a.realdays = [b], a.weekdays = ["Vandaag", "Gisteren"], a.currentDay = "Vandaag";
            for (var c = 2; 7 > c; c++) {
                var d = moment().subtract("days", c),
                    e = d.day();
                g(e)
            }
            a.days = [];
            for (var f = 1; 8 > f; f++) {
                var h = new Date;
                a.realdays.push(new Date(h.setDate(h.getDate() - f))), a.days.push({
                    title: a.weekdays[f - 1],
                    value: a.realdays[f - 1]
                })
            }
        }

        function i(c) {
            a.gemistFeed = new f({
                type: "day",
                key: "",
                bcdate: c,
                sort: "lastBroadcastDate"
            }), a.loading = !0, a.gemistFeed.page.load().then(function() {
                a.loading = !1;
                var c = "gemist";
                c += "." + a.currentDay, b.setMeta({
                    type: "index",
                    nav: c
                }, !0), b.metaReady()
            }, function() {
                a.loading = !1
            })
        }
        document.title = "RTL XL | mis geen moment", window.RTLXL.DOMMeta.addMetaTags({
            description: "Heb je een uitzending gemist op RTL? Kijk programma's als GTST, Voetbal International en RTL Boulevard terug op RTL XL."
        }, "name"), a.loading = !1, a.editmode = c.inEditMode(), h();
        var j = a.days[1];
        j ? (a.currentDay = j.title, i(j.value)) : i(), a.dayClick = function() {
            a.isFiltersOpen = !1, a.currentDay = this.day.title, e.set("gemist_dag", this.day.value, !0), i(this.day.value)
        }
    }]), rtlxl.controller("HelpCtrl", ["$scope", "askservice", function(a, b) {
        "use strict";
        document.title = "RTL XL Help", b.setMeta({
            nav: "help",
            type: "index"
        }, !0), b.metaReadyDelayed(300)
    }]), rtlxl.controller("VooruitkijkenPageCtrl", ["$scope", "askservice", function(a, b) {
        "use strict";
        document.title = "RTL programma's vooruitkijken? Nog niet op TV, wel op RTL XL!", window.RTLXL.DOMMeta.addMetaTags({
            description: "Kijk de beste RTL programma's als GTST, The Bold and the Beautiful en Blacklist nog voor ze op TV te zien zijn op RTL XL."
        }, "name"), b.setMeta({
            nav: "vooruitkijken",
            type: "index"
        }, !0), b.metaReadyDelayed(200)
    }]), rtlxl.controller("HomePageCtrl", ["$scope", "$rootScope", "$log", "askservice", "Tips", function(a, b, c, d, e) {
        document.title = "RTL XL | mis geen moment", d.setMeta({
            nav: "home",
            type: "home"
        }, !0), d.metaReadyDelayed(300), VFD.client.getPopular().then(function(b) {
            a.popular = {
                items: b.material.splice(0, 5)
            }
        }), e.getTipList(!0).then(function(b) {
            a.suggestions = {
                items: b.material.splice(0, 5)
            }
        })
    }]), rtlxl.controller("NewsletterPageCtrl", ["$scope", "askservice", "$window", function(a, b, c) {
        "use strict";
        document.title = "RTL XL Nieuwsbrief", window.RTLXL.DOMMeta.addMetaTags({
            description: "Blijf altijd op de hoogte met de RTL XL Nieuwsbrief!"
        }, "name"), b.setMeta({
            nav: "nieuwsbrief",
            type: "index"
        }, !0), b.metaReadyDelayed(200), a.signup = function() {
            c.location.href = RTLXL.config.rtlid.newsletter_signup_url
        }
    }]), rtlxl.controller("XlSvodCountdownCtrl", ["$scope", "$q", "$location", "$window", "$timeout", function(a, b, c, d, e) {
        "use strict";

        function f(b) {
            var c = {
                    isLoggedIn: function(b) {
                        return b === !1 ? (a.countDownType = "loggedOut", a.countdownText = "Inloggen", !0) : void 0
                    },
                    hasSubscription: function(b, c) {
                        if (b === !0) {
                            var d = 1 === c.daysLeft ? " dag" : " dagen";
                            return a.countdownText = "Nog " + c.daysLeft + d, a.countDownType = "subscribed", !0
                        }
                    },
                    hasHadSubscription: function(b, c) {
                        return b === !0 && c.hasSubscription === !1 ? (a.countdownText = "Nog 0 dagen", a.countDownType = "subscribed", !0) : void 0
                    }
                },
                d = ruf(b).forIn(function(a, d) {
                    return d in c && c[d](a, b) === !0 ? !0 : void 0
                });
            d !== !0 && (a.countdownText = "", a.countDownType = "unsubscribed", a.hideDaysLeft = !0)
        }
        a.state = "", a.countDownType = "", a.countdownText = "", a.initCountDown = function() {
            var a = b.defer();
            return RTL.rtlAccount.loginStatusChanged.then(function(b) {
                    f(b), a.resolve()
                }),
                function() {
                    return a.promise
                }
        }(), a.navigate = function(a, b) {
            b = b || "hashbang";
            var f = {
                hashbang: function() {
                    e(function() {
                        c.path(a)
                    })
                },
                absolute: function() {
                    e(function() {
                        d.location = a
                    })
                }
            };
            f[b]()
        }
    }]), rtlxl.controller("XlPlayerCtrl", ["$scope", "$timeout", "$log", "rtlidService", "$rootScope", "$q", "XlPlayer", function(a, b, c, d, e, f, g) {
        function h(b) {
            return ruf(a).extend({
                hasSubscription: b.HasSubscription,
                isLoggedIn: b.IsLoggedIn,
                buttonMatrix: b.ButtonMatrix
            })[0]
        }

        function i(b) {
            a.abState = "Control";
            var c = ["isopera=1", "playerConfiguration-enable-json=true", "playerConfiguration-drm_host=" + RTLXL.config.rightsmanager.playready],
                d = ["ccontrols=http://www.rtl.nl/system/scripts/flashplayer/ab/controlbar_default_a.swf", "adblock=false"],
                e = {
                    host: RTLXL.config.videoplayer.host,
                    debug: !1,
                    width: "100%",
                    height: "100%",
                    autoplay: "false",
                    slparams: c.join(","),
                    flparams: d.join("&")
                },
                f = {
                    "true": {
                        overrideArgs: {
                            fmt: "smooth"
                        },
                        default_staticlabels: {
                            ns_st_fee: 1,
                            rtl_svod: "xl30dagen"
                        }
                    },
                    "false": {}
                },
                g = angular.extend(e, f[b]);
            return "playerParams" in RTLXL.config.videoplayer && (g = angular.extend(g, RTLXL.config.videoplayer.playerParams)), window.location.href.indexOf("8ae9499f-8c42-431d-850a-d124b0ba55a0") > -1 && (g = angular.extend(e, f["true"])), g
        }
        var j = f.defer(),
            k = {
                0: "default",
                1: "rtlxl",
                2: "nlziet",
                3: "ctv",
                4: "svod"
            };
        a.endGrid = f.defer(), a.endGridReady = a.endGrid.promise, a.showSvodPromo = function() {
            window.location.hash = "#!/meerxl"
        }, a.setPlayerType = function(b) {
            var c;
            switch (c = PlayerDetect ? PlayerDetect.getInstance().getArguments().fmt : b.meta.fmt) {
                case "wmv":
                    return a.playerType = "silverlight", "silverlight";
                case "smooth":
                    return a.playerType = "silverlight", "silverlight";
                case "flash":
                    return a.playerType = "flash", "flash";
                default:
                    return a.playerType = "html5", "html5"
            }
        }, a.gaTrackEvent = function(b, c) {
            if (VFD.util.isPaid(a.xlPlayer)) {
                var d = a.xlPlayer["abstract"] ? a.xlPlayer["abstract"].name + " " + a.xlPlayer.title : a.xlPlayer.title;
                "ga" in window && void 0 !== window.ga && "function" == typeof window.ga && window.ga("send", {
                    hitType: "event",
                    eventCategory: b,
                    eventAction: c,
                    eventLabel: d
                })
            }
        }, a.addToHistory = function() {
            a.isLoggedIn === !0 && d.addToHistory(a.xlPlayer.uuid)
        }, a.getPlayerParameters = function() {
            var a = f.defer();
            return j.promise.then(function(b) {
                a.resolve(b)
            }), a.promise
        }(), a.$watch("xlPlayer", function(b) {
            null != b && "" !== b && g.getDrmData(b, "RTL.xl.boobyTrap").then(function(b) {
                var c = i(b.HasSubscription.toString()),
                    d = ruf(b.InContext).forEach(function(a) {
                        return "nlziet" === k[a] ? !0 : void 0
                    }) || !1;
                a = h(b), e.$emit("NLZietContext", d), j.resolve(c)
            })
        })
    }]), rtlxl.controller("SubscribeCtrl", ["$scope", "$routeParams", "askservice", "rtlidService", "Svod", function(a, b, c, d, e) {
        "use strict";
        a.svodHelpUrl = RTLXL.config.links.svodHelp, e.getPaymentUrl().then(function(b) {
            a.paymentUrl = d.isLoggedIn() ? b : RTLXL.config.rtlid.logon_url + encodeURIComponent(b)
        }, function() {
            a.paymentUrl = "/"
        }), document.title = "Meer RTL XL", c.setMeta({
            nav: "meerxl",
            type: "index"
        }, !0), c.metaReadyDelayed(300), a.abState = "ABTestControl1";
        var f = b.variant;
        f && ("1" === f ? a.abState = "ABTestControl1" : "2" === f ? a.abState = "ABTestVariatie1" : "3" === f && (a.abState = "ABTestVariatie2"))
    }]), rtlxl.controller("TelekidsLandingCtrl", ["$scope", "askservice", "Svod", "rtlidService", function(a, b, c, d) {
        b.setMeta({
            nav: "telekids",
            type: "index"
        }, !0), b.metaReadyDelayed(300), document.title = "Telekids & RTL XL", c.getPaymentUrl().then(function(b) {
            a.paymentUrl = d.isLoggedIn() ? b : RTLXL.config.rtlid.logon_url + encodeURIComponent(b)
        }, function() {
            a.paymentUrl = "/"
        })
    }]), rtlxl.controller("XlAccountMenuCtrl", ["$scope", "$timeout", "$location", function(a, b, c) {
        a.profileUrl = "#!/mijnrtl", a.logoutUrl = RTLXL.config.rtlid.logoff_url + window.location.href, a.state = "hidden", a.isLoggedIn = !1, RTL.rtlAccount.loginStatusChanged.then(function(b) {
            a.isLoggedIn = b.isLoggedIn
        }), a.isOnProfilePage = function() {
            return "/mijnrtl" === c.path()
        }
    }]), rtlxl.controller("xlVideoItemCtrl", ["$scope", "$filter", "rtlidService", function(a, b, c) {
        "use strict";

        function d(a, c) {
            for (var d in c) {
                var e = [a].concat(c[d]);
                a = b(d).apply(this, e)
            }
            return a
        }

        function e() {
            if (a.item && a.item.isProgram) a.url = VFD.util.abstractPath(a.item), a.mainTitle = a.item.name, a.imageUrl = a.item.imageUrl, a.synopsis = a.item.synopsis;
            else if (a.item && a.item["abstract"]) {
                a.url = VFD.util.materialPath(a.item), a.isPreview = VFD.util.isPreview(a.item), a.imageUrl = a.item.imageUrl, a.mainTitle = a.item["abstract"].name, a.subTitle = a.item.title, a.synopsis = a.item.synopsis ? a.item.synopsis : a.item.episode && a.item.episode.synopsis ? a.item.episode.synopsis : a.item["abstract"].synopsis, a.item.useOriginalBroadcastDate ? (a.info = a.isPreview ? "Vooruitkijken" : d(a.item.original_date, {
                    humanDateFromEpoch: [!0]
                }), a.broadCastDayName = a.info = a.isPreview ? "Vooruitkijken" : d(a.item.original_date, {
                    humanDateFromEpoch: [!0, !0]
                })) : (a.info = a.isPreview ? "Vooruitkijken" : d(a.item, {
                    lastBroadcastDate: null,
                    humanDateFromEpoch: [!0]
                }), a.broadCastDayName = a.info = a.isPreview ? "Vooruitkijken" : d(a.item, {
                    lastBroadcastDate: null,
                    humanDateFromEpoch: [!0, !0]
                }));
                var b = a.item.duration ? VFD.util.parseDuration(a.item.duration) : 0;
                a.duration = "", b > 0 && (a.duration = "(" + d(b, {
                    humanDuration: "",
                    truncate: [28, ""]
                }) + ")"), "views" === a.itemType
            }
        }
        a.editmode = c.inEditMode(), a.$watch("item", e)
    }]), rtlxl.controller("XlSpotlightCtrl", ["$scope", "rtlidService", "$timeout", function(a, b) {
        "use strict";

        function c(a) {
            var b = 3,
                c = [],
                d = [];
            ruf(a).forEach(function(a) {
                if (c.length !== b && a["abstract"]) {
                    a.ext = {
                        title: a["abstract"].name,
                        subtitle: a.title,
                        duration: {
                            seconds: VFD.util.parseDuration(a.duration)
                        },
                        isLive: "livestream" === a.classname,
                        image: {
                            cover: VFD.util.coverUrl(a),
                            screenshot: VFD.util.screenshotBaseUrl() + "sz=355x200/uuid=" + a.uuid
                        },
                        path: {
                            material: VFD.util.materialPath(a)
                        },
                        trailer: VFD.util.getRelated(a, "trailer"),
                        dateStamp: new Date(1e3 * a.display_date)
                    }, a.active = !1, a.ext.overlayText = a.ext.isLive ? "LIVE" : void 0;
                    var e = a.ext.isLive ? c : d;
                    e.push(a)
                }
            });
            var e = Math.max(b - c.length, 0),
                f = c.concat(d.slice(0, e));
            return f
        }
        var d = {
            desktophome: "desktophome",
            desktopseries: "desktopseries",
            desktoppreview: "desktoppreview",
            telekids: "telekids",
            desktoptestfeed: "desktoptestfeed"
        };
        RTL.rtlAccount.loginStatusChanged.then(function() {
            a.editmode = b.inEditMode()
        }), angular.extend(a, {
            isPaid: VFD.util.isPaid,
            isPreview: VFD.util.isPreview,
            isMovie: VFD.util.isMovie,
            type: a.type
        }), a.product = b.isInTelekidsMode() === !0 ? "telekids" : "rtlxl", a.device = d[a.type] || d[a.type] || "desktophome", a.activeTitle = "", a.activeSubtitle = "", a.activeSynopsis = "";
        var e = b.getSpotlightListSpec(a.product, a.device);
        e.then(function(b) {
            var d = new VFD.Model(b),
                e = d.getMaterials();
            a.gridItems = c(e)
        }, function() {
            a.gridItems = []
        })
    }]), rtlxl.controller("SportsPageCtrl", ["$scope", "$q", "$timeout", "askservice", "rtlidService", "$rootScope", "Sports", function(a, b, c, d, e, f, g) {
        "use strict";

        function h(e, f) {
            f = f || {};
            var g = b.defer();
            return o.then(function(b) {
                ruf("get").http("http://www.rtl.nl/system/s4m/vfd/version=2/fun=abstract/ak=" + (f.abstractList || b.abstractList) + "/pg=" + e).then(function(b) {
                    r = Math.ceil(b.meta.nr_of_videos_total / b.meta.nr_of_videos_onpage), a.totalPages = Math.ceil(b.meta.nr_of_videos_total / b.meta.nr_of_videos_onpage), ruf(b.material).forEach(function(a) {
                        a.episodeKey = "" !== a.episode_key ? a.episode_key : 0, a.unixTimestamp = 1e3 * a.display_date, a.isPreview = !1, a.title = a.title ? a.title : l(a.episode_key, b.episodes, "key", "name", function(b) {
                            "" === a.synopsis && (a.synopsis = b.synopsis)
                        }) || "", a.name = a.name ? a.name : l(a.abstract_key, b.abstracts, "key", "name", function(b) {
                            "" === a.synopsis && (a.synopsis = b.synopsis), a.progsubtype = b.progsubtype
                        }) || "", a.isPaid = "avod" !== a.ddr_model.toLowerCase(), a.url = ruf("{name}-{abstract}/{uuid}").format({
                            name: RTL.xl.slugify(a.name),
                            "abstract": a.abstract_key,
                            uuid: a.uuid
                        })
                    }), f.abstractList && f.isInfiniteScroll !== !0, c(function() {
                        a.sportsData = a.sportsData.concat(b.material), f.isInfiniteScroll === !0 ? (a.data = {
                            type: "append",
                            items: b.material
                        }, g.resolve(b)) : f.isInfiniteScroll || (a.data = {
                            type: "new",
                            items: b.material
                        }), d.setMeta({
                            nav: "sport",
                            type: "index"
                        }, !0), d.metaReady()
                    }), a.$apply()
                })
            }), g.promise
        }

        function i(b) {
            c(function() {
                a.data = {
                    type: "new",
                    items: b
                }, setTimeout(function() {
                    s = !1
                }, 100)
            }, 0)
        }

        function j(a, b) {
            var c = {
                    whiteList: function(a, b) {
                        return a === b
                    },
                    data: function(a, b) {
                        return a.indexOf(b) > -1
                    }
                },
                d = [];
            return ruf(b).forEach(function(b) {
                ruf(a.whiteList).forEach(function(e) {
                    c[a.match](b[a.targetField], e) && d.push(b.key)
                })
            }), d
        }

        function k() {
            a.subNavigation = function() {
                var a = [];
                return ruf(t).forIn(function(b, c) {
                    "sports" !== c && a.push(b)
                }), a
            }()
        }

        function l(a, b, c, d, e) {
            return ruf(b).forEach(function(b) {
                return b[c] === a ? (e(b), b[d]) : void 0
            })
        }
        document.title = "RTL XL | mis geen moment", window.RTLXL.DOMMeta.addMetaTags({
            description: "Heb je een uitzending gemist op RTL? Kijk programma's als GTST, Voetbal International en RTL Boulevard terug op RTL XL."
        }, "name"), a.loading = !1, a.editmode = e.inEditMode();
        var m = b.defer(),
            n = g.currentSportsAction.key,
            o = m.promise,
            p = function() {
                o.then(function() {
                    k(), h(1)
                })
            },
            q = 1,
            r = 1,
            s = !1,
            t = {
                sports: {
                    label: "Sport",
                    url: "sport",
                    targetField: "key",
                    whiteList: [],
                    key: "sports",
                    match: "whiteList"
                },
                tourdefrance: {
                    label: "Tour de France",
                    url: "rtl-7-tour-du-jour",
                    targetField: "key",
                    whiteList: ["257632"],
                    key: "tourdefrance",
                    match: "whiteList"
                },
                vi: {
                    label: "Voetbal Inside",
                    url: "voetbal-inside",
                    targetField: "key",
                    whiteList: ["343224", "197775"],
                    key: "vi",
                    match: "whiteList"
                },
                fcafkicken: {
                    label: "FC Afkicken",
                    url: "fc-afkicken",
                    targetField: "key",
                    whiteList: ["345255"],
                    key: "fcafkicken",
                    match: "whiteList"
                },
                uefa: {
                    label: "Europa League",
                    url: "uefa-europa-league",
                    targetField: "key",
                    whiteList: ["208189"],
                    key: "uefa",
                    match: "whiteList"
                },
                darts: {
                    label: "Darts",
                    url: "darts",
                    targetField: "name",
                    whiteList: ["Darts"],
                    key: "darts",
                    match: "data"
                },
                autosport: {
                    label: "Autosport",
                    url: "autosport",
                    targetField: "name",
                    whiteList: ["RTL GP"],
                    key: "autosport",
                    match: "data"
                }
            };
        a.runSubnav = function(b) {
            var c = t[b];
            n = b, c ? o.then(function(a) {
                var b = j(c, a.abstractData).join(",");
                return c.infiniteScroll = b, h(1, {
                    abstractList: b
                })
            }).then(function(a) {
                i(a)
            }) : i(a.sportsData)
        }, a.sportsData = [], ruf("get").http("http://www.rtl.nl/system/s4m/vfd/version=2/fun=az/product=sport/pg=all").then(function(a) {
            var b = [];
            ruf(a.abstracts).forEach(function(a, c) {
                b[c] = a.key
            }), t.sports.whiteList = b, t.sports.infiniteScroll = b.join(","), m.resolve({
                abstractList: b.join(","),
                abstractData: a.abstracts
            })
        });
        var u = ruf().debounce(100);
        f.$on("infinteScroll", function() {
            r > q && s === !1 && (f.loader.dataLoading = !0, s = !0, h(++q, {
                abstractList: t[n].infiniteScroll,
                isInfiniteScroll: !0
            }).then(function() {
                u(function() {
                    s = !1, f.loader.dataLoading = !1
                })
            }))
        }), p()
    }]), rtlxl.controller("unicorn", [function() {
        "use strict"
    }]),
    function(a) {
        "use strict";
        var b = function() {
            return !!document.createElementNS && !!document.createElementNS("http://www.w3.org/2000/svg", "svg").createSVGRect
        };
        a.directive("svg", function() {
            return {
                restrict: "A",
                link: function(a, c) {
                    if (b()) c.attr("data-svg-supported", "true");
                    else {
                        var d = c.attr("data-fallback-src");
                        d && c.attr("src", d)
                    }
                }
            }
        })
    }(rtlxl, window), rtlxl.directive("loginToastButton", ["$rootScope", "$route", "$location", "rtlidService", "mddialog", "askservice", function(a, b, c, d) {
        "use strict";
        return {
            restrict: "A",
            link: function(b, c) {
                function e() {
                    var b = a.currentUser,
                        d = b && b.isLoggedIn === !0;
                    d ? b && c.hide() : c.show().removeClass("logged-in").text(f)
                }
                var f = c.text();
                c.bind("click", function() {
                    d.redirectToLogin()
                }), RTL.rtlAccount.loginStatusChanged.then(function() {
                    e()
                }), e()
            },
            controller: function() {}
        }
    }]), rtlxl.directive("compile", ["$compile", function(a) {
        "use strict";
        return function(b, c, d) {
            b.$watch(function(a) {
                return a.$eval(d.compile)
            }, function(d) {
                c.html(d), a(c.contents())(b)
            })
        }
    }]), rtlxl.directive("xlLoader", ["$timeout", function(a) {
        "use strict";
        return {
            restrict: "A",
            replace: !0,
            scope: {
                active: "="
            },
            template: '<div ng-if="active" class="loader" ng-class="{visible:visible}"></div>',
            link: function(b) {
                b.$watch("active", function(c) {
                    a(function() {
                        b.visible = c
                    })
                })
            }
        }
    }]), rtlxl.directive("xlStrip", ["VideoFeedService", "rtlidService", "askservice", "$timeout", "$location", "$filter", function(a, b, c, d, e) {
        return {
            restrict: "A",
            templateUrl: "views/modules/xl-strip.html",
            replace: !0,
            scope: {
                existingFeed: "=feed",
                type: "@",
                title: "@",
                titleLink: "@",
                allLink: "@",
                itemType: "@",
                key: "@",
                cf: "@"
            },
            link: function(b, f, g) {
                function h(a, b, c) {
                    for (var d = $(".thumbs", a).width(), e = 0, f = b; d >= f && 14 > e;) f += b, f += c, e++;
                    return Math.max(e, 1)
                }

                function i() {
                    return h(f, 205, 30)
                }

                function j() {
                    d(function() {
                        b.timeoutresize = null, b.feed.page.setSize(i()), b.totalPages = b.feed.page.total
                    })
                }

                function k() {
                    b.timeoutresize || (b.timeoutresize = window.setTimeout(j, 1e3))
                }

                function l(a) {
                    var c = f[0].compareDocumentPosition(a.target);
                    20 !== c && "active" === b.detailsState && (b.closeDetails(), ruf(window).off("click", l))
                }

                function m() {
                    b.feed.page.size = i(), 0 === b.feed.items.length ? b.feed.page.load().then(function() {
                        d(function() {
                            n()
                        })
                    }) : n()
                }

                function n() {
                    d(function() {
                        b.noData = 0 === b.feed.items.length, b.show = !0, b.currentPage = b.feed.page.index, b.totalPages = b.feed.page.total
                    })
                }

                function o() {
                    b.initDone || (b.initDone = !0, m())
                }

                function p() {
                    "key" in g ? b.$watch("key", function(a) {
                        a && (b.feed.setKey(a), o())
                    }) : m(), $(window).on("resize", k)
                }
                b.feed = b.existingFeed || new a({
                    type: b.type,
                    maxItems: g.maxItems,
                    sort: g.sort,
                    order: g.order,
                    key: b.key,
                    classFilter: b.cf
                }), b.prevPage = b.feed.page.prev, b.nextPage = b.feed.page.next, b.allLinkVisible = !1, b.show = !1, b.layout = g.layout || "", b.hasStripNav = "hide" !== g.paginator, b.showHeader = "hide" !== g.header, b.displayType = g.displayType, b.detailsState = "hidden", b.currentPage = 1, b.totalPages = 1, b.loginUrl = RTLXL.config.rtlid.logon_url + window.location, b.showAll = function(a) {
                    c.click(a.originalEvent.target, "thumb_strip", {
                        action: "toon_alles"
                    }), e.path(b.allLink)
                }, b.$watch("feed.page.index", function(a, c) {
                    a !== c && (b.allLinkVisible = b.allLink && a >= 2 ? !0 : !1, b.currentPage = a)
                }), b.$on("$destroy", function() {
                    $(window).off("resize", k), b.timeoutresize && window.clearTimeout(b.timeoutresize)
                }), b.showDetails = function(a) {
                    b.detailItem === a ? b.closeDetails() : d(function() {
                        b.detailsState = "active", b.detailItem = a, b.detailItem.isProgram || (b.detailItem.imageUrlimageUrl = b.detailItem.screenshotUrl), b.detailItemActive = !0, ruf(window).on("click", l)
                    })
                }, b.closeDetails = function() {
                    d(function() {
                        b.detailsState = "hiding"
                    });
                    var a = b.detailItem;
                    d(function() {
                        a === b.detailItem && (b.detailItem = null, b.detailsState = "hidden")
                    }, 500)
                }, b.$watch("detailItem", function(a) {
                    null === a && b.closeDetails()
                }), b.initDone = !1, p(), RTL.rtlAccount.loginStatusChanged.then(function(a) {
                    b.hasStripNav = "tips" !== g.type || "tips" === g.type && a.isLoggedIn, b.notLoggedIn = "tips" === g.type && a.isLoggedIn === !1, b.loginUrl = RTLXL.config.rtlid.logon_url + window.location
                })
            }
        }
    }]), rtlxl.directive("xlThumbGrid", ["$timeout", "$location", function(a, b) {
        return {
            restrict: "A",
            templateUrl: "views/modules/xl-thumb-grid.html",
            replace: !0,
            scope: {
                feed: "=",
                itemType: "@",
                gridType: "@"
            },
            link: function(c, d) {
                function e(a) {
                    var b = d[0].compareDocumentPosition(a.target);
                    20 !== b && (c.closeDetails(), ruf(window).off("click", e))
                }
                var f, g, h = b.path();
                c.activeItem = null, c.gridViewType = "detail" === c.gridType ? "detail" : "thumb", c.showDetails = function(d) {
                    d === c.activeItem ? (f.removeClass("active"), c.closeDetails(), a(function() {
                        d.active = !1
                    })) : (a(function() {
                        d.active = !0, d.noAnim = null !== c.activeItem
                    }), c.activeItem && (c.activeItem.imageUrl = null), a(function() {
                        if (h === b.path()) {
                            c.activeItem && (c.activeItem.active = !1), c.activeItem = d, c.activeItem.isProgram || (c.activeItem.imageUrl = c.activeItem.screenshotUrl), ruf(window).on("click", e), g = f, f = ruf(ruf(".grid-item.selected").index(0).parent()), f.addClass("active");
                            var a = g;
                            setTimeout(function() {
                                f = ruf(ruf(".grid-item.selected").index(0).parent()), g && g[0] !== f[0] && (f.addClass("active"), setTimeout(function() {
                                    a.removeClass("active")
                                }, 350))
                            }, 0)
                        }
                    }, 250))
                }, c.closeDetails = function() {
                    var d = c.activeItem;
                    a(function() {
                        h === b.path() && d === c.activeItem && (c.activeItem = null, d && (d.active = !1)), f.removeClass("active")
                    }, 500)
                }
            }
        }
    }]), rtlxl.directive("xlScrollClassToggle", ["$window", function(a) {
        "use strict";
        return {
            restrict: "A",
            replace: !1,
            link: function(b, c, d) {
                function e() {
                    var a = g.scrollTop();
                    a > f ? c.addClass(d.scrollClass) : c.removeClass(d.scrollClass)
                }
                var f = parseInt(d.threshold),
                    g = angular.element(a);
                g.bind("scroll", e), b.$on("$destroy", function() {
                    g.unbind("scroll", e)
                }), e()
            }
        }
    }]), rtlxl.directive("ngPosterStrip", ["xlService", "rtlidService", "askservice", "$q", "$timeout", "$rootScope", "$filter", function(a, b, c, d, e, f, g) {
        "use strict";
        return {
            templateUrl: "views/modules/poster-strip.html",
            replace: !0,
            link: function(b, c, d) {
                function e() {
                    b.pageCount = Math.ceil(b.totalItems / b.pageSize()), b.views = [];
                    for (var a = 0; a < b.pageCount; a++) b.views.push({
                        page: a + 1
                    })
                }

                function f(a) {
                    b.currentPage = b.currentPage + a, b.currentPage < 1 && (b.currentPage = 1)
                }

                function h(a, b) {
                    for (var c in b) {
                        var d = [a].concat(b[c]);
                        a = g(c).apply(this, d)
                    }
                    return a
                }
                b.durationSeconds = VFD.util.parseDuration;
                var i = [
                    ["l", "s"],
                    ["s", "l"],
                    ["m", "m", "m"],
                    ["l", "s"],
                    ["m", "m", "m"],
                    ["l", "s"],
                    ["m", "m", "m"]
                ];
                b.pageSize = function() {
                    for (var a = 0, b = 0; b < i.length; b++) a += i[b].length;
                    return a
                }, b.prevPage = function() {
                    $(".grid-view", c).eq(b.currentPage - 1).fadeOut(function() {
                        b.$apply(function() {
                            f(-1)
                        }), $(this).prev().fadeIn()
                    })
                }, b.nextPage = function() {
                    $(".grid-view", c).eq(b.currentPage - 1).fadeOut(function() {
                        b.$apply(function() {
                            f(1)
                        }), $(this).next().fadeIn()
                    })
                }, b.loadVideos = function(c) {
                    b.currentPage = void 0 !== c ? c : 1, a.getThumbstripMaterial(d.type, b.currentPage, {}).then(function(a) {
                        var c = new VFD.Model(a),
                            d = c.getMaterials();
                        if (d && d.length) {
                            b.totalItems = c.getCount().total, b.items = [], angular.forEach(d, function(c) {
                                c.ext = {}, c.ext.cover_url = a.meta.poster_base_url + c.season.key, c.ext.path = VFD.util.abstractPath(c["abstract"]), c.ext.info = h(c, {
                                    lastBroadcastDate: null,
                                    humanDateFromEpoch: [!0, !0]
                                });
                                var d = b.durationSeconds(c.duration);
                                d > 0 && (c.ext.info += " (" + h(d, {
                                    humanDuration: "",
                                    truncate: [28, ""]
                                }) + ")"), this.push(c)
                            }, b.items), e();
                            for (var f = 0, g = 0; g < b.views.length; g++) {
                                var j = b.views[g];
                                j.grid = [], angular.forEach(i, function(a) {
                                    for (var c = [], d = 0; d < a.length; d++) {
                                        if (f <= b.items.length - 1) {
                                            var e = a[d];
                                            c.push({
                                                index: f,
                                                size: e,
                                                item: b.items[f]
                                            })
                                        }
                                        f++
                                    }
                                    j.grid.push(c)
                                })
                            }
                        }
                    })
                }, b.loadVideos()
            }
        }
    }]), rtlxl.directive("xlSpotlight", ["rtlidService", "$timeout", "$filter", function(a, b, c) {
        "use strict";
        var d;
        return {
            restrict: "A",
            templateUrl: "views/modules/spotlight.html",
            replace: !0,
            scope: {
                type: "@"
            },
            controller: "XlSpotlightCtrl",
            link: function(a, e) {
                function f() {
                    var e = d = ruf(this);
                    p = ruf(e.parent('[data-type="spotlightContainer"]')), j = e.parent('[data-type^="spotlight"]');
                    var f = parseFloat(this.getAttribute("data-expand")),
                        g = p.find('[data-type^="spotlight"]'),
                        k = a.gridItems[f];
                    i = g.forEach(function(a, b) {
                        return b > f ? g.raw.slice(b) : void 0
                    }), b(function() {
                        return a.activeSpotlight ? (a.activeSpotlight.removeClass("hidden"), e.addClass("hidden"), a.activeSpotlight = e, a.activeSpotlight = e, a.activeTitle = k.ext.title, a.activeSubtitle = k.ext.subtitle, a.activeSynopsis = c("synopsis")(k), !0) : (ruf(l[0].children).rufStyle("transform", "translateX(-" + l[0].offsetWidth + "px)"), a.activeSpotlight = e, a.activeTitle = k.ext.title, a.activeSubtitle = k.ext.subtitle, a.activeSynopsis = c("synopsis")(k), l[0].ruf("index", f), o.addClass("hidden"), e.addClass("hidden"), ruf().forceLayout(), setTimeout(function() {
                            var a = [{
                                target: m,
                                css: {
                                    transform: "translateX(0px)"
                                },
                                delay: 500,
                                easing: "cubic-bezier(0,1.38,1,1)"
                            }, {
                                target: l,
                                css: {
                                    transform: "translateX(0%)"
                                },
                                delay: 500,
                                easing: "ease-out"
                            }, {
                                target: l,
                                css: {
                                    height: l[0].scrollHeight + "px"
                                },
                                easing: "ease-out"
                            }];
                            ruf(a).animate()
                        }, 20), void ruf(window).on("click", h))
                    }, 0)
                }

                function g() {
                    ruf(window).off("click", h), a.activeSpotlight = !1;
                    var b = [{
                        target: m,
                        css: {
                            transform: "translateX(-" + l[0].offsetWidth + "px)"
                        },
                        easing: "ease-out"
                    }, {
                        target: l,
                        css: {
                            height: "0px"
                        },
                        delay: 500,
                        duration: 500,
                        easing: "ease-out"
                    }];
                    ruf(b).animate().then(function() {
                        d.removeClass("hidden"), n.removeClass("hidden"), o.removeClass("hidden")
                    })
                }

                function h(a, b) {
                    var c = d.parent("section");
                    if (c) {
                        var e = c.compareDocumentPosition(a.target),
                            f = ruf(c).find(".spotlight-item")[0].compareDocumentPosition(a.target),
                            i = [0, 20],
                            j = function(a) {
                                return i.indexOf(a) > -1
                            };
                        j(f) && ruf(window).off("click", h), j(e) === !1 && g.call(ruf('[data-event="closeDetails"]')[0], a, b)
                    }
                } {
                    var i, j, k, l = ruf(e[0]).find('[data-type="spotlightDetails"]'),
                        m = l.find("*"),
                        n = (ruf(), ruf('[data-type="bullets"]')),
                        o = ruf('[class^="playericon-"]'),
                        p = ruf('[data-type="spotlightContainer"]'),
                        q = ruf('[data-type^="spotlight-"]'),
                        r = ruf().defer(),
                        s = r.promise;
                    ! function() {
                        var a = setInterval(function() {
                            q.length > 0 ? (clearInterval(a), q.forEach(function(a) {
                                a.ruf("spotPos", {
                                    pivotPoint: function(a) {
                                        return a * -p.computedStyle("width", "number")
                                    },
                                    min: function(a) {
                                        var b = p.computedStyle("width", "number"),
                                            c = a || 1;
                                        return a * -b - b * c
                                    },
                                    max: function(a) {
                                        var b = p.computedStyle("width", "number"),
                                            c = a || 1;
                                        return a * -b + b * c
                                    }
                                })
                            }), k = {
                                clicks: 0,
                                currentSpot: 0,
                                nextSpot: 0,
                                spots: q,
                                maxSpots: q.length,
                                loop: q.length - 1,
                                container: p
                            }, r.resolve(k)) : (q = ruf('[data-type^="spotlight-"]'), p = ruf('[data-type="spotlightContainer"]'))
                        }, 20)
                    }()
                }
                ruf(e[0]).on("click", "[data-expand]", f), ruf(e[0]).on("click", '[data-event="closeDetails"]', g), l.on("scaleEnd", function() {
                    ruf(this.children).rufStyle("transform", "translateX(-" + this.offsetWidth + "px)")
                });
                var t = {
                    string: "translateX({0}px)",
                    left: function(a) {
                        var b = p.computedStyle("width", "number");
                        q.reverseForEach(function(c, d) {
                            if (c.ruf("busy") !== !0) {
                                c.ruf("busy", !0);
                                var e = c.ruf("spotPos"),
                                    f = e.pivotPoint(d);
                                e.current && c.ruf("spotReset") !== !0 || (e.current = 0, e.next = e.current, c.ruf("spotReset", !1)), e.current >= f + b && (e.current -= a.maxSpots * b, e.next = e.current, ruf(c).rufStyle("transform", ruf(t.string).format([e.next])));
                                var g = e.next + b;
                                e.next = g, ruf({
                                    target: c,
                                    duration: 500,
                                    force: !0,
                                    css: {
                                        transform: ruf(t.string).format([e.next])
                                    }
                                }).animate().then(function() {
                                    e.current = e.next, e.current >= f + b && (e.next = f + b - a.maxSpots * b, ruf(c).rufStyle("transform", ruf(t.string).format([e.next])), e.current = e.next), c.ruf("busy", !1)
                                })
                            }
                        })
                    },
                    right: function(a) {
                        var b = p.computedStyle("width", "number");
                        q.reverseForEach(function(c, d) {
                            if (c.ruf("busy") !== !0) {
                                c.ruf("busy", !0);
                                var e = c.ruf("spotPos"),
                                    f = e.pivotPoint(d);
                                e.current && c.ruf("spotReset") !== !0 || (e.current = 0, e.next = e.current, c.ruf("spotReset", !1)), e.current <= f - b && (e.current += a.maxSpots * b, e.next = e.current, ruf(c).rufStyle("transform", ruf(t.string).format([e.next])));
                                var g = e.next - b;
                                e.next = g, ruf({
                                    target: c,
                                    duration: 500,
                                    force: !0,
                                    css: {
                                        transform: ruf(t.string).format([e.next])
                                    }
                                }).animate().then(function() {
                                    var f = e.pivotPoint(d);
                                    e.current = e.next, e.current <= f - b && (e.next = f - b + a.maxSpots * b, ruf(c).rufStyle("transform", ruf(t.string).format([e.next])), e.current = e.next), c.ruf("busy", !1)
                                })
                            }
                        })
                    },
                    processClicks: function(a) {
                        var b = this;
                        s.then(function(c) {
                            var d = c.container.computedStyle("width", "number"),
                                e = ruf(t.string);
                            b[a](c, e, d)
                        })
                    }
                };
                ruf(e).on("click", '[class^="playericon-"]', function() {
                    var a = this.className.match(/(playericon\-)(\w+)/)[2];
                    t.processClicks(a)
                }), ruf(e).on("scaleEnd", function() {
                    var a = ruf('[class^="playericon-"]').forEach(function(a) {
                        var b = a.className;
                        return (b.indexOf("playericon-left") || b.indexOf("playericon-right")) && "none" === ruf(a).computedStyle("display") ? !0 : void 0
                    }) || !1;
                    a === !0 && q.forEach(function(a) {
                        a.style.cssText = "", a.ruf("spotReset", !0)
                    })
                })
            }
        }
    }]), rtlxl.directive("mijnrtlOverzicht", ["xlService", "$q", "$routeParams", "askservice", "rtlidService", "$timeout", function(a, b, c, d, e) {
        "use strict";
        return {
            restrict: "C",
            templateUrl: "views/modules/mijnrtl-overzicht.html",
            controller: "MijnRTLCtrl",
            replace: !0,
            scope: {
                title: "@"
            },
            link: function(a, b, f) {
                function g() {
                    for (var a = l.width(), b = 0, c = m; a >= c && 5 > b;) b++, c += n, c += m;
                    return o * b
                }

                function h() {
                    var b, c, d;
                    a.currentTab === a.tabs[1].name ? (c = e.getWatchLaterList(!0), c.then(i)) : a.currentTab === a.tabs[0].name ? (b = e.getFavouriteOnlyList(!0), b.then(i)) : a.currentTab === a.tabs[2].name && (d = e.getHistoryList(!0), d.then(i))
                }

                function i(b) {
                    var c = void 0 !== b.length,
                        e = b.length;
                    c || (e = 1);
                    for (var f = 0; e > f; f++) {
                        var g;
                        g = c ? b[f] : b;
                        var h = new VFD.Model(g);
                        if (a.meta = angular.extend(a.meta || {}, g.meta), a.currentTab === a.tabs[0].name) {
                            a.totalItems = h._data.abstracts.length;
                            for (var i = 0; i < h._data.abstracts.length; i++) {
                                var j = {
                                    "abstract": h._data.abstracts[i],
                                    abstractName: h._data.abstracts[i].name,
                                    abstract_key: h._data.abstracts[i].key
                                };
                                q.push(j)
                            }
                        } else {
                            a.totalItems = h.getCount().total;
                            for (var k = h.getMaterials(), l = 0; l < k.length; l++) k[l].abstractName = k[l]["abstract"].name, a.currentTab === a.tabs[2].name && (k[l].isPaid = a.isPaid(k[l])), k[l].time = moment(1e3 * k[l].display_date).format("dd D MMM YYYY HH:mm"), q.push(k[l])
                        }
                    }
                    q = _.sortBy(q, function(a) {
                        if ("myrtl_added_date" in a) {
                            var b = parseInt(a.myrtl_added_date, 10);
                            return b > 0 ? b : a.display_date
                        }
                        return a.display_date
                    }).reverse();
                    for (var m = 0, n = q.length; n > m; m++) a.items.push(q[m]);
                    a.calculatePages(), a.callNextPage && (a.callNextPage = !1, a.getPagePos(1));
                    var o = "mijnrtl";
                    o += "." + a.currentTab, d.setMeta({
                        type: "index",
                        nav: o
                    }, !0), d.metaReady(), a.ready = !0
                }

                function j() {
                    a.timeoutresize || (a.timeoutresize = window.setTimeout(k, 1e3))
                }

                function k() {
                    var b = g();
                    a.timeoutresize = null, a.pageSize && a.pageSize === b || a.$apply(function() {
                        if (a.pageSize = b, a.calculatePages(), a.pageSize * a.currentPage > a.items.length) {
                            var c = Math.floor(a.items.length / a.pageSize);
                            a.getPagePos(c - a.currentPage)
                        }
                    })
                }
                var l = b.find(".thumb-container"),
                    m = Number(f.thumbwidth || 164),
                    n = Number(f.thumbwidthmargin || 10),
                    o = Number(f.thumbrows || 3),
                    p = 1,
                    q = [];
                a.$on("$destroy", function() {
                    $(window).off("resize", j), a.timeoutresize && window.clearTimeout(a.timeoutresize)
                }), a.currentPage = 1, a.views = [], a.pages = a.totalPages, a.totalPages = 0, a.isPaid = VFD.util.isPaid, a.materialUrl = VFD.util.materialPath, a.abstractUrl = VFD.util.abstractPath, a.coverUrl = VFD.util.coverUrl, a.items = [], a.callNextPage = !1, a.viewLength = null, a.timeoutresize = null, a.synopsis = "", a.ready = !1, a.tabs = [{
                    slug: "alle-favorieten",
                    name: "Favorieten"
                }, {
                    slug: "afspeellijst",
                    name: "Afspeellijst"
                }, {
                    slug: "kijkgeschiedenis",
                    name: "Kijkgeschiedenis"
                }], a.pageSize = g(), a.$on("mijnrtl.remove.watchLater", function(a, b) {
                    $("li[data-uuid=" + b + "] .imgContainer").css("opacity", .3)
                }), a.$on("mijnrtl.add.watchLater", function(a, b) {
                    $("li[data-uuid=" + b + "] .imgContainer").css("opacity", 1)
                }), a.$on("mijnrtl.remove.fav", function(a, b) {
                    $("li[data-ak=" + b + "] .imgContainer").css("opacity", .3)
                }), a.$on("mijnrtl.add.fav", function(a, b) {
                    $("li[data-ak=" + b + "] .imgContainer").css("opacity", 1)
                }), c.tab ? angular.forEach(a.tabs, function(b) {
                    b.slug === c.tab && (a.currentTab = b.name)
                }) : a.currentTab = a.tabs[0].name, h(p), a.getTab = function(b) {
                    a.currentPage = 1, a.items.length = 0, q.length = 0, h(b)
                }, a.calculatePages = function() {
                    a.viewLength = Math.ceil(a.items.length / a.pageSize), a.totalPages = 0, a.views = [];
                    for (var b = 0; b < a.viewLength; b++) a.views.push(b + 1), a.totalPages++;
                    0 === a.totalPages && (a.totalPages = 1)
                }, a.getPagePos = function(b) {
                    var c = void 0 !== b ? b : 1;
                    a.currentPage = a.currentPage + c, a.currentPage < 1 && (a.currentPage = 1)
                }, a.nextItems = function() {
                    p++, a.callNextPage = !0, h(p)
                }, $(window).on("resize", j)
            }
        }
    }]), rtlxl.directive("favButton", ["$rootScope", "rtlidService", "askservice", "mddialog", function(a, b, c, d) {
        "use strict";
        return {
            restrict: "C",
            controller: function() {},
            link: function(e, f, g) {
                function h(b) {
                    if (a.mijnRtl) {
                        var c = i.favorites;
                        e.isOn = $.inArray(b, c) > -1, e.isOn ? (f.addClass("active"), f.attr("title", "Verwijder uit Favorieten")) : (f.removeClass("active"), f.attr("title", "Voeg toe aan Favorieten"))
                    }
                }
                var i = null,
                    j = !1;
                f.attr("title", "Voeg toe aan Favorieten"), $(f).tipsy && $(f).tipsy({
                    gravity: "n"
                }), g.$observe("abstractKey", function(b) {
                    if ("165740" === b) return void f.hide();
                    var c = b;
                    void 0 !== a.mijnRtl && a.mijnRtl && (i = a.mijnRtl, h(c)), e.$on("mijnRtlUpdate", function() {
                        i = a.mijnRtl, h(c)
                    })
                }), f.bind("click", function(h) {
                    if (h.stopPropagation(), j !== !0) {
                        if (!b.isLoggedIn()) {
                            c.click(h.originalEvent.target, "favorieten", {
                                action: "niet_ingelogd"
                            });
                            var i = d.notification("warning", {
                                text: "Log in om dit programma toe te voegen aan Favorieten.",
                                icon: "fav"
                            });
                            return void(i.scope.onLoginClick = function() {
                                c.click(h.originalEvent.target, "favorieten", {
                                    action: "login_button"
                                })
                            })
                        }
                        if (!a.mijnRtl) return void d.notification("error", {
                            text: "Toevoegen aan Favorieten mislukt",
                            icon: "fav"
                        });
                        var k = g.abstractKey,
                            l = a.mijnRtl.favorites,
                            m = null;
                        c.click("favoriet"), j = !0, f.addClass("busy"), $.inArray(k, l) > -1 ? (c.click(h.originalEvent.target, "favorieten", {
                            action: "verwijderd"
                        }), e.$emit("mijnrtl.remove.fav", k), m = b.removeFavourite(k).then(function() {
                            d.notification("info", {
                                title: g.title,
                                text: "is verwijderd uit je favorieten",
                                icon: "fav"
                            })
                        }, function() {
                            d.notification("warning", {
                                text: "Verwijderen uit favorieten niet gelukt",
                                icon: "fav"
                            })
                        })) : (c.click(h.originalEvent.target, "favorieten", {
                            action: "toegevoegd"
                        }), e.$emit("mijnrtl.add.fav", k), m = b.setFavourite(k).then(function() {
                            d.notification("info", {
                                title: g.title,
                                text: "is toegevoegd aan je favorieten",
                                icon: "fav"
                            })
                        }, function() {
                            d.notification("warning", {
                                text: "Toevoegen aan favorieten mislukt",
                                icon: "fav"
                            })
                        })), m.then(function() {
                            f.removeClass("busy"), j = !1
                        })
                    }
                })
            }
        }
    }]), rtlxl.directive("wlButton", ["$rootScope", "rtlidService", "askservice", "mddialog", "analytics", function(a, b, c, d) {
        "use strict";
        return {
            restrict: "C",
            link: function(e, f, g) {
                function h(b) {
                    if (a.mijnRtl) {
                        var c = $.inArray(b, a.mijnRtl.watchLater) > -1;
                        c ? (f.addClass("active"), f.attr("title", "Verwijder uit afspeellijst")) : (f.removeClass("active"), f.attr("title", "Voeg toe aan afspeellijst"))
                    }
                }
                var i = null,
                    j = !1;
                $(f).tipsy && $(f).tipsy({
                    gravity: "n"
                }), g.$observe("key", function(b) {
                    i = b, void 0 !== a.mijnRtl && a.mijnRtl && h(i), e.$on("mijnRtlUpdate", function() {
                        h(i)
                    })
                }), f.bind("click", function(h) {
                    if (h.stopPropagation(), i && j !== !0) {
                        if (!b.isLoggedIn()) {
                            c.click(h.originalEvent.target, "kijklater", {
                                action: "niet_ingelogd"
                            });
                            var k = d.notification("warning", {
                                text: "Log in om deze video toe te voegen aan je afspeellijst",
                                icon: "xlicon-round-plus"
                            });
                            return void(k.scope.onLoginClick = function() {
                                c.click(h.originalEvent.target, "kijklater", {
                                    action: "login_button"
                                })
                            })
                        }
                        if (!a.mijnRtl) return void d.notification("error", "Toevoegen mislukt");
                        j = !0, f.addClass("busy");
                        var l = a.mijnRtl.watchLater,
                            m = null;
                        c.setMeta({
                            ui: i
                        }), $.inArray(i, l) > -1 ? (c.click(h.originalEvent.target, "kijklater", {
                            action: "verwijderd"
                        }), m = b.removeWatchLater(i).then(function() {
                            d.notification("info", {
                                title: "â€œ" + g.title + "â€",
                                text: "is verwijderd uit je afspeellijst",
                                icon: "xlicon-round-plus"
                            }), e.$emit("mijnrtl.remove.watchLater", i)
                        }, function() {
                            d.notification("info", "Verwijderen uit afspeellijst")
                        })) : (c.click(h.originalEvent.target, "kijklater", {
                            action: "toegevoegd"
                        }), m = b.addWatchLater(i).then(function() {
                            d.notification("info", {
                                title: "â€œ" + g.title + "â€",
                                icon: "xlicon-round-plus",
                                text: "is toegevoegd aan je afspeellijst"
                            }), e.$emit("mijnrtl.add.watchLater", i)
                        }, function() {
                            d.notification("warning", "Toevoegen aan afspeellijst mislukt")
                        })), m.then(function() {
                            f.removeClass("busy"), j = !1
                        })
                    }
                })
            }
        }
    }]), rtlxl.directive("infoButton", ["$rootScope", "$location", "askservice", "mddialog", "analytics", "$timeout", function(a, b, c, d) {
        "use strict";
        return {
            restrict: "C",
            scope: {
                item: "="
            },
            link: function(a, c) {
                $(c).tipsy && $(c).tipsy({
                    gravity: "n"
                }), c.bind("click", function(c) {
                    var e;
                    if (c.stopPropagation(), VFD.util.isMovie(a.item)) {
                        var f = a.item;
                        e = d.open({
                            template: "film-synopsis.html",
                            data: {
                                film: f,
                                poster_url: VFD.util.coverBaseUrl() + "p/pc/" + f.episode.key,
                                hasTrailer: f.episode && f.episode.ext.trailer,
                                trailer: function() {
                                    b.path("/trailer/" + f.episode.ext.trailer), this.close()
                                },
                                watch: function() {
                                    b.path(VFD.util.materialPath(f)), this.close()
                                }
                            }
                        })
                    } else e = d.open({
                        template: "views/modals/episode.html",
                        data: {
                            material: a.item,
                            cover_image: VFD.util.screenshotBaseUrl() + "sz=355x200/uuid=" + a.item.uuid,
                            watch: function() {
                                b.path(VFD.util.materialPath(a.item)), this.close()
                            }
                        }
                    })
                })
            }
        }
    }]), rtlxl.directive("syscheck", ["$q", "$timeout", "$sce", "$http", "analytics", function(a, b, c, d, e) {
        "use strict";
        return {
            restrict: "C",
            templateUrl: "views/modules/syscheck.html",
            scope: {},
            link: function(d) {
                function f() {
                    j !== !0 && (j = !0, d.visible = !0, e.sendEvent("Systeemcheck", "start"), window.$script(["scripts/vendor/lib/Silverlight.js"], function() {
                        g()
                    }))
                }

                function g() {
                    angular.forEach(k, function(e) {
                        var f = a.defer();
                        b(function() {
                            if (e.async) {
                                var a = e.fn(this);
                                a.then(function(a) {
                                    f.resolve(e.fn.apply(a))
                                })
                            } else f.resolve(e.fn.apply(this))
                        }, 150);
                        var g = f.promise;
                        g.then(function(a) {
                            a.text = c.trustAsHtml(a.text), d.results.push({
                                check: e,
                                data: a
                            })
                        })
                    })
                }

                function h() {
                    var a = navigator.userAgent.toLowerCase(),
                        b = -1 !== a.indexOf("msie") || -1 !== a.indexOf("trident");
                    if (b === !0) {
                        var c = parseInt(a.split("msie")[1], 10);
                        if (9 > c) return {
                            success: !1,
                            text: "Je gebruikt Internet Explorer " + c + ". Om deze site goed te bekijken is minimaal versie 9 vereist."
                        }
                    }
                    var d = a.indexOf("firefox") > -1,
                        e = "webkitRequestAnimationFrame" in window;
                    return b || d || e ? {
                        success: !0,
                        text: "Je gebruikt een geschikte browser"
                    } : {
                        success: !0,
                        text: "Je gebruikt gebruikt een onbekende browser. Het is mogelijk dat niet alle onderdelen van de site goed worden weergegeven. "
                    }
                }

                function i() {
                    function b() {
                        var a = {
                            local: (new Date).getTime() / 1e3,
                            remote: window.utime
                        };
                        c.resolve(Math.abs(a.local - a.remote) > 3600 ? {
                            success: !1,
                            text: "Controleer of uw computerklok de juiste tijd aangeeft."
                        } : {
                            success: !0,
                            text: "De klok op uw computer is goed ingesteld."
                        })
                    }
                    var c = a.defer(),
                        d = "http://www.rtl.nl/system/locations/timestamp/js/utime.js";
                    return window.utime ? b() : jQuery.getScript(d).done(function() {
                        b()
                    }).fail(function() {}), c.promise
                }
                var j = !1;
                d.visible = !1, d.results = [], b(function() {
                    f()
                }, 1e3);
                var k = [{
                    title: "Geschikte webbrowser",
                    fn: function() {
                        var b = a.defer();
                        return b.resolve(h()), b.promise
                    }
                }, {
                    title: "Adobe Flash",
                    fn: function() {
                        var a = window.getFlashVersion();
                        return a >= 11.2 ? {
                            success: !0,
                            text: "Je gebruikt Flash plugin versie " + window.getFlashVersion()
                        } : -1 === a ? {
                            success: !1,
                            text: 'Flash niet geÃ¯nstalleerd. Bezoek je de site met tablet of telefoon? Installeer dan de <a href="/#!/beschikbaar">RTL XL app</a>.'
                        } : {
                            success: !1,
                            text: "We raden minimaal flash versie <strong>11.2</strong> aan. Je gebruikt Flash plugin versie " + a
                        }
                    }
                }, {
                    title: "Microsoft Silverlight",
                    fn: function() {
                        var a = window.Silverlight.isInstalled("5.0");
                        return a ? {
                            success: !0,
                            text: "Je computer beschikt over de juiste versie van de Silverlight plugin."
                        } : {
                            success: !1,
                            text: 'Je hebt minimaal versie 5 van <a href="http://www.microsoft.com/getsilverlight/Get-Started/Install/Default.aspx">Silverlight</a> nodig om betaalde video\'s te kunnen bekijken'
                        }
                    }
                }, {
                    title: "Cookies",
                    fn: function() {
                        var a = navigator.cookieEnabled ? !0 : !1;
                        return a ? {
                            success: !0,
                            text: "Cookies ingeschakeld"
                        } : {
                            success: !1,
                            text: "Schakel cookies in om optimaal gebruik te kunnen maken van deze site"
                        }
                    }
                }, {
                    title: "Tijdsinstelling",
                    async: !0,
                    fn: function() {
                        return i()
                    }
                }]
            }
        }
    }]), rtlxl.directive("shareButton", ["$log", "$rootScope", "askservice", "mddialog", "rtlidService", "$timeout", "analytics", function(a, b, c, d, e, f, g) {
        "use strict";
        return {
            restrict: "C",
            scope: {
                item: "="
            },
            link: function(a, b, f) {
                function h() {
                    return "material" === q || a.item.uuid ? {
                        title: a.item["abstract"].name + " - " + a.item.title,
                        url: i("#!/" + VFD.util.materialPath(a.item)),
                        className: a.item.classname
                    } : "abstract" === q ? {
                        title: a.item.name,
                        url: i("#!/" + VFD.util.abstractPath(a.item))
                    } : void 0
                }

                function i(a) {
                    var b = document.createElement("div");
                    return b.innerHTML = '<a href="' + a + '">x</a>', b.firstChild.href
                }

                function j() {
                    var a = h();
                    return "https://www.facebook.com/sharer/sharer.php?u=" + encodeURIComponent(a.url) + "&display=popup&t=" + encodeURIComponent(a.title)
                }

                function k() {
                    var a = h(),
                        b = "Te zien op RTL XL: " + a.title;
                    return "https://twitter.com/intent/tweet?text=" + encodeURIComponent(b) + "&url=" + encodeURIComponent(a.url)
                }

                function l(a) {
                    var b = h(),
                        c = "Bekijk deze video op RTL XL: " + b.url;
                    return "mailto:" + a + "?subject=" + encodeURIComponent(b.title) + "&body=" + encodeURIComponent(c)
                }

                function m(b) {
                    return b ? '<iframe src="//www.rtl.nl/system/videoplayer/derden/embed.html#!/uuid=' + a.item.uuid + '/" allowfullscreen seamless frameborder="0" width="' + b[0] + '" height="' + b[1] + '"></iframe>' : null
                }

                function n() {
                    var b = d.open({
                            template: "views/modals/share.html",
                            data: {
                                url: a.url,
                                info: h(),
                                embed_code: m([720, 404]),
                                embedSizeText: "Kies een formaat",
                                embed_size: [720, 404]
                            }
                        }),
                        c = b.scope;
                    c.$watch("embed_size", function(a) {
                        a && (c.embed_code = m(a), c.embedSizeText = a[0] + " x " + a[1])
                    }, !0), c.onFacebook = r.facebook, c.onTwitter = r.twitter, c.onPinterest = r.pinterest, c.onEmail = r.email, c.dimensionChange = function(a) {
                        var b = .5611;
                        "w" === a ? c.embed_size[1] = Math.round(parseInt(c.embed_size[0], 10) * b) : "h" === a && (c.embed_size[0] = Math.round(parseInt(c.embed_size[1], 10) / b))
                    }, c.setEmbedSize = function(a) {
                        c.embed_size = a
                    }
                }

                function o(b, c) {
                    switch (f.directLink) {
                        case "facebook":
                            r.facebook(c);
                            break;
                        case "twitter":
                            r.twitter(c);
                            break;
                        default:
                            $(b).hasClass("active") ? ($(b).removeClass("active"), a.clickedObject = null, $(b).removeClass("active-button")) : (a.clickedObject = b, n())
                    }
                }

                function p() {
                    a.clickedObject && $(a.clickedObject).removeClass("active")
                }
                var q = f.mode || "material";
                a.clickedObject = null, b.attr("title", f.title ? f.title : "Delen"), $(b).tipsy && $(b).tipsy({
                    gravity: "n"
                });
                var r = [];
                a.$watch("item", function(d) {
                    if (d) {
                        if (d.ddr_allow_sharing !== !0 || e.isInTelekidsMode()) return void b.hide();
                        b.bind("click", function(a) {
                            o($(b), a)
                        }), a.url = h().url, r = {
                            facebook: function(a) {
                                return c.click(a.target, "share", {
                                    action: "facebook"
                                }), g.send("social", {
                                    socialNetwork: "facebook",
                                    socialAction: "share",
                                    socialTarget: h().url
                                }), window.open(j(), "fbshare", "width=640,height=320"), !1
                            },
                            email: function() {
                                var a = l($(".share-email").val());
                                window.open(a)
                            },
                            twitter: function(b) {
                                window.open(k()), c.click(b.target, "share", {
                                    action: "twitter"
                                }), g.send("social", {
                                    socialNetwork: "twitter",
                                    socialAction: "share",
                                    socialTarget: a.url
                                })
                            },
                            pinterest: function(a) {
                                c.click(a.target, "share", {
                                        action: "pinterest"
                                    }), g.send("social", {
                                        socialNetwork: "pinterest",
                                        socialAction: "share",
                                        socialTarget: h().url
                                    }),
                                    function() {
                                        var a = document.createElement("script");
                                        a.setAttribute("type", "text/javascript"), a.setAttribute("charset", "UTF-8"), a.setAttribute("src", "http://assets.pinterest.com/js/pinmarklet.js?r=" + 99999999 * Math.random()), document.body.appendChild(a)
                                    }()
                            }
                        }
                    }
                }), $(window).on("resize", p), a.$on("$destroy", function() {
                    $(window).off("resize", p)
                })
            }
        }
    }]), rtlxl.directive("editFeed", [function() {
        return {
            restrict: "C",
            templateUrl: "views/modules/edit_feed.html"
        }
    }]), rtlxl.directive("editItem", [function() {
        return {
            restrict: "C",
            templateUrl: "views/modules/edit_item.html"
        }
    }]), rtlxl.directive("editIcon", ["mddialog", "rtlidService", "xlService", "$timeout", "$templateCache", "$rootScope", function(a, b, c, d, e, f) {
        return {
            restrict: "C",
            replace: !0,
            link: function(c, d) {
                function g() {
                    var d = a.open({
                            template: "editdevice.html",
                            data: {
                                rtlxlItems: [{
                                    product: "rtlxl",
                                    name: "mobile",
                                    device: "mobile",
                                    selected: !1
                                }, {
                                    product: "rtlxl",
                                    name: "tablet",
                                    device: "tablet",
                                    selected: !1
                                }, {
                                    product: "rtlxl",
                                    name: "desktopHome",
                                    device: "desktophome",
                                    selected: !1
                                }, {
                                    product: "rtlxl",
                                    name: "desktopMovie",
                                    device: "desktopmovie",
                                    selected: !1
                                }, {
                                    product: "rtlxl",
                                    name: "desktopSeries",
                                    device: "desktopseries",
                                    selected: !1
                                }, {
                                    product: "rtlxl",
                                    name: "desktopPreview",
                                    device: "desktoppreview",
                                    selected: !1
                                }, {
                                    product: "rtlxl",
                                    name: "desktoptestfeed",
                                    device: "desktoptestfeed",
                                    selected: !1
                                }],
                                telekidsItems: [{
                                    product: "telekids",
                                    name: "telekids",
                                    device: "telekids",
                                    selected: !1
                                }],
                                title: h().name || h()["abstract"].name,
                                subtitle: h().title,
                                currentProduct: c.currentProduct
                            }
                        }),
                        e = d.scope;
                    e.show = !0, //!show: 'editor is even niet beschikbaar'
                        e.doCheck = function() {
                            e.currentProduct = null, e.busy = !0, e.rtlxlDevices = [], e.telekidslDevices = [];
                            var a = b.checkOnSpotlight(h().uuid);
                            a.then(function(a) {
                                var b;
                                if (a && a.RTLXL && a.RTLXL.Devices)
                                    for (e.rtlxlDevices = a.RTLXL.Devices, b = 0; b < e.rtlxlItems.length; b++) e.rtlxlItems[b].selected = !1, -1 !== e.rtlxlDevices.indexOf(e.rtlxlItems[b].device) && (e.rtlxlItems[b].selected = !0);
                                if (a && a.Telekids && a.Telekids.Devices)
                                    for (e.telekidslDevices = a.Telekids.Devices, b = 0; b < e.telekidsItems.length; b++) e.telekidsItems[b].selected = !1, -1 !== e.telekidslDevices.indexOf(e.telekidsItems[b].device) && (e.telekidsItems[b].selected = !0);
                                e.busy = !1
                            }, function() {
                                e.busy = !1
                            })
                        }, e.doCheck(), e.editorClasses = function(a) {
                            var b = "";
                            return e.busy && (b += "disabled "), a.selected && (b += "selected"), b
                        }, e.clickVink = function(a) {
                            var c;
                            e.busy || (c = a.selected ? b.deleteFromSpotlight(a.device, h().uuid, a.product) : b.addToSpotlight(a.device, h().uuid, a.product), e.busy = !0, c.then(function() {
                                a.selected = !a.selected, e.busy = !1
                            }, function() {
                                e.busy = !1
                            }))
                        }
                }
                c.data = null, c.currentProduct = "@";
                var h = function() {
                    return c.$parent.xlThumb ? c.$parent.xlThumb : c.data
                };
                f.checkEditmode.then(function(a) {
                    c.editmode = a
                }), d.bind("click", function() {
                    c.item && (c.data = c.item), c.material && (c.data = c.material), c.film && (c.data = c.film), c.$apply(function() {
                        g()
                    })
                }), e.put("editdevice.html", '<div class="editItem md-modal md-effect-1" id="md-instructions"></div><div class="md-overlay"></div>')
            }
        }
    }]), rtlxl.directive("editfeedIcon", ["mddialog", "rtlidService", "xlService", "$timeout", "$templateCache", function(a, b, c, d, e) {
        return {
            restrict: "C",
            replace: !0,
            link: function(c, d) {
                function f() {
                    var d = a.open({
                            template: "editfeed.html",
                            data: {
                                rtlxlItems: [{
                                    product: "rtlxl",
                                    name: "mobile",
                                    device: "mobile",
                                    selected: !1
                                }, {
                                    product: "rtlxl",
                                    name: "tablet",
                                    device: "tablet",
                                    selected: !1
                                }, {
                                    product: "rtlxl",
                                    name: "desktopHome",
                                    device: "desktophome",
                                    selected: !1
                                }, {
                                    product: "rtlxl",
                                    name: "desktopMovie",
                                    device: "desktopmovie",
                                    selected: !1
                                }, {
                                    product: "rtlxl",
                                    name: "desktopSeries",
                                    device: "desktopseries",
                                    selected: !1
                                }, {
                                    product: "rtlxl",
                                    name: "desktopPreview",
                                    device: "desktoppreview",
                                    selected: !1
                                }],
                                telekidsItems: [{
                                    product: "telekids",
                                    name: "telekids",
                                    device: "telekids",
                                    selected: !1
                                }],
                                title: "Feed Editor",
                                subtitle: "selecteer een feed"
                            }
                        }),
                        e = d.scope;
                    e.show = !0, //!show: 'editor is even niet beschikbaar'
                        e.clickVink = function(a) {
                            var c;
                            if (!e.busy) {
                                e.busy = !0;
                                var d = !1;
                                for (c = 0; c < e.rtlxlItems.length; c++) e.rtlxlItems[c].selected = !1, d || "rtlxl" !== a.product || e.rtlxlItems[c].device !== a.device || (e.rtlxlItems[c].selected = !0, d = !0);
                                for (c = 0; c < e.telekidsItems.length; c++) e.telekidsItems[c].selected = !1, d || "telekids" !== a.product || e.telekidsItems[c].device !== a.device || (e.telekidsItems[c].selected = !0, d = !0);
                                var f = b.getSpotlightListSpec(a.product, a.device);
                                e.busy = !0, e.materials = [], f.then(function(b) {
                                    for (var c = new VFD.Model(b), d = c.getMaterials(), f = 0; f < d.length; f++) e.materials.push({
                                        name: d[f]["abstract"].name,
                                        title: d[f].title,
                                        uuid: d[f].uuid,
                                        product: a.product,
                                        device: a.device
                                    });
                                    e.busy = !1
                                }, function() {
                                    e.busy = !1
                                })
                            }
                        }, e.clickVink({
                            product: c.product,
                            device: c.device
                        }), e.editorClasses = function(a) {
                            var b = "";
                            return e.busy && (b += "disabled "), a.selected && (b += "selected"), b
                        }, e.clickRemove = function(a) {
                            var c = b.deleteFromSpotlight(a.device, a.uuid, a.product);
                            e.busy = !0, c.then(function() {
                                for (var b = 0; b < e.materials.length; b++)
                                    if (e.materials[b].uuid === a.uuid) {
                                        e.materials.splice(b, 1);
                                        break
                                    }
                                e.busy = !1
                            }, function() {
                                e.busy = !1
                            })
                        }
                }
                c.data = null, c.currentProduct = "@", d.bind("click", function() {
                    c.item && (c.data = c.item), c.film && (c.data = c.film), c.$apply(function() {
                        f()
                    })
                }), e.put("editfeed.html", '<div class="editFeed md-modal md-effect-1" id="md-instructions"></div><div class="md-overlay"></div>')
            }
        }
    }]), rtlxl.directive("editorLinks", ["rtlidService", "$rootScope", "$compile", "$timeout", function(a, b, c, d) {
        return {
            restrict: "C",
            replace: !0,
            template: '<div><a href="{{ urls.mediaLinkEditor }}" target="_blank"><span class="rtl-icon">-</span>&nbsp;Edit video</a><br/><a href="#" ng-show="material" ng-click="showVideoInfo($event)"><span class="rtl-icon">$</span>&nbsp;Video info</a><br/><a ng-if="urls.removePass" href="{{ urls.removePass }}" target="_blank">SVOD Unsubscribe</a><br/></div>',
            scope: {},
            link: function(e) {
                function f() {
                    e.editmode = a.inEditMode(), e.editmode && e.material && (e.urls = {
                        mediaLinkEditor: "http://146.220.2.136/MedialinkEditor/Default.aspx?uuid=" + e.material.uuid + "&thumbid=" + e.material.thumb_id
                    }, RTL.rtlAccount.loginStatusChanged.then(function(a) {
                        a && a.hasSubscription && d(function() {
                            var b = a.rtlId;
                            e.urls.removePass = RTLXL.config.payments.host + "/Rtl.Processing.Payments.Web.BackEndProxy/PaymentFunctions/DeleteSvodSubscription/" + b
                        })
                    })), ruf().defer().all([b.checkEditmode, g.promise]).then(function(a) {
                        e.editmode = a[0], e.visible = e.editmode && a[1]
                    })
                }
                var g = ruf().defer();
                b.$on("hasMaterial", function(a, b) {
                    e.material = b, g.resolve(e.material)
                }), e.$on("$routeChangeStart", function() {
                    e.material = null, e.videoInfo && ($("#video-info").remove(), e.videoInfo.remove(), e.videoInfo = null)
                }), RTL.rtlAccount.loginStatusChanged.then(function() {
                    d(function() {
                        f()
                    })
                }), e.$watch("material", function() {
                    f()
                }), e.showVideoInfo = function(a) {
                    if (!e.material) return void a.preventDefault();
                    $("#video-info").remove(), e.videoPath = VFD.util.getComponentPath(e.material);
                    var b = '<div id="video-info" class="editor-video-info"><table><tr><td>Videopad:</td><td>{{ videoPath }}</td></tr><tr><td>Abstract key:</td><td>{{ material.abstract_key }}</td></tr><tr><td>Season key:</td><td>{{ material.season_key }}</td></tr><tr><td>Episode key:</td><td>{{ material.episode_key }}</td></tr><tr><td>UUID:</td><td>{{ material.uuid }}</td></tr></table></div>';
                    e.videoInfo = c(b)(e), $("body").append(e.videoInfo), a.preventDefault()
                }
            }
        }
    }]), rtlxl.directive("paymentOverlay", ["storage", "askservice", "$q", "analytics", function(a, b, c, d) {
        "use strict";
        return {
            restrict: "A",
            replace: !1,
            controller: ["$scope", "$element", "$attrs", function() {}],
            link: function(e, f) {
                var g = a.pop("rtlxl_payment_return", !0);
                c.when(RTL.rtlAccount.loginStatusChanged).then(function(a) {
                    a.isLoggedIn && !e.hasSubscription && g && g.length && (document.location = g)
                }), e.loginScreen = !1;
                var h = {
                    none: 0,
                    nlziet: 1,
                    videoland: 2
                };
                e.payReason = e.xlPlayer.isLive ? "Dit is een betaalde livestream" : e.xlPlayer.isPreview ? "Dit is een betaalde video, omdat deze nog niet op TV is uitgezonden" : "Dit is een betaalde video, omdat deze ouder is dan 7 dagen", e.isNlziet = (e.buttonMatrix & h.nlziet) === h.nlziet, e.isVideoland = (e.buttonMatrix & h.videoland) === h.videoland;
                var i = "background-image:url(http://covers.rtl.nl/system/cover/l/carrousel/{url}); {size}:cover;",
                    j = ruf(i).format({
                        url: e.xlPlayer.season_key || e.xlPlayer.abstract_key,
                        size: ruf().autoPrefix("background-size")
                    });
                f[0].style.cssText += j, e.$watch("payment", function(c) {
                    c && (b.customClick(f, "rtlxlnl.abonnement.scherm.picturelink.20152001", {}), e.loginUrl = RTLXL.config.rtlid.logon_url + "" + encodeURIComponent(window.location), e.svodHelpUrl = RTLXL.config.links.svodHelp, angular.element(document.getElementById("button-t")).click(function() {
                        window.location = e.payment.data.ShopUrl
                    }), angular.element(document.getElementById("button-xl-svod")).click(function() {
                        a.set("rtlxl_payment_return", e.payment.data.SvodShopUrl, !0)
                    }))
                }), ruf(f).on("click", '[data-type="moreInfoButton"]', function() {
                    var a = ruf(f).find('[data-type="moreInfo"]'),
                        b = ruf(f).find('[data-type="invisible-moreinfo"]');
                    d.sendEvent("why-pay-info", "click", "Waarom betalen"), a.addClass("visible"), RTL.ruf.browser.isIe && a.rufStyle("height", ruf(f).computedStyle("height")), ruf([{
                        target: a,
                        css: {
                            opacity: "1"
                        },
                        delay: 200,
                        duration: 250
                    }, {
                        target: b,
                        css: {
                            opacity: "0"
                        },
                        duration: 250
                    }]).animate().then(function() {
                        b.addClass("invisible")
                    })
                }), ruf(f).on("click", '[data-type="exitButton"]', function() {
                    var a = ruf(f).find('[data-type="moreInfo"]'),
                        b = ruf(f).find('[data-type="invisible-moreinfo"]');
                    b.removeClass("invisible"), ruf([{
                        target: b,
                        css: {
                            opacity: "1"
                        },
                        delay: 200,
                        duration: 250
                    }, {
                        target: a,
                        css: {
                            opacity: "0"
                        },
                        duration: 250
                    }]).animate().then(function() {
                        a.removeClass("visible")
                    })
                }), e.showLoginScreen = function() {
                    e.loginScreen = !0
                }
            }
        }
    }]), rtlxl.directive("xlDropdownMenu", ["$timeout", "$rootScope", function(a) {
        return {
            restrict: "A",
            scope: {
                xlDropdownMenu: "@"
            },
            link: function(b, c) {
                function d() {
                    b.state = "showing", a(function() {
                        b.state = "", g(), ruf([{
                            target: i,
                            css: {
                                transform: "translateY(0px)"
                            },
                            duration: h.duration,
                            easing: "ease-out"
                        }]).Animate().then(function() {
                            b.state = "visible"
                        })
                    }, 0)
                }

                function e() {
                    b.state = "hiding", ruf([{
                        target: i,
                        css: {
                            transform: "translateY(-" + i.offsetHeight + "px)"
                        },
                        duration: h.duration,
                        easing: "ease-in"
                    }]).animate().then(function() {
                        a(function() {
                            b.state = "hidden"
                        }, 0)
                    })
                }

                function f(a) {
                    c[0].compareDocumentPosition(a.target);
                    j === !0 && k(), ruf(window).off("click", f)
                }

                function g() {
                    ruf(window).on("click", f)
                }
                var h = new Function("var obj = " + b.xlDropdownMenu + "; if(ruf(obj).typeof('object')) { return obj; }")() || {};
                h = ruf(h).extend({
                    container: ".account-menu-container",
                    dropdown: ".dropdownMenuContainer",
                    duration: 200,
                    target: "data-dropdowntarget"
                })[0], b.state = "hidden";
                var i = ruf(c[0]).find(h.dropdown)[0],
                    j = !1,
                    k = function() {
                        var a = {
                            "true": d,
                            "false": e
                        };
                        return function() {
                            j = !j, a["" + j]()
                        }
                    }();
                ruf(c[0]).on("click", h.target, k), h.externalTarget && ruf("body").on("click", h.externalTarget, k)
            }
        }
    }]), rtlxl.directive("xlThumbItem", [function() {
        "use strict";
        return {
            restrict: "A",
            controller: "xlVideoItemCtrl",
            replace: !0,
            scope: {
                item: "=",
                currentPage: "@",
                thumbItemPage: "@",
                itemType: "@"
            },
            templateUrl: "views/modules/xl-thumb-item.html"
        }
    }]), rtlxl.directive("xlDetailItem", ["$document", "$location", "$timeout", "$rootScope", function(a, b, c) {
        "use strict";
        return {
            restrict: "A",
            controller: "xlVideoItemCtrl",
            replace: !0,
            scope: {
                item: "=",
                currentPage: "@",
                thumbItemPage: "@",
                itemType: "@",
                closeButton: "@",
                scrollIntoView: "@"
            },
            templateUrl: "views/modules/xl-detail-item.html",
            link: function(a, d) {
                function e() {
                    a.item && a.scrollIntoView && b.path() === f && c(function() {
                        var a = $(window).height() - 400;
                        0 > a && (a = 0);
                        var b = d.offset().top - a;
                        ruf([{
                            target: ruf("html, body"),
                            scrollTop: b,
                            duration: 200
                        }]).Animate({
                            type: "scroll"
                        })
                    }, 500)
                }
                var f = b.path();
                a.$watch("item", e), a.close = function() {
                    a.item.active = !1, a.item = null
                }
            }
        }
    }]), rtlxl.directive("xlPlayer", ["$timeout", "$log", "rtlidService", "usabilla", "$rootScope", "$q", "XlPlayer", "$compile", "$templateCache", "$http", "Tips", "AbTest", function(a, b, c, d, e, f, g, h, i, j, k) {
        function l(a, b) {
            var c = f.defer();
            return a.playerElement().ruf("video." + b) || (a.playerElement().ruf("video." + b, !0), c.resolve()), c.promise
        }

        function m(a, b) {
            window.usabilla_live && window.usabilla_live("setEventCallback", function(a) {
                "feedback" === a && d.set({
                    "Player log": RTL.api.stashLog()
                })
            });
            var c = b.$watch("playerType", function(a) {
                null !== a && c()
            })
        }

        function n(a) {
            var b = setInterval(function() {
                var c = PlayerDetect.getInstance().playerElement();
                null !== c && (clearInterval(b), c.showPaymentWindow = function(b) {
                    a.$apply(function() {
                        b = JSON.parse(b), a.payment = {
                            data: b
                        }
                    })
                })
            }, 16)
        }

        function o(a, b) {
            if (e.upNext && b.$parent.$parent.playNext) {
                var c = i.get("player-countdown.html");
                ruf(u)[0].innerHTML = c, h(ruf(u)[0].childNodes)(e)
            }
            k.getTipList().then(function(a) {
                var c = [],
                    d = [],
                    f = 3,
                    g = window.location.href.replace(/(\w|\W){1,}(\/)/i, "");
                for (ruf(a.material).forEach(function(b) {
                        b.episode_key.length > 0 && -1 === e.watchedVideos.indexOf(b.uuid) && b.uuid !== g && (b.name || ruf(a.abstracts).forEach(function(a) {
                            return a.key === b.abstract_key ? void(b.name = a.name) : void 0
                        }), b.display_date += "000", b.dateAndTime = b.display_date + "-" + b.duration, c.push(b))
                    }), b.playerGridIndex = 0; c.length > f;) d.push(c.splice(0, 3));
                c.length > 0 && d.push(c), b.paginatedGridData = d, s.then(function(a) {
                    ruf(u)[0].insertAdjacentHTML("afterend", a.data), h($("#player-grid").contents())(b)
                })
            }, function(a) {
                window.console && console.warn(a)
            })
        }

        function p(a, b, c) {
            m(a, c);
            ! function() {
                var d = ruf().defer(),
                    e = 1e3,
                    f = 1e4,
                    g = 50,
                    h = setInterval(function() {
                        var i = ruf(a.playerElement()),
                            j = i.find("video");
                        if (f -= g, i.length > 0 && (e -= g), j.length > 0) {
                            clearInterval(h);
                            var k = 0,
                                l = !1,
                                m = function(d) {
                                    d.indexOf(".mp4") > -1 && v.adStart(a, b, c)
                                },
                                n = function(d) {
                                    var e = d.indexOf(".m3u8") > -1,
                                        f = d.indexOf(".mp4") > -1;
                                    !e && (e || f) || 0 !== k || (++k, v.contentStart(a, b, c))
                                },
                                o = function(a) {
                                    l && k > 0 && a.indexOf(".m3u8") > -1
                                };
                            j[0].addEventListener("play", function(d) {
                                var e = j[0].currentSrc;
                                d = d || window.event, v.play(a, b, c), j[0].ruf("player.ended", null), m(e), n(e), o(e)
                            }, !1), j[0].addEventListener("pause", function(d) {
                                d = d || window.event, l = !0, v.play(a, b, c)
                            }, !1);
                            var p = ruf().debounce(1001),
                                q = !1;
                            j[0].addEventListener("ended", function() {
                                q = !0, v.playerEnd(a, b, c)
                            }, !1), j[0].addEventListener("timeupdate", function() {
                                p(function() {
                                    var d = j[0].ruf("player.ended");
                                    (!d || d && d !== j[0].currentSrc) && !q && Number(j[0].duration) - Number(j[0].currentTime) < 2 && (j[0].ruf("player.ended", j[0].currentSrc), v.playerEnd(a, b, c))
                                })
                            }, !1), d.resolve(j)
                        } else 0 >= e ? (clearInterval(h), d.reject("no html5 video")) : 0 >= f && clearInterval(h)
                    }, g);
                return d.promise
            }();
            return function(d) {
                var e = d.type,
                    f = {
                        Initialising: v.initSilverlight,
                        ad_start: v.adStart,
                        content_start: v.contentStart,
                        play: v.play,
                        pause: v.pause,
                        playlist_end: v.playerEnd,
                        Playing: v.contentStart,
                        Paused: v.pause,
                        Stopped: v.playerEnd,
                        svod_promo: c.showSvodPromo,
                        svod_promo_ad: c.showSvodPromo,
                        data: function() {}
                    };
                f[e] = f[e] ? f[e] : function() {}, w(e, a, b, c).then(function() {
                    f[e](a, b, c)
                })
            }
        }
        e.watchedVideos = [];
        var q = function() {
                var a = !!window.chrome && !!window.chrome.webstore,
                    b = "undefined" == typeof window.orientation,
                    c = navigator.userAgent.match(/(Chrome)(\/)(\d+)/) || [];
                return a && b && Number(c[3]) >= 42
            }(),
            r = f.defer(),
            s = r.promise;
        j.get("views/modules/player-grid.html").then(function(a) {
            r.resolve(a)
        });
        var t = "video-container",
            u = "#" + t,
            v = {
                initSilverlight: function(a) {
                    a.initialized = !0
                },
                adStart: function(b, c) {
                    e.spinner.player.stop(), b.initialized = !0, a(function() {
                        c.playerEvent = "ad_start"
                    }, 0)
                },
                contentStart: function(b, c, d) {
                    e.spinner.player.stop(), b.initialized = !0, l(b, "contentStarted").then(function() {
                        d.addToHistory()
                    }), a(function() {
                        c.playerEvent = "content_start"
                    }, 0)
                },
                playerEnd: function(b, d, e) {
                    ("silverlight" !== e.playerType || "silverlight" === e.playerType && b.initialized === !0) && (c.isInTelekidsMode() || a(function() {
                        o(b, e)
                    }, 750))
                },
                play: function() {},
                pause: function() {}
            },
            w = function(a, b, c, d) {
                var e = f.defer(),
                    g = {
                        Playing: function() {
                            l(b, "gaTracking").then(function() {
                                VFD.util.isPaid(d.xlPlayer) && d.gaTrackEvent("video-betaald", "play")
                            })
                        }
                    };
                return g[a] ? (g[a](), e.resolve()) : e.resolve(), e.promise
            };
        return {
            restrict: "A",
            templateUrl: "views/modules/player.html",
            controller: "XlPlayerCtrl",
            scope: {
                xlPlayer: "="
            },
            link: function(f) {
                function g(b) {
                    if (n(f), f.playerType = q ? "dash" : f.setPlayerType(b), f.xlPlayer.isPaid || (f.slMessage = !1), "silverlight" === f.playerType) a(function() {
                        f.slMessage = Silverlight && !Silverlight.isInstalled() && (!q || q && f.$parent.$parent.isLive)
                    });
                    else if ("flash" === f.playerType) {
                        var c = window.getFlashVersion();
                        11.8 >= c && (f.flMessage = !0)
                    }
                    $("object").addClass("dont-turn-off-the-lights"), "html5" === f.playerType && setTimeout(function() {
                        f.addToHistory()
                    }, 1e3)
                }

                function h(a) {
                    var c = {};
                    document.documentMode && (c.wmode = "opaque"), c.callback = g;
                    var h = RTLXL.config.videoplayer.player_detect_version;
                    RTL.setOnLoadCallback(function() {
                        if ("undefined" == typeof PlayerDetect) return d.set({
                            PlayerDetect: "PlayerDetect is undefined!"
                        }), window.NREUM && window.NREUM.noticeError(new Error("PlayerDetect undefined in xlPlayer")), void b.error("PlayerDetect is undefined");
                        d.set({
                            PlayerDetect: "loaded successfully"
                        });
                        var g = new PlayerDetect("rtlxl", a);
                        c.eventhook = p(g, e, f), g.writePlayer(f.xlPlayer.uuid, t, c)
                    }, !1), RTL.load("PlayerDetect", h, {
                        host: "http://www.rtl.nl",
                        debug: !1
                    })
                }
                f.platform = RTL.xl.platform, f.addedToHistory = !1, f.editmode = c.inEditMode(), f.cancelCountdown = !1, f.logonUrl = RTLXL.config.rtlid.logon_url + window.location.href.split("#!")[0] + "#!/";
                var i = f.$watch("xlPlayer", function(a) {
                    a && (i(), f.slMessage = a.isPaid && Silverlight && !Silverlight.isInstalled() && (!q || q && f.$parent.$parent.isLive))
                });
                RTL.rtlAccount.loginStatusChanged.then(function() {
                    f.isLoggedIn = RTL.rtlAccount.isLoggedIn
                }), f.getPlayerParameters.then(function(a) {
                    RTL.rtlAccount.loginStatusChanged.then(function() {
                        RTL.rtlAccount.isLoggedIn ? ((RTL.rtlAccount.hasSubscription || f.xlPlayer.isPaid) && q && (a.overrideArgs = a.overrideArgs || {}, a.overrideArgs.fmt = "dash", a["playerConfiguration-drm_host"] = RTLXL.config.rightsmanager.widevine), h(a)) : (q && f.xlPlayer.isPaid && (a.overrideArgs = {
                            fmt: "dash"
                        }), h(a))
                    }, function() {})
                }, function() {}), a(function() {
                    $(".proglogo").bind("error", function() {
                        $(this).hide()
                    })
                }, 300)
            }
        }
    }]), rtlxl.directive("xlTimer", ["$timeout", function(a) {
        "use strict";
        return {
            restrict: "A",
            scope: {
                onend: "=",
                endargs: "=",
                start: "@",
                xlTimer: "@"
            },
            link: function(b) {
                b.start = Number(b.start || 0);
                var c, d = function() {
                    c = a(function() {
                        if (b.$parent.cancelCountdown === !1)
                            if (b.start > 0) --b.start, d();
                            else {
                                var a = ruf(b.endargs)["typeof"]("array") ? b.endargs : [b.endargs];
                                b.onend.apply(this, a)
                            }
                    }, 1e3)
                };
                d(), b.$on("$destroy", function() {
                    a.cancel(c)
                })
            }
        }
    }]), rtlxl.directive("xlResponsiveMedia", ["$rootScope", "ruf", function(a, b) {
        var c = ["$scope", function(a) {
            var c = {},
                d = {
                    all: {
                        mediatype: "image",
                        placeholder: "//covers.rtl.nl/system/cover/l/pc/default",
                        watchable: !1
                    },
                    image: {
                        alt: "rtlxl.nl"
                    },
                    video: {
                        autoplay: !0
                    }
                },
                e = function(a) {
                    var b = new Function("var obj = " + a + "; if(ruf(obj).typeof('object')) { return obj; }")();
                    return b ? b : void 0
                },
                f = function() {
                    for (var b in a)
                        if (a.hasOwnProperty(b) && null !== a[b] && 0 !== b.indexOf("$") && "function" != typeof a[b]) switch (!0) {
                            case "player" === b:
                                c[b] = e(a[b]);
                                break;
                            case "enablescaling" === b:
                                if (a[b]) {
                                    var d = a[b].split(",");
                                    d.length > 0 && (c.enableScaling = d)
                                } else c.enableScaling = ["scaleEnd", "breakpointChange"];
                                break;
                            default:
                                c[b] = a[b]
                        }
                },
                g = function() {
                    c = b(c).extend(d.all)[0], "image" === c.mediatype ? c = b(c).extend(d.image)[0] : (c.player = c.player || {}, c.player = b(c.player).extend(d.video)[0])
                },
                h = a.$watch("xlResponsiveMedia", function(b) {
                    b && (f(), g(), c.watchable === !1 && h(), setTimeout(function() {
                        a.addMedia(c)
                    }, 0))
                })
        }];
        return {
            scope: {
                xlResponsiveMedia: "@",
                placeholder: "@",
                alt: "@",
                externalhost: "@",
                mediatype: "@",
                videoposter: "@",
                watchable: "@",
                orientation: "@",
                mode: "@",
                player: "@",
                imageurl: "@",
                enablescaling: "@"
            },
            controller: c,
            compile: function() {
                return {
                    post: function(a, c, d) {
                        d.$observe("xlResponsiveMedia", function(b) {
                            b && b !== a.xlResponsiveMedia && (a.xlResponsiveMedia = b)
                        }), a.addMedia = function(a) {
                            var d = {
                                video: function() {
                                    b(c[0]).responsiveMedia("video").add(a)
                                },
                                image: function() {
                                    b(c[0]).responsiveMedia("image").add(a)
                                }
                            };
                            a.src = a.xlResponsiveMedia, d[a.mediatype]()
                        }
                    }
                }
            }
        }
    }]), rtlxl.directive("xlPlayerGrid", ["$timeout", "$rootScope", "$templateCache", "Tips", "$compile", function(a, b, c, d, e) {
        return {
            restrict: "A",
            replace: !1,
            link: function(f, g) {
                f.nextGridItemButton = !0, f.stopButtonClicked = !1, f.cancelCountdown = !1, f.loadVideo = function(a) {
                    if (f.cancelCountdown === !1) {
                        a = a || b.upNext;
                        var c = "#!/{0}-{1}/{2}",
                            d = ruf(c).format([RTL.xl.slugify(a.name), a.season_key, a.uuid]);
                        b.watchedVideos.push(a.uuid), window.location.hash = d
                    }
                };
                var h = ruf(g[0].parentNode),
                    i = 0,
                    j = 0,
                    k = function() {
                        f.cancelCountdown = !0
                    },
                    l = function() {
                        k(), f.stopButtonClicked = !0, d.getTipList(!0).then(function(a) {
                            RTL.rtlAccount.loginStatusChanged.then(function(b) {
                                var d = f.$new(!0, f);
                                for (d.paginatedGridData = []; a.material.length > 0;) {
                                    var g = a.material.length,
                                        h = g >= 3 ? 3 : g;
                                    d.paginatedGridData.push(a.material.splice(0, h))
                                }
                                d.isLoggedIn = b.isLoggedIn, d.nextGridItemButton = d.paginatedGridData.length > 1;
                                var i = c.get("player-grid.html"),
                                    j = ruf('[data-type="playerGrid"]').parent();
                                j.innerHTML = i, e(j.childNodes)(d)
                            })
                        })
                    },
                    m = function() {
                        var b = h.find(".player-grid-items"),
                            c = b.index(i).computedStyle(),
                            d = parseInt(c.getValueOf("width"), 10) + parseInt(c.getValueOf("margin-left"), 10);
                        j += d, ++i, i < b.length && ruf([{
                            target: h.find('[data-event="scroll"]'),
                            css: {
                                transform: "translateX(-" + j + "px)"
                            },
                            duration: 900,
                            easing: "ease-in-out"
                        }, {
                            target: b.index(i).find(".player-grid-title, .player-grid-subtitle"),
                            css: {
                                transform: "translateX(0%)"
                            },
                            duration: 1e3,
                            easing: "ease-in-out"
                        }]).animate(), i === b.length - 1 && a(function() {
                            f.nextGridItemButton = !1
                        })
                    },
                    n = function() {
                        window.location.reload()
                    },
                    o = function() {
                        if (f.stopButtonClicked === !0) return void(f.stopButtonClicked = !1);
                        var a = JSON.parse(this.getAttribute("data-play")),
                            c = "#!/{0}-{1}/{2}",
                            d = ruf(c).format([RTL.xl.slugify(a.name), a.season_key, a.uuid]);
                        b.watchedVideos.push(a.uuid), window.location.hash = d
                    },
                    p = function() {
                        k(), ruf().off("hashchange", p)
                    };
                h.on("click", '[data-event="stopCountdown"]', l), h.on("click", '[data-event="nextTip"]', m), h.on("click", '[data-event="replay"]', n), h.on("click", "[data-play]", o), ruf().on("hashchange", p), ruf({
                    target: ruf(g).find(".timer-bg"),
                    duration: 7e3,
                    css: {
                        height: "0%"
                    },
                    easing: "linear"
                }).animate()
            }
        }
    }]), rtlxl.directive("xlSvodCountdown", ["$rootScope", "$document", "$timeout", "$q", "$location", "Svod", function(a, b, c, d, e, f) {
        "use strict";

        function g(a, b) {
            a[0].title = b, a.tipsy({
                gravity: "n"
            })
        }
        var h = f.getPaymentUrl().then(function(a) {
                h = a
            }),
            i = function(a, b) {
                var c = function() {
                        ruf(a).on("click", function() {
                            var a = {
                                unsubscribed: function() {
                                    b.navigate("/meerxl")
                                },
                                subscribed: function() {
                                    b.navigate(h, "absolute")
                                },
                                loggedOut: function() {
                                    b.navigate(RTLXL.config.rtlid.logon_url + encodeURIComponent(window.location.href), "absolute")
                                }
                            };
                            b.countDownType in a && a[b.countDownType]()
                        })
                    },
                    d = "subscribed" === b.countDownType,
                    e = d && RTL.rtlAccount.daysLeft <= 1;
                (!d || e) && (ruf(a).addClass("clickable"), e && ruf(a).addClass("one-day"), c())
            };
        return {
            restrict: "A",
            replace: !1,
            controller: "XlSvodCountdownCtrl",
            link: function(a, c) {
                var d = {
                    loggedOut: function() {
                        g(c, ""), b.find("body").addClass("logged-out")
                    },
                    subscribed: function() {
                        g(c, "resterend aantal dagen toegang tot alle video's op RTL XL."), b.find("body").addClass("svod-subscription-active")
                    },
                    unsubscribed: function() {
                        g(c, ""), b.find("body").removeClass("svod-subscription-active")
                    }
                };
                a.initCountDown().then(function() {
                    a.countDownType in d && (d[a.countDownType](), i(c[0], a))
                })
            }
        }
    }]), rtlxl.directive("xlAvatar", ["$timeout", "$compile", "$rootScope", function() {
        return {
            restrict: "A",
            replace: !1,
            template: '<div class="xlAvatar-content"></div>',
            scope: {
                xlAvatar: "@"
            },
            link: function(a, b) {
                ruf(b[0]).addClass("xlAvatar"), RTL.rtlAccount.loginStatusChanged.then(function(a) {
                    b[0].children[0].insertAdjacentHTML("afterbegin", a.loginId.charAt(0).toUpperCase())
                })
            }
        }
    }]), rtlxl.directive("xlSvodContentIcon", ["$location", "$rootScope", "ruf", function(a, b) {
        "use strict";
        return {
            restrict: "A",
            templateUrl: "views/modules/xl-svod-content-icon.html",
            replace: !0,
            scope: {
                item: "="
            },
            link: function(c) {
                c.isPaid = !1, c.canSubscribe = !0, b.$watch("currentUser", function(a) {
                    a && a.isLoggedIn === !0 && a.hasSubscription && a.daysLeft > 1 && (c.canSubscribe = !1)
                }), c.$watch("item", function() {
                    c.item && (c.isPaid = VFD.util.isPaid(c.item))
                }), c.onClick = function(b) {
                    return c.canSubscribe ? (b.stopPropagation(), b.preventDefault(), a.path("/meerxl"), !1) : void 0
                }
            }
        }
    }]), rtlxl.directive("xlLikeButton", ["$rootScope", "$log", "rtlidService", "mddialog", "Tips", function(a, b, c, d, e) {
        "use strict";
        return {
            restrict: "A",
            replace: !1,
            scope: {
                action: "@",
                key: "@"
            },
            link: function(b, f) {
                function g(c) {
                    var d = a.votingHistory[b.key];
                    angular.isObject(d) || (a.votingHistory[b.key] = {}), a.votingHistory[b.key][b.action] = c, delete a.votingHistory[b.key][b.counterAction], a.$broadcast("voting.action", {
                        key: b.key,
                        action: b.action,
                        state: c
                    })
                }
                $(f).tipsy && $(f).tipsy({
                    gravity: "n"
                }), angular.extend(b, {
                    state: !1
                }), b.counterAction = "like" === b.action ? "dislike" : "like", a.$watch("votingHistory", function(a) {
                    angular.isObject(a) && b.updateState()
                }), b.$watch("key", function(a) {
                    a && b.updateState()
                }), b.$on("voting.action", function(a, c) {
                    c.key === b.key && b.updateState()
                }), b.updateState = function() {
                    var c = a.votingHistory;
                    b.state = b.key && angular.isObject(c) && b.key in c ? c[b.key][b.action] === !0 : !1, b.state === !0 ? f.addClass("active") : f.removeClass("active")
                }, f.bind("click", _.throttle(function() {
                    return c.isLoggedIn() ? void(a.votingHistory && (b.state === !0 ? e.postAction("clear", b.key) : e.postAction(b.action, b.key), g(!b.state))) : void d.notification("warning", {
                        text: "Log in om dit programma te liken",
                        icon: "xlicon-heart"
                    })
                }, 1e3))
            }
        }
    }]), rtlxl.directive("xlProgramSeasons", ["$window", "$document", "$timeout", "xlService", "$rootScope", "$location", function(a, b, c, d, e, f) {
        "use strict";
        return {
            restrict: "A",
            templateUrl: "views/modules/xl-program-seasons.html",
            replace: !0,
            link: function(d, g) {
                function h() {
                    var a = m.scrollTop();
                    a > 0 && a >= b.height() - m.height() && c(function() {
                        d.seasonFeed.page.next()
                    }), e.programSeason.path === f.path() && (e.programSeason.scrollTop = a)
                }

                function i(a) {
                    for (var b = g.find(".nav-item"), c = b.length - 1; c >= 0; c--)
                        if (angular.element(b[c]).position().left < a) return angular.element(b[c]);
                    return angular.element(b[0])
                }

                function j(a) {
                    ruf([{
                        target: l[0],
                        css: {
                            left: a.position().left - 4 + "px",
                            width: a.find("span").width() + "px"
                        },
                        duration: 200,
                        easing: "ease-in-out"
                    }]).Animate(), k(-a.position().left + 2 * a.width());
                    var c = a.data("seasonKey").toString();
                    c !== d.currentSeason && (d.getSeason(c), b.find("body").animate({
                        scrollTop: "0"
                    }, 50))
                }

                function k(a) {
                    c(function() {
                        var b = g.find(".nav-scroll-container").width();
                        if (g.find(".nav-scroll-container ul").width() <= b) return d.hideLeftButton = !0, void(d.hideRightButton = !0);
                        d.hideLeftButton = !1, d.hideRightButton = !1, a >= 0 && (a = 0, d.hideLeftButton = !0);
                        var c = -(g.find(".nav-scroll-container ul").width() - b);
                        c >= a && (a = c, d.hideRightButton = !0), ruf([{
                            target: g.find(".nav-scroll-container")[0],
                            css: {
                                left: a + "px"
                            },
                            duration: 150
                        }]).Animate()
                    })
                }
                var l = g.find(".indicator"),
                    m = angular.element(a),
                    n = null;
                d.hideLeftButton = !0, d.hideRightButton = !0, !e.programSeason || e.programSeason && e.programSeason.path !== f.path() ? e.programSeason = {
                    path: f.path()
                } : n = e.programSeason.scrollTop, d.nav = function(a) {
                    var b = angular.element(a.currentTarget);
                    b.hasClass("indicator-container") ? j(i(a.offsetX)) : b.data("seasonKey") && j(b)
                }, d.moreLeft = function() {
                    var a = g.find(".nav-scroll-container").width() / 2,
                        b = g.find(".nav-scroll-container").position().left + a;
                    k(b)
                }, d.moreRight = function() {
                    var a = g.find(".nav-scroll-container").width() / 2,
                        b = g.find(".nav-scroll-container").position().left - a;
                    k(b)
                }, m.bind("scroll", h), d.$on("$destroy", function() {
                    m.unbind("scroll", h)
                }), h(), d.$watch("currentSeason", function() {
                    d.currentSeason && (c(function() {
                        j(g.find("[data-season-key=" + d.currentSeason + "]"))
                    }), n && e.programSeason.path === f.path() && ruf([{
                        delay: 750,
                        target: ruf("html, body"),
                        scrollTop: n,
                        duration: 250
                    }]).Animate({
                        type: "scroll"
                    }))
                })
            }
        }
    }]), rtlxl.directive("xlNavHighlight", ["$rootScope", "$location", "$timeout", "$route", function(a, b, c, d) {
        function e(d, e) {
            if (!d) return !1;
            var f = Math.round(d.offsetLeft),
                h = Math.round(d.offsetWidth);
            a.activeNavItem = d, g.rufStyle("display", "block"), g[0].ruf("clicked", d), ruf({
                target: g,
                duration: 200,
                easing: "ease-out",
                css: {
                    transform: "translateX(" + f + "px)",
                    width: h + "px"
                }
            }).animate().then(function() {
                if (ruf().console("info", "site navigation: " + d.href), !e) {
                    var a = d.href.split("#!");
                    "" === a[1] && (a[1] = "/"), c(function() {
                        b.path(a[1])
                    }, 0)
                }
            })
        }

        function f() {
            c(function() {
                var a = ruf("[xl-nav-highlight]"),
                    b = a.forEach(function(a) {
                        return d.current.originalPath === a.href.split("#!")[1] ? a : void 0
                    });
                b ? b && g[0].ruf("clicked") !== b.href.split("#!")[1] && e(b) : g.rufStyle("display", "none")
            }, 0)
        }
        var g = ruf('[data-type="xlNavHighlight"]');
        return a.moveHighlighter = e, a.$on("$routeChangeSuccess", function() {
            f()
        }), {
            restrict: "A",
            replace: !1,
            link: function(a, b) {
                g = ruf('[data-type="xlNavHighlight"]'), ruf(b[0]).on("click", function(a) {
                    a.preventDefault(), e(this)
                })
            }
        }
    }]), rtlxl.directive("xlSpinner", ["$rootScope", function(a) {
        return {
            restrict: "A",
            link: function(b, c, d) {
                var e = d.xlSpinner || "player",
                    f = d.params || "{}",
                    g = new Function("var obj = " + f + "; if(ruf(obj).typeof('object')) { return obj; }")();
                g = ruf(g).extend({
                    lines: 7,
                    radius: 10,
                    length: 10,
                    css: {
                        zIndex: 0,
                        borderRadius: "50%",
                        width: "10px",
                        height: "10px"
                    }
                })[0], a.spinner = a.spinner || {}, a.spinner[e] = ruf(c).spinner(g), a.spinner[e].spin()
            }
        }
    }]), rtlxl.directive("xlRecomList", ["Tips", "$q", "XlPlayer", "$timeout", "$rootScope", function(a, b, c, d, e) {
        var f = function(a) {
                a = a || {};
                var b = new Function("var obj = " + a + "; if(ruf(obj).typeof('object')) { return obj; }")();
                return b ? b : null
            },
            g = {
                tipList: function() {
                    return a.getTipList(!0)
                },
                videoSpecific: function(b) {
                    return a.getVideoSpecificRecom(b.episode_key)
                }
            };
        return {
            scope: {
                xlRecomList: "@",
                require: "@",
                progdata: "@",
                max: "@"
            },
            replace: !0,
            templateUrl: "views/modules/xlRecomList.html",
            controller: ["$scope", function(a) {
                var h, i = a.progdata.split("."),
                    j = i.splice(i.length - 1, 1)[0],
                    k = a,
                    l = [],
                    m = !1,
                    n = [],
                    o = [],
                    p = 0,
                    q = 0,
                    r = !1,
                    s = function(a, b) {
                        for (var c = p, d = a.material.length; d > c; c++) {
                            var e = a.material[c],
                                f = "uitzending" === e.classname;
                            if (f === b && e.uuid !== h) {
                                p = c, ++q;
                                var g = a.material.splice(c, 1)[0];
                                g.clickIn = "uitzending" === e.classname ? "rtlxl.playerpage.recom.row" + q + ".episode" : "rtlxl.playerpage.recom.row" + q + ".fragment", l.push(g);
                                break
                            }
                        }
                    },
                    t = {
                        nextEpisode: function(a) {
                            a.value === !0 && n.unshift(c.getNextEpisodeData(a.data)), o.unshift(function(a) {
                                a = a[0], a.nextEpisode ? (++q, a.nextEpisode.clickIn = "rtlxl.playerpage.recom.row1.nextepisode", e.upNext = a.nextEpisode, r = !0, h = e.upNext.uuid, l.unshift(a.nextEpisode)) : e.upNext = null
                            })
                        },
                        uitzending: function(b) {
                            m === !1 && (m = !0, n.push(g[a.xlRecomList](b.data))), o.push(function(b) {
                                b = ruf(b)["typeof"]("array") ? b[1] : b;
                                for (var c = 0, d = a.require.uitzending; d > c && q < a.max; c++) s(b, !0)
                            })
                        },
                        fragment: function(b) {
                            m === !1 && (m = !0, n.push(g[a.xlRecomList](b.data))), o.push(function(b) {
                                b = ruf(b)["typeof"]("array") ? b[1] : b, p = 0;
                                for (var c = 0, d = a.require.fragment; d > c && q < a.max; c++) s(b, !1)
                            })
                        }
                    };
                ruf(i).forEach(function(a) {
                    k = k[a]
                }), k.$watch(j, function(c) {
                    if (c) {
                        var g = Number(a.max);
                        a.data = c, a.abstractKey = c.abstract_key, a.seasonKey = c.season_key, a.require = f(a.require), a.max = isNaN(g) ? -1 : g, ruf(a.require).forIn(function(a, b) {
                            b in t && t[b]({
                                data: c,
                                value: a
                            })
                        }), b.all(n).then(function(b) {
                            ruf(b.material || b[1].material).filter(function(b) {
                                if (a.data.uuid === b.uuid) return !1;
                                if (b.suggestionScore = b.suggestionScore || 0, b.progsubtype === a.$parent.material["abstract"].progsubtype && (b.suggestionScore += 1), b.genre && a.$parent.material.episode) {
                                    var c = b.genre.split(","),
                                        d = a.$parent.material.episode.genre.split(",");
                                    ruf(c).forEach(function(a) {
                                        d.indexOf(a) > -1 && (b.suggestionScore += 1)
                                    })
                                }
                                var e = b.keywords.split(","),
                                    f = a.$parent.material.keywords.split(",");
                                return ruf(e).forEach(function(a) {
                                    f.indexOf(a) > -1 && (b.suggestionScore += 1)
                                }), !0
                            }), ruf(b.material || b[1].material).sort({
                                sortBy: function(a) {
                                    return a.suggestionScore
                                },
                                type: "descending"
                            }), ruf(o).forEach(function(a) {
                                a(b)
                            }), d(function() {
                                var c = ruf(b)["typeof"]("array") ? b[1] : b;
                                if (a.max > 0) {
                                    var d = c.material.splice(0, a.max - q);
                                    d = ruf(d).filter(function(a, b) {
                                        return a.uuid !== h ? (++q, this[b].clickIn = "uitzending" === this[b].classname ? "rtlxl.playerpage.recom.row" + q + ".episode" : "rtlxl.playerpage.recom.row" + q + ".fragment", !0) : !1
                                    }), a.items = l.concat(d)
                                } else a.max < 0 && (c.material = ruf(c.material).filter(function(a, b) {
                                    return a.uuid !== h ? (++q, this[b].clickIn = "uitzending" === this[b].classname ? "rtlxl.playerpage.recom.row" + q + ".episode" : "rtlxl.playerpage.recom.row" + q + ".fragment", !0) : !1
                                }), a.items = l.concat(c.material));
                                r === !1 && (e.upNext = a.items[0])
                            })
                        })
                    }
                })
            }],
            link: function() {}
        }
    }]), rtlxl.directive("xlAccountMenu", ["$document", "$rootScope", "$timeout", function(a, b, c) {
        return {
            restrict: "A",
            templateUrl: "views/modules/account-menu.html",
            controller: "XlAccountMenuCtrl",
            replace: !0,
            link: function(a, b, d) {
                function e() {
                    a.state = "showing", c(function() {
                        a.state = "", h(), ruf([{
                            target: i,
                            css: {
                                transform: "translateY(0px)"
                            },
                            duration: k,
                            easing: "ease-out"
                        }]).Animate().then(function() {
                            a.state = "visible"
                        })
                    }, 0)
                }

                function f() {
                    a.state = "hiding", ruf([{
                        target: i,
                        css: {
                            transform: "translateY(-" + i.offsetHeight + "px)"
                        },
                        duration: k,
                        easing: "ease-in"
                    }]).Animate().then(function() {
                        c(function() {
                            a.state = "hidden"
                        }, 0)
                    })
                }

                function g(c) {
                    var d = b[0].compareDocumentPosition(c.target);
                    20 !== d && a.toggleMenu(), ruf(window).off("click", g)
                }

                function h() {
                    ruf(window).on("click", g)
                }
                var i = b[0].getElementsByClassName("dropdownMenuContainer")[0],
                    j = !1,
                    k = d.duration ? parseInt(d.duration, 10) : 200;
                a.toggleMenu = function() {
                    var a = {
                        "true": e,
                        "false": f
                    };
                    return function() {
                        j = !j, a["" + j]()
                    }
                }()
            }
        }
    }]), rtlxl.directive("accountSettings", ["$rootScope", "$document", "$timeout", "$route", "rtlidService", "askservice", function(a, b, c, d, e, f) {
        "use strict";
        return {
            restrict: "C",
            templateUrl: "views/modules/account-settings.html",
            replace: !0,
            link: function(d) {
                function g(a) {
                    d.user = {
                        name: "",
                        email: "",
                        telekidsMode: e.isInTelekidsMode(),
                        initial: ""
                    }, angular.extend(d.user, a)
                }

                function h(a) {
                    var b = e.newsLetters();
                    b.callUrl(a ? j.SubscribeUrl : j.UnSubscribeUrl)
                }

                function i(a) {
                    e.toggleTelekidsMode(a), f.click($("#telekids_switch").get(0), "telekids", {
                        action: a ? "aan" : "uit"
                    })
                }
                var j = !1;
                d.activeMenu = {
                    avatar: !1,
                    settings: !1
                }, g(), a.$watch("currentUser", function(a) {
                    a && a.isLoggedIn ? (g({
                        name: a.loginId,
                        email: a.email,
                        initial: a.loginId.charAt(0).toUpperCase()
                    }), e.newsLetters().getStatus().then(function(a) {
                        c(function() {
                            j = a, d.user.newsletter = a.Subscribed ? !0 : !1
                        })
                    })) : g()
                }), d.$watch("user.telekidsMode", function(a, b) {
                    void 0 !== a && void 0 !== b && a !== b && i(a)
                }), d.$watch("user.newsletter", function(a, b) {
                    void 0 !== a && void 0 !== b && a !== b && h(a)
                }), d.editProfile = function() {
                    b[0].location.href = RTLXL.config.rtlid.edit_profile_url + "?returnto=" + b[0].location.href
                }, d.editEmail = function() {
                    b[0].location.href = RTLXL.config.rtlid.edit_email_url + "?returnto=" + b[0].location.href
                }, d.editPassword = function() {
                    b[0].location.href = RTLXL.config.rtlid.edit_password_url + "?returnto=" + b[0].location.href
                }, d.deleteAccount = function() {
                    b[0].location.href = RTLXL.config.rtlid.delete_profile_url + "?returnto=" + b[0].location.href
                }, d.logout = function() {
                    e.logoff()
                }
            }
        }
    }]), rtlxl.directive("switchButton", ["$document", "$timeout", function() {
        "use strict";
        return {
            restrict: "C",
            scope: {
                label: "@",
                active: "="
            },
            templateUrl: "views/modules/switch-button.html",
            replace: !0,
            link: function(a) {
                a.toggleSwitch = function() {
                    a.active = !a.active
                }
            }
        }
    }]), rtlxl.directive("xlEllipsifier", [function() {
        return {
            link: function(a, b, c) {
                function d() {
                    f = b[0].innerHTML, /\{\{/.test(f) ? (b[0].innerHTML = "", e()) : f.length > 0 && ruf(b).ellipsify({
                        text: f
                    })
                }

                function e() {
                    f = f.replace(/(\{\{)|(\}\})|\r|\t|\n|\s/g, "").split(".");
                    var c = a.$watch(function(a) {
                        for (var b = a, c = 0, d = f.length; d > c && b; c++) b = b[f[c]];
                        return b
                    }, function(a) {
                        a && (ruf(b).ellipsify({
                            text: a
                        }), c())
                    })
                }
                var f = c.xlEllipsifier;
                f ? e() : d()
            }
        }
    }]), rtlxl.directive("xlThumb", [function() {
        return {
            templateUrl: "views/modules/xl-thumb.html",
            scope: {
                xlThumb: "=",
                thumbtype: "@"
            },
            controller: ["$scope", function(a) {
                a.thumbtype = a.thumbtype || "covers", a.image = "covers" === a.thumbtype ? a.xlThumb.season_key : a.xlThumb.uuid
            }],
            link: function(a, b) {
                var c = ruf(b).find('[data-type="playVideo"]')[0];
                c && (c.href = a.xlThumb.url.indexOf("#!/") > -1 ? a.xlThumb.url : "/#!/" + a.xlThumb.url)
            }
        }
    }]), rtlxl.directive("xlThumbStrip", ["$timeout", "$compile", "$rootScope", "$q", function(a, b, c, d) {
        function e(b, c) {
            var e = d.defer(),
                f = {
                    url: "#!/" + b.url,
                    id: c.id,
                    name: b.name,
                    externalHost: c.externalHost,
                    isPaid: b.isPaid,
                    title: b.title,
                    synopsis: b.synopsis,
                    programPage: "#!/gemist/" + b.url.split("/")[0]
                };
            return a(function() {
                j.data = f, e.resolve(j)
            }), e.promise
        }

        function f(a, c) {
            a.insertAdjacentHTML(c, l);
            var d = "beforebegin" === c ? a.previousElementSibling : a.nextElementSibling;
            b(d)(j)
        }

        function g(a, b, c) {
            var e = ruf('[data-type="thumbDetails"]'),
                f = e[0].compareDocumentPosition(a.target),
                h = d.defer();
            return (c === !0 || a.target.ruf("keepAlive") !== !0 && 20 !== f && 0 !== f) && (ruf(document.documentElement).off("click", g), ruf([{
                target: e[0],
                css: {
                    height: "0px",
                    "margin-bottom": "0px",
                    "padding-bottom": "0px"
                },
                duration: 400
            }, {
                target: e.index(0).find(".thumb-details-close"),
                css: {
                    transform: "translateX(-1500px)"
                },
                duration: 400
            }, {
                target: e.index(0).find(".details-video-link, .details-content > *"),
                css: {
                    transform: "translateX(-200%)"
                },
                duration: 400
            }]).animate().then(function() {
                e[0].parentNode.removeChild(e[0]), h.resolve()
            })), a.target.ruf("keepAlive", !1), h.promise
        }

        function h(a) {
            ruf(document.documentElement).on("click", g), ruf([{
                target: a[0],
                css: {
                    height: a.find(".details-content")[0].offsetHeight + 20 + "px",
                    "margin-bottom": "40px",
                    "padding-bottom": "20px"
                }
            }, {
                target: a.index(0).find(".thumb-details-close"),
                css: {
                    transform: "translateX(0px)"
                },
                delay: 400,
                easing: "cubic-bezier(0,1.38,1,1)"
            }, {
                target: a.index(0).find(".details-video-link, .details-content > *"),
                css: {
                    transform: "translateX(0px)"
                },
                delay: 400,
                easing: "cubic-bezier(0,1.38,1,1)"
            }]).animate()
        }

        function i(b, c) {
            b.type = b.type || "new", a(function() {
                k[b.type](b.items, c)
            })
        }
        var j = c.$new(!0),
            k = {
                "new": function(a, b) {
                    b.stripData = a
                },
                append: function(a, b) {
                    b.stripData = b.stripData.concat(a)
                },
                prepend: function(a, b) {
                    b.stripData = a.concat(b.stripData)
                }
            },
            l = '<li class="thumb-details-extra" data-type="thumbDetails"><a href="{{data.url}}" class="details-video-link"><div class="details-image" xl-responsive-media="{{data.id}}" data-watchable="true" data-externalhost="{{data.externalHost}}"><span class="thumb-play"><i class="xlicon-play"></i></span></div></a><div class="details-content"><h2 class="thumb-title"><a class="thumb-title-text" ng-href="{{data.programPage}}" xl-ellipsifier>{{data.name}}</a><i class="xlicon-xl_badge" ng-show="{{data.isPaid}}"></i></h2><h4 class="thumb-subtitle"><a ng-href="{{data.url}}">{{data.title}}</a></h4><p class="details-synopsis">{{data.synopsis}}</p></div><div class="thumb-details-close ng-scope"><i class="xlicon-cross"></i></div></li>';
        return {
            templateUrl: "views/modules/xl-thumb-strip.html",
            replace: !1,
            scope: {
                xlThumbStrip: "@",
                thumbtype: "@",
                watchable: "="
            },
            controller: ["$scope", function(a) {
                a.stripData = [];
                var b = a.$parent.$watch(a.xlThumbStrip, function(c) {
                    c && (i(c, a), a.watchable || b())
                })
            }],
            link: function(a, b) {
                var c;
                ruf(b).on("click", '[data-event="thumbData"]', function(d, i) {
                    var j = ruf(b).find("[xl-thumb]"),
                        k = j[j.length - 1],
                        l = ruf(this).parent("[xl-thumb]"),
                        m = !1,
                        n = l,
                        o = l.offsetTop,
                        p = Number(l.getAttribute("data-index")),
                        q = ruf('[data-type="thumbDetails"]'),
                        r = q.length > 0 ? q[0].offsetTop : -1,
                        s = l.getAttribute("data-thumbtype"),
                        t = "covers" === s ? a.stripData[p].season_key : a.stripData[p].uuid;
                    for (c = c || l; m === !1 && n !== k;) n = n.nextElementSibling, "thumbDetails" !== n.getAttribute("data-type") && (m = !!n && o !== n.offsetTop);
                    if (-1 === r) {
                        var u = m === !0 && l !== k ? "beforebegin" : "afterend";
                        f(n, u), q = ruf('[data-type="thumbDetails"]'), e(a.stripData[p], {
                            id: t,
                            externalHost: s
                        }).then(function() {
                            setTimeout(function() {
                                h(q)
                            }, 0)
                        })
                    } else r > -1 && c.offsetTop === l.offsetTop && q[0].parentNode === l.parentNode ? (d.target.ruf("keepAlive", !0), e(a.stripData[p], {
                        id: t,
                        externalHost: s
                    })) : g(d, i).then(function() {
                        f(n, n !== k ? "beforebegin" : "afterend"), q = ruf('[data-type="thumbDetails"]'), e(a.stripData[p], {
                            id: t,
                            externalHost: s
                        }).then(function() {
                            setTimeout(function() {
                                h(q)
                            }, 0)
                        })
                    });
                    c = l
                }), ruf(b).on("click", ".thumb-details-close", function(a, b) {
                    g(a, b, !0)
                })
            }
        }
    }]), rtlxl.directive("xlSportsCarousel", ["$timeout", "$rootScope", "rtlidService", function(a, b, c) {
        "use strict";
        return {
            scope: {
                xlSportsCarousel: "="
            },
            controller: ["$scope", function(a) {
                var b = a.$watch("xlSportsCarousel", function(c) {
                    c && (a.carouselItems = function() {
                        var a = [],
                            b = 0,
                            d = 10,
                            e = ["uitzending", "livestream"];
                        return ruf(c.items.slice(b)).forEach(function(c) {
                            b >= d || -1 === e.indexOf(c.classname) && (a[b] = c, ++b)
                        }), a
                    }(), a.currentItem = 0, b())
                })
            }],
            link: function(d, e) {
                function f() {
                    a(function() {
                        d.playerReady = !0
                    }, 0)
                }

                function g() {
                    var a = ruf(e).find(".video-container"),
                        b = (a[0].ruf("player.params"), ruf(this));
                    a.removeClass("zap"), a[0].ruf("player").play(), ruf(e).addClass("active"), setTimeout(function() {
                        b.swapClass("playericon-play", "playericon-stop")
                    }, 0)
                }

                function h() {
                    var a = d.carouselItems[d.currentItem],
                        b = ruf(e).find(".video-container"),
                        c = b[0].ruf("player.params"),
                        f = ruf(this);
                    c.src = a.uuid, c.xlResponsiveMedia = a.uuid, c.videoposter = a.season_key, c.autoplay = !1, c.player.autoplay = !1, ruf(e).removeClass("active"), b.removeClass("zap"), b[0].innerHTML = "", b[0].setAttribute("data-videoposter", a.season_key), b[0].setAttribute("xl-responsive-media", a.uuid), b.responsiveMedia("video").add(c), setTimeout(function() {
                        f.swapClass("playericon-stop", "playericon-play")
                    }, 0)
                }

                function i() {
                    d.currentItem < d.carouselItems.length - 1 ? ++d.currentItem : d.currentItem = 0;
                    var a = d.carouselItems[d.currentItem],
                        b = ruf(e).find(".video-container"),
                        c = b[0].ruf("player.params");
                    c.src = a.uuid, c.xlResponsiveMedia = a.uuid, c.videoposter = a.season_key, b.addClass("zap"), b[0].innerHTML = "", setTimeout(function() {
                        b[0].setAttribute("data-videoposter", a.season_key), b[0].setAttribute("xl-responsive-media", a.uuid), b.responsiveMedia("video").add(c), b.removeClass("zap")
                    }, 300)
                }

                function j() {
                    d.currentItem > 0 ? --d.currentItem : d.currentItem = d.carouselItems.length - 1;
                    var a = d.carouselItems[d.currentItem],
                        b = ruf(e).find(".video-container"),
                        c = b[0].ruf("player.params");
                    c.src = a.uuid, c.xlResponsiveMedia = a.uuid, c.videoposter = a.season_key, b.addClass("zap"), b[0].innerHTML = "", setTimeout(function() {
                        b[0].setAttribute("data-videoposter", a.season_key), b[0].setAttribute("xl-responsive-media", a.uuid), b.responsiveMedia("video").add(c), b.removeClass("zap")
                    }, 300)
                }

                function k() {
                    var a = this;
                    this.className.split(" ").indexOf("active") > -1 && ruf([{
                        target: ruf(a).find(".player-controls")[0],
                        css: {
                            opacity: 1
                        }
                    }, {
                        target: ruf(a).find(".player-data")[0],
                        css: {
                            opacity: 1
                        }
                    }]).animate()
                }

                function l() {
                    var a = this;
                    this.className.split(" ").indexOf("active") > -1 && ruf([{
                        target: ruf(a).find(".player-controls")[0],
                        css: {
                            opacity: 0
                        }
                    }, {
                        target: ruf(a).find(".player-data")[0],
                        css: {
                            opacity: 0
                        }
                    }]).animate()
                }
                e = e[0], ruf(e).on("click", ".playericon-play", g), ruf(e).on("click", ".playericon-stop", h), ruf(e).on("click", ".prev", j), ruf(e).on("click", ".next", i), ruf(e).on("mouseenter", k), ruf(e).on("mouseleave", l), ruf(e).on("playerEnd", ".video-container", i), ruf(e).on("playerReady", ".video-container", f), ruf(e).on("adStart", ".video-container", function() {
                    a(function() {
                        b.playerEvent = "ad_start"
                    }, 0)
                });
                var m = ruf().once(function(a) {
                    RTL.rtlAccount.loginStatusChanged.then(function(b) {
                        b.isLoggedIn === !0 && c.addToHistory(a.target.ruf("player.params.src"))
                    })
                });
                ruf(e).on("contentStart", ".video-container", m)
            }
        }
    }]), rtlxl.directive("xlNavigator", ["$timeout", "Sports", function(a, b) {
        return {
            link: function(a, c, d) {
                setTimeout(function() {
                    function e(b, d) {
                        if ("none" !== ruf(c).computedStyle("display")) {
                            var e = b.offsetLeft,
                                f = b.offsetWidth;
                            ruf({
                                target: c[0],
                                duration: 300,
                                css: {
                                    transform: "translateX(" + e + "px)",
                                    width: f + "px"
                                },
                                easing: "ease-out"
                            }).animate().then(function() {
                                a.runSubnav(d)
                            })
                        } else a.runSubnav(d)
                    }
                    var f = d.xlNavigator,
                        g = (d.base, ruf(c[0].parentNode)),
                        h = (g.find(f), window.location.hash, b.currentSportsAction.key);
                    g.on("mouseup", f, function() {
                        e(this, this.getAttribute("data-type").toLowerCase())
                    });
                    var i = setInterval(function() {
                        var a = g.find('[data-type="' + h + '"]');
                        a.length > 0 && (clearInterval(i), e(g.find('[data-type="' + h + '"]')[0], h))
                    }, 20)
                }, 100)
            }
        }
    }]), rtlxl.directive("xlMainNav", ["$timeout", "$rootScope", "$q", "Sports", function(a, b, c, d) {
        return {
            scope: {
                xlMainNav: "@"
            },
            controller: ["$scope", function(a) {
                a.isMain = "true" === a.xlMainNav ? !0 : !1, a.items = [{
                    url: "#!/gemist",
                    title: "Gemist",
                    isHidden: !a.isMain
                }, {
                    url: "#!/vooruitkijken",
                    title: "Vooruitkijken",
                    isHidden: !a.isMain
                }, {
                    url: "#!/sport",
                    title: d.currentSportsAction.navTitle,
                    isHidden: !a.isMain
                }], a.nav = {
                    isHidden: !1
                }
            }],
            templateUrl: "views/modules/xlMainNav.html",
            link: function(d, e) {
                function f(a) {
                    var c = [],
                        d = [],
                        e = a.length,
                        f = !1;
                    return b.hasSubNav = !1, b.allSubnavHidden = null != b.allSubnavHidden ? b.allSubnavHidden : !1, ruf(a).forEach(function(a) {
                        var h = !1,
                            i = b.allSubnavHidden ? -30 : 5;
                        g[0].offsetLeft - i <= a.offsetLeft + a.clientWidth && (h = !0, b.hasSubNav = !0, --e, f = !0), c.push(h), d.push(!h)
                    }), b.allSubnavHidden = f, f ? ruf('[data-type="xlNavHighlight"]').index(0).addClass("hidden") : (ruf('[data-type="xlNavHighlight"]').index(0).removeClass("hidden"), setTimeout(function() {
                        k.indexOf(window.location.hash) > -1 && b.moveHighlighter(b.activeNavItem, !0)
                    }, 20)), {
                        main: c,
                        subNav: d
                    }
                }
                var g, h = c.defer(),
                    i = setInterval(function() {
                        var a = ruf(e).find('[data-type="nav"]');
                        g = ruf("[xl-searchbar]"), a.length > 0, g.length > 0 && (clearInterval(i), h.resolve(a))
                    }, 20),
                    j = function() {
                        h.promise.then(function(c) {
                            var e = f(c);
                            b.activeNavItem && k.indexOf(window.location.hash) > -1 && b.moveHighlighter(b.activeNavItem, !0), a(function() {
                                var a = ruf().once(function(a) {
                                    d.nav.isHidden = a, b.$emit("navChange", !a)
                                });
                                ruf(e.main).forEach(function(c) {
                                    return c === !0 ? (d.nav.isHidden = c, void b.$emit("navChange", !c)) : void a(c)
                                })
                            })
                        })
                    },
                    k = ruf(d.items).map(function(a) {
                        return a.url
                    });
                k.push("#!/"), d.isMain ? (ruf(window).on("scaleEnd", j), b.$on("$routeChangeSuccess", function() {
                    setTimeout(j, 1e3)
                }), RTL.rtlAccount.loginStatusChanged.then(function() {
                    setTimeout(j, 0)
                })) : b.$on("navChange", function(b, c) {
                    a(function() {
                        ruf(c).forEach(function(a) {
                            d.nav.isHidden = a
                        })
                    })
                });
                var l = !!RTL.ruf.browser.legacyIeVersion && RTL.ruf.browser.legacyIeVersion <= 9,
                    m = function() {
                        var a = {
                                down: l ? "translateX(0px) rotate(0deg)" : "rotateX(0deg)",
                                up: l ? "translateX(-16px) rotate(180deg)" : "rotateX(180deg)"
                            },
                            b = "down";
                        return function() {
                            return b = "down" === b ? "up" : "down", a[b]
                        }
                    }();
                ruf(e).on("click", ".subnav-button", function() {
                    ruf({
                        target: ruf(e).find(".arrow"),
                        easing: "linear",
                        css: {
                            transform: m()
                        },
                        duration: l ? 250 : 500,
                        force: !0
                    }).animate()
                })
            }
        }
    }]), rtlxl.directive("xlSwitch", [function() {
        return {
            template: '<div class="on-off-switch"><span data-event="switch" class="switchbutton"></span></div>',
            replace: !0,
            link: function(a, b, c) {
                function d() {
                    k === !0 ? (b.addClass("enabled"), ruf(b).find('[data-event="switch"]').rufStyle("transform", i)) : ruf(b).find('[data-event="switch"]').rufStyle("transform", h)
                }

                function e(a) {
                    return "true" == a ? !0 : !1
                }

                function f(a) {
                    return null != localStorage[j] ? e(localStorage[j]) : a
                }

                function g() {
                    localStorage[j] = a[c.sid] = k
                }
                var h = "translateX(3px)",
                    i = "translateX(21px)",
                    j = "switch-" + c.sid,
                    k = a[c.sid] = f(e(c.xlSwitch));
                ruf(b).on("click", function() {
                    var a = k ? h : i;
                    k = !k, g(), ruf({
                        target: ruf(b).find('[data-event="switch"]'),
                        duration: 150,
                        easing: "ease-out",
                        css: {
                            transform: a
                        }
                    }).animate().then(function() {
                        b.toggleClass("enabled")
                    })
                }), d()
            }
        }
    }]), rtlxl.directive("xlScrollbar", ["$rootScope", function() {
        function a(a) {
            var b = document.createRange();
            return b.selectNodeContents(a.childNodes[0]), b.getBoundingClientRect().height
        }

        function b(a, b) {
            function c(a) {
                var c = a.pageY,
                    d = f + (c - e);
                if (this.scrollTop = d, d >= 0 && Math.floor(d) === this.scrollTop) {
                    a.preventDefault();
                    var h = d / (b.scrollHeight - b.containerHeight);
                    g.rufStyle("transform", "translateY(" + (d + Math.ceil(h * b.containerHeight) - b.scrollbarHeight * h) + "px)")
                }
            }

            function d() {
                ruf(h).off("mousemove", c), ruf(window).off("mouseup", d), document.onselectstart = function() {
                    return !0
                }
            }
            var e = a.pageY,
                f = this.scrollTop,
                g = b.target.find(".scrollbar-bar"),
                h = this,
                i = ruf(this).find(".scrollbar-container")[0].compareDocumentPosition(a.target),
                j = 20 === i || 0 === i;
            j && (document.onselectstart = function() {
                return !1
            }, ruf(this).on("mousemove", c), ruf(window).on("mouseup", d))
        }

        function c(a, b) {
            var c = this.scrollTop + a.deltaY,
                d = b.target.find(".scrollbar-bar");
            if (this.scrollTop = c, c >= 0 && Math.floor(c) === this.scrollTop) {
                a.preventDefault();
                var e = c / (b.scrollHeight - b.containerHeight);
                d.rufStyle("transform", "translateY(" + (c + Math.ceil(e * b.containerHeight) - b.scrollbarHeight * e) + "px)")
            }
        }

        function d() {}

        function e(a, e) {
            var f = {
                touch: function() {
                    e.target.on("touchstart", e, d)
                },
                mouse: function() {
                    e.target.on("mousedown", e, b), this.wheel()
                },
                wheel: function() {
                    var a = "undefined" !== ruf(e.element.onwheel)["typeof"]() ? "wheel" : "mousewheel";
                    e.target.on(a, e, c)
                }
            };
            f[a] && f[a]()
        }

        function f(b) {
            var c = a(b.target),
                d = b.target.getBoundingClientRect().height;
            if (b.target.scrollTop = 0, c > d) {
                var f = ruf(b.target);
                f.addClass("custom-scroll"), b.target.scrollTop = 0;
                var i = c - d,
                    j = b.target.scrollHeight,
                    k = d * (d / c),
                    l = Math.max(10, Math.ceil(k)),
                    m = ruf(g).format([j, l]);
                b.target.insertAdjacentHTML("beforeend", m), b.target.style.cssText += "height:" + d + "; position:relative;";
                var n = {
                    target: f,
                    element: b.target,
                    maxScrollTop: i,
                    sH: f[0].scrollHeight,
                    scrollbarHeight: l,
                    scrollPercentage: k,
                    textHeight: c,
                    containerHeight: d,
                    scrollHeight: j,
                    maxPos: j - l
                };
                e(h, n)
            }
        }
        var g = '<div class="scrollbar-container" style="height:{0}px; border-left:solid 10px #ffffff;"><span class="scrollbar-bar" style="height:{1}px;"></span></div>',
            h = "ontouchstart" in window ? "touch" : "mouse";
        return {
            restrict: "A",
            link: function(a, b, c) {
                var d = c.xlScrollbar,
                    e = d.split("."),
                    g = a,
                    h = 0;
                "" !== d && (ruf(e).forEach(function(a) {
                    ("$parent" === a || "$root" === a) && (g = g[a], ++h), "$root" === a
                }), e = e.slice(h), g.$watch(e.splice(0, 1)[0], function(a) {
                    a && setTimeout(function() {
                        f({
                            target: b[0]
                        })
                    }, 16)
                }), ruf(window).on("scaleEnd", ".scrollbar-container", function() {
                    b[0].removeChild(this), f({
                        target: b[0]
                    })
                }))
            }
        }
    }]), rtlxl.directive("xlSearchbar", ["xlService", "rtlidService", "askservice", "analytics", "$q", "$timeout", "$rootScope", "$sce", "$document", "$location", function(a, b, c, d, e, f, g, h, i, j) {
        "use strict";
        return {
            templateUrl: "views/modules/search-bar.html",
            replace: !0,
            link: function(a, b) {
                function d(a) {
                    if ("dropdown" !== a.target.getAttribute("data-type")) {
                        var c = "320px",
                            d = ruf(b);
                        d.addClass("active"), d.find("input")[0].focus(), k(ruf(this).find('[role="search"]'), c), g()
                    }
                }

                function g() {
                    ruf(window).on("click", h)
                }

                function h(a) {
                    var c = b[0].compareDocumentPosition(a.target),
                        e = ruf(document.documentElement).computedStyle("width", "number") > 430 ? "125px" : "40px",
                        f = ruf(b).find('[role="search"]');
                    if (20 !== c && 0 !== c) ruf(b).removeClass("active"), k(f, e, !0), ruf(window).off("click", h);
                    else if ("searchbar-cross xlicon-cross" === a.target.className) {
                        var g = ruf(b);
                        g.removeClass("active"), k(f, e, !0), g.on("input", d), ruf(window).off("click", h)
                    }
                }

                function k(a, b, c) {
                    ruf({
                        target: a,
                        duration: 300,
                        easing: "ease-out",
                        css: {
                            width: b
                        }
                    }).animate().then(function() {
                        ruf(window).trigger("scaleEnd"), c && (a[0].style.cssText = "")
                    })
                }

                function l() {
                    a.results = [];
                    var b = xlapi.az(e.defer());
                    b.then(function(b) {
                        angular.forEach(b.abstracts, function(b) {
                            b.key = b.abstract_key, b.detailPath = VFD.util.abstractPath(b), a.results.push(b)
                        })
                    })
                }

                function m(a) {
                    b.find("input")[0] !== a.target && n()
                }

                function n() {
                    v || (ruf([{
                        target: w,
                        css: {
                            transform: "translateY(-450px)"
                        },
                        duration: 200,
                        easing: "ease-in"
                    }]).Animate(), f(function() {
                        v = !0, a.$apply(function() {
                            a.query = ""
                        }), i.unbind("click", m), w.hide()
                    }, 200))
                }

                function o() {
                    w.show(), v && (ruf([{
                        target: w,
                        css: {
                            transform: "translateY(0px)"
                        },
                        duration: 200,
                        easing: "ease-out"
                    }]).Animate(), f(function() {
                        v = !1, i.bind("click", m)
                    }, 200))
                }

                function p() {
                    if (0 !== a.results.length) {
                        var c = b.find("li.search-result.active")[0],
                            d = b.find("ul.search-results-items")[0];
                        c.offsetTop < d.scrollTop ? (s = !1, b.find("ul.search-results-items")[0].scrollTop = c.offsetTop) : c.offsetTop + c.offsetHeight > d.scrollTop + d.offsetHeight && (s = !1, b.find("ul.search-results-items")[0].scrollTop = c.offsetTop + c.offsetHeight - d.offsetHeight)
                    }
                }

                function q() {
                    var a = b.find("li.search-result.active"),
                        c = b.find("li.search-result");
                    a.removeClass("active"), 0 === a.length || 0 === a.prev().length ? c.eq(0).addClass("active") : a.prev().addClass("active"), p()
                }

                function r() {
                    var a = b.find("li.search-result.active"),
                        c = b.find("li.search-result");
                    a.removeClass("active"), 0 === a.length || 0 === a.next().length ? c.eq(c.length - 1).addClass("active") : a.next().addClass("active"), p()
                }
                var s, t, u, v = !0,
                    w = b.find(".search-results"),
                    x = function() {
                        var c = 10,
                            d = ruf(b[0]).find('[data-type="searchResultItems"]'),
                            e = d[0].children.length;
                        a.hasMaxItems = e > c
                    };
                a.results = [], a.numResults = 0, a.query = "", a.hasMaxItems = !1, ruf(b).on("click", d), ruf(b).on("click", ".searchbar-cross", h), a.searchFilter = function(b) {
                    if (a.query) {
                        var c = a.query.toLowerCase(),
                            d = b.name.toLowerCase();
                        if ("is_copy" in b && b.is_copy === !0) return !1;
                        var e = d.indexOf(c);
                        if (e >= 0) {
                            b.rank = 0, 0 === e && (b.rank = b.rank + 1);
                            var f = c.replace(/(?=[\\^$*+?.()|{}[\]])/g, "\\"),
                                g = new RegExp("(^|\\s)(" + f + ")([\\s\\,]|$)", "gi");
                            return c.length > 1 && b.name.match(g) && (b.rank = b.rank + 1), !0
                        }
                        var h = d.replace(/[^a-zA-Z0-9]/g, ""),
                            i = h.indexOf(c);
                        if (i >= 0) return b.rank = 0, 0 === i && (b.rank = 1), !0;
                        if (b.name_aliases)
                            for (var j = 0; j < b.name_aliases.length; j++) {
                                var k = b.name_aliases[j].toLowerCase(),
                                    l = 0 === k.indexOf(c) && c.length > 2;
                                if (l) return b.aliasMatch = !0, !0
                            }
                        return !1
                    }
                }, a.onFocus = function() {
                    l()
                }, a.resultMouseMove = function(a) {
                    (t !== a.pageX || u !== a.pageY) && (s = !0, t = a.pageX, u = a.pageY)
                }, a.resultMouseOver = function(a) {
                    s && (b.find("li.search-result.active").removeClass("active"), a.currentTarget.className += " active"), s = !1
                }, a.inputKeyDown = function(d) {
                    if (a.query.length >= 1) {
                        if (f(function() {
                                x(), a.numResults = w.find("li.search-result").length
                            }, 200), 38 === d.keyCode) return void q();
                        if (40 === d.keyCode) return void r();
                        if (13 === d.keyCode && w.find("li.search-result").length > 0) {
                            var e = b.find("li.search-result.active");
                            return n(), void(e.length > 0 && j.path(e.eq(0).find("a").attr("href").substr(2)))
                        }
                        return void o()
                    }
                    c.click(b.find("input")[0], "zoek", {
                        action: a.query
                    })
                }, a.inputKeyUp = function() {
                    "" === a.query && n()
                }, a.onAzClick = function() {
                    c.click(b.find(".az-link")[0], "zoek-az", {})
                }
            }
        }
    }]), rtlxl.directive("xlLoginWall", ["$timeout", "$compile", "$rootScope", "AbTest", function(a, b, c, d) {
        return {
            restrict: "A",
            replace: !0,
            templateUrl: "views/modules/xl-login-wall.html",
            scope: {
                material: "="
            },
            link: function(a, b) {
                d.sendGaEvent({
                    eventCategory: "loginwall-overlay",
                    eventAction: "display",
                    eventLabel: "Login Wall"
                }), a.$watch("material", function(c) {
                    c && (a.coverUrl = VFD.util.coverUrl(a.material, "l", "carrousel"), a.loginUrl = RTLXL.config.rtlid.logon_url + "" + encodeURIComponent(window.location), b.css("background-image", "url(" + a.coverUrl + ")"), ruf("element").find("a").on("click", function() {
                        d.sendGaEvent({
                            eventCategory: "loginwall-button",
                            eventAction: "click",
                            eventLabel: "Login Wall"
                        })
                    }))
                })
            }
        }
    }]), rtlxl.directive("xlInfinity", ["$timeout", "$rootScope", function(a, b) {
        function c() {
            f === !1 && (f = !0, ruf(window).on("scroll", e))
        }

        function d(a, b, c) {
            var d = 420;
            return b + c >= a - d
        }

        function e() {
            g(function() {
                var a = document.documentElement && document.documentElement.scrollHeight ? document.documentElement.scrollHeight : document.body.scrollHeight,
                    c = window.innerHeight,
                    e = document.documentElement && document.documentElement.scrollTop ? document.documentElement.scrollTop : document.body.scrollTop;
                d(a, c, e) && b.$emit("infinteScroll")
            })
        }
        var f = !1,
            g = ruf().debounce(100);
        return b.$on("$routeChangeSuccess", function() {
            setTimeout(function() {
                0 === ruf("[xl-infinity]").length && (f = !1, ruf(window).off("scroll", e))
            }, 100)
        }), {
            link: function() {
                c()
            }
        }
    }]), rtlxl.directive("xlProposition", ["rtlidService", "Svod", "storage", "$timeout", "askservice", function(a, b, c, d, e) {
        "use strict";
        return {
            restrict: "A",
            templateUrl: "views/modules/xl-proposition.html",
            replace: !0,
            link: function(f, g, h) {
                f.variant = h.variant, f.state = "", f.appCtrl.showProposition[f.variant] && d(function() {
                    e.customClick(g, "rtlxlnl." + f.variant + ".propositie", {})
                }, 1e3), b.getPaymentUrl().then(function(b) {
                    f.paymentUrl = a.isLoggedIn() ? b : RTLXL.config.rtlid.logon_url + encodeURIComponent(b)
                }, function() {
                    f.paymentUrl = "/"
                }), f.onClose = function() {
                    ruf([{
                        target: g,
                        css: {
                            transform: "translateY(" + ("home" === f.variant ? -472 : -192) + "px)"
                        },
                        duration: 250,
                        easing: "ease-in"
                    }]).Animate().then(function() {
                        ruf([{
                            target: g,
                            css: {
                                height: ("home" === f.variant ? 270 : 0) + "px"
                            },
                            duration: 250,
                            easing: "ease-in"
                        }]).Animate().then(function() {
                            d(function() {
                                c.set("hide-proposition-" + f.variant, !0), f.appCtrl.showProposition[f.variant] = !1, f.appCtrl.showRetention[f.variant] && (c.set("hide-retention-" + f.variant, !0), f.appCtrl.showRetention[f.variant] = !1)
                            })
                        })
                    })
                }
            }
        }
    }]), rtlxl.directive("xlHelpButton", ["$timeout", "$animate", "$rootScope", function(a) {
        return {
            restrict: "A",
            replace: !0,
            templateUrl: "views/modules/xl-help-button.html",
            link: function(b, c) {
                function d(a) {
                    a.stopPropagation()
                }

                function e() {
                    window.usabilla_live("click"), b.pushState(null)
                }
                var f = {
                    question: {
                        value: 1
                    },
                    about: {
                        value: 2
                    }
                };
                angular.extend(b, {
                    fade: !1,
                    state: null,
                    history: []
                }), c.bind("click", d), angular.element(document.body).bind("click", function() {
                    a(function() {
                        b.pushState(f.inactive)
                    })
                }), b.$on("$destroy", function() {
                    angular.element(document.body).unbind("click", d)
                }), b.pushState = function(a) {
                    var c = function() {
                        null != a ? (b.fade = !1, b.state = a, b.history.push(a)) : (b.fade = b.state ? b.state.value : 0, b.state = null, b.history = [])
                    };
                    c(), b.$emit("help.state-change")
                }, b.popState = function() {
                    0 != b.history.length && (b.history.pop(), b.state = _.last(b.history), b.$emit("help.state-change"))
                }, b.onHelpClick = function() {
                    b.pushState(b.state ? null : f.question)
                }, b.onLinkClick = function(a) {
                    window.open(a, "_blank")
                }, b.onAboutClick = function() {
                    b.pushState(f.about)
                }, b.onChoiceClick = function(a) {
                    switch (a) {
                        case "f":
                            e()
                    }
                }
            }
        }
    }]), rtlxl.directive("footer", [function() {
        "use strict";
        return {
            restrict: "C",
            replace: !0,
            templateUrl: "views/modules/footer.html"
        }
    }]), angular.module("angularLocalStorage", []).factory("storage", ["$parse", "$window", "$log", function(a, b, c) {
        var d, e, f, g;
        try {
            d = "undefined" == typeof b.localStorage ? void 0 : b.localStorage, e = !("undefined" == typeof d || "undefined" == typeof b.JSON), f = "undefined" == typeof b.sessionStorage ? void 0 : b.sessionStorage, g = !("undefined" == typeof f || "undefined" == typeof b.JSON)
        } catch (h) {
            d = void 0, e = !1, f = void 0, g = !1
        }
        var i = {
                parseValue: function(a) {
                    var c;
                    try {
                        c = b.JSON.parse(a), "undefined" == typeof c && (c = a), "true" === c && (c = !0), "false" === c && (c = !1), b.parseFloat(c) !== c || angular.isObject(c) || (c = b.parseFloat(c))
                    } catch (d) {
                        c = a
                    }
                    return c
                }
            },
            j = {
                set: function(a, h, j) {
                    if (!e || !g) try {
                        return h
                    } catch (k) {
                        c.log("Local Storage not supported, make sure you have angular-cookies enabled.")
                    }
                    var l = b.JSON.stringify(h),
                        m = j ? f : d;
                    return m.setItem(a, l), i.parseValue(l)
                },
                get: function(a, b) {
                    if (!e || !g) return null;
                    var c = b ? f : d,
                        h = c.getItem(a);
                    return i.parseValue(h)
                },
                pop: function(a, b) {
                    var c = this.get(a, b);
                    return this.remove(a, b), c
                },
                remove: function(a, b) {
                    if (!e || !g) return !1;
                    var c = b ? f : d;
                    return c.removeItem(a), !0
                },
                bind: function(b, c, d) {
                    var e = {
                        defaultValue: "",
                        storeName: ""
                    };
                    d = angular.isString(d) ? angular.extend({}, e, {
                        defaultValue: d
                    }) : angular.isUndefined(d) ? e : angular.extend(e, d);
                    var f = d.storeName || c;
                    return j.get(f) || j.set(f, d.defaultValue), a(c).assign(b, j.get(f)), b.$watch(c, function(a) {
                        angular.isDefined(a) && j.set(f, a)
                    }, !0), j.get(f)
                },
                unbind: function(b, c, d) {
                    d = d || c, a(c).assign(b, null), b.$watch(c, function() {}), j.remove(d)
                },
                clearAll: function() {
                    d.clear()
                }
            };
        return j
    }]),
    function(a) {
        a.module("analytics", ["ng"]).service("analytics", ["$rootScope", "$window", "$location", "$routeParams", "$log", "$timeout", "$q", function(b, c, d, e, f, g, h) {
            var i = h.defer(),
                j = {},
                k = {},
                l = function() {
                    return "ga" in window && void 0 !== window.ga && "function" == typeof window.ga
                },
                m = function(a) {
                    return "undefined" == typeof a || null === a
                },
                n = function(a, b) {
                    void 0 === b ? delete j[b] : j[a] = b
                },
                o = function(c, d, e) {
                    if (m(c) || m(d)) return void f.warn("Google Analytics: missing event required parameters");
                    if (l()) {
                        b.$broadcast("ga.before_send", "event");
                        var g = a.extend({}, j);
                        window.ga("send", "event", c, d, e, g)
                    }
                },
                p = function(a, b) {
                    l() ? c.ga("send", a, b) : f.warn("Google Analytics Javascript object (GA) not available")
                },
                q = function(a, b) {
                    l() ? c.ga("set", a, b) : f.warn("Google Analytics Javascript object (GA) not available")
                },
                r = function() {
                    b.$broadcast("ga.before_send", "pageview");
                    var c = d.path();
                    if (!jQuery.isEmptyObject(k)) {
                        var e = [];
                        for (var f in k) e.push(f + "=" + encodeURIComponent(k[f]));
                        c += "?" + e.join("&"), k = {}
                    }
                    var g = {
                        page: c
                    };
                    a.extend(g, j), p("pageview", g)
                },
                s = function() {
                    b.$on("$viewContentLoaded", r)
                };
            return c.ga && c.ga(function(a) {
                i.resolve(a)
            }), g(function() {
                i.reject("timeout")
            }, 1500), g(function() {
                window.twttr && twttr.ready(function() {})
            }, 1e3), {
                send: p,
                set: q,
                setField: n,
                sendEvent: o,
                queueParam: function(a, b) {
                    k[a] = b
                },
                getClientId: function() {
                    return i.promise.then(function(a) {
                        return a.get("clientId")
                    })
                },
                autoTrack: s,
                chooseCustomVariation: function(a, b) {
                    var d = document.createElement("iframe");
                    d.setAttribute("sandbox", "allow-scripts allow-same-origin"), d.style.display = "none", document.body.appendChild(d);
                    var e, f = d.contentWindow.window;
                    c.ga(function(a) {
                        e = a.get("cookieDomain")
                    }), f.loaded = function() {
                        this.cxApi.setDomainName(e), b(this.cxApi.chooseVariation())
                    };
                    var g = f.document;
                    g.open(), g.write('<script src="//www.google-analytics.com/cx/api.js?experiment=' + a + '"></script><script>window.loaded();</script>'), g.close()
                }
            }
        }])
    }(window.angular), angular.module("mailchimp", ["ng"]).controller("MailchimpSubscriptionCtrl", ["$http", "$log", "$scope", "$rootScope", function(a, b, c, d) {
        c.inProgress = !1, c.addSubscription = function(b) {
            function e(a) {
                return _.map(a, function(a, b) {
                    return b + "=" + encodeURIComponent(a)
                }).join("&")
            }
            if (b.EMAIL) {
                var f, g = {
                    c: "JSON_CALLBACK"
                };
                c.inProgress = !0, f = "//" + b.username + "." + b.dc + ".list-manage.com/subscribe/post-json", _(b).forEach(function(a, b) {
                    g[b] = a
                }), _.isEmpty(g) || (f += "?" + e(g)), a({
                    method: "JSONP",
                    url: f,
                    data: {}
                }).then(function(a) {
                    var c = a.data.result;
                    b.response = {
                        message: a.data.msg,
                        result: c
                    }
                }, function(a) {
                    b.response = {
                        message: a.data.msg,
                        result: a.data.result
                    }
                })["finally"](function() {
                    c.inProgress = !1, d.$broadcast("mailchimp.response", b.response)
                })
            }
        }
    }]), rtlxl.factory("Environment", ["$rootScope", "$q", "$browser", "$location", "rtlidService", function(a, b, c, d) {
        "use strict";
        var e, f = d.host(),
            g = function(a) {
                return 0 === f.indexOf(a)
            },
            h = isNaN(Number(f.replace(/\./g, ""))) === !1,
            i = g("localhost"),
            j = g("dev."),
            k = g("test."),
            l = g("acc."),
            m = "prod",
            n = "";
        switch (e = {
            current: m,
            urlPrefix: n
        }, !0) {
            case h:
                m = "local", n = "dev.";
                break;
            case i:
                m = "local", n = "dev.";
                break;
            case j:
                m = "dev", n = "dev.";
                break;
            case k:
                m = "test", n = "test.";
                break;
            case l:
                m = "acceptance", n = "acc.";
                break;
            default:
                m = "production", n = ""
        }
        return e = {
            current: m,
            urlPrefix: n
        }
    }]), rtlxl.factory("XlPlayer", ["$rootScope", "$q", "Tips", "$browser", "rtlidService", function(a, b, c) {
        function d(a, b) {
            var c = "/Tool/FrontEndDetails",
                d = ruf().defer();
            return ruf("jsonp").http(RTLXL.config.drmServer.host + c, {
                queryString: {
                    contentId: a.uuid,
                    abstractKey: a.abstract_key
                },
                callback: b
            }).then(function(a) {
                d.resolve(a)
            }), d.promise
        }

        function e(a) {
            if (g.nextEpisodes.deferred = b.defer(), g.nextEpisodes.state !== a.abstract_key + "-" + a.season_key) g.nextEpisodes.state = a.abstract_key + "-" + a.season_key, ruf("get").http("http://www.rtl.nl/system/s4m/vfd/version=2/ak=" + a.abstract_key + "/sk=" + a.season_key + "/cf=allow%20uitzending/pg=all").then(function(b) {
                var c = [];
                ruf(b.material).sort({
                    type: "ascending",
                    sortBy: function(a) {
                        return a.episodeKey
                    },
                    filter: function(a) {
                        return "uitzending" === a.classname
                    },
                    action: function(d) {
                        d.title = d.title ? d.title : ruf(b.episodes).reverseForEach(function(a) {
                            return d.episode_key === a.key ? a.name : void 0
                        }), d.name = a["abstract"].name, d.episodeKey = Number(d.episode_key), d = RTL.xl.sanitizeVFDMaterial(d, b.abstracts[0], b.seasons[0], b.episodes), c.push(d.episodeKey)
                    }
                }), c.sort();
                var d = Number(a.episode_key),
                    e = c.indexOf(d);
                g.nextEpisodes.cache = {
                    currentUuid: a.uuid,
                    items: b.material,
                    seasonKey: a.season_key,
                    episodes: c,
                    nextEpisode: null
                }, e > -1 && c[e + 1] && (g.nextEpisodes.cache.nextEpisode = b.material[e + 1]), g.nextEpisodes.deferred.resolve(g.nextEpisodes.cache)
            });
            else {
                var c = Number(a.episode_key),
                    d = g.nextEpisodes.cache.episodes.indexOf(c),
                    e = g.nextEpisodes.cache.episodes[d + 1];
                g.nextEpisodes.cache.nextEpisode = d > -1 && e ? g.nextEpisodes.cache.items[d + 1] : null, g.nextEpisodes.deferred.resolve(g.nextEpisodes.cache)
            }
            return g.nextEpisodes.deferred.promise
        }

        function f() {
            return c.getTipList(!0)
        }
        var g = {
                nextEpisodes: {
                    state: "idle",
                    cache: null
                }
            },
            h = {
                getNextEpisodeData: e,
                getPlayerGrid: f,
                getDrmData: d,
                getGridTemplate: function() {}
            };
        return h
    }]), rtlxl.factory("Svod", ["$q", "$rootScope", "$http", function(a, b, c) {
        function d() {
            var a = b.user.subscriptionEndDate.split(" "),
                c = a[0].split("-"),
                d = a[1].split(":"),
                e = new Date,
                f = new Date(c[0], Number(c[1]) - 1, c[2], d[0], d[1], d[2], 0),
                g = Math.floor((f.getTime() - e.getTime()) / 864e5);
            return g = 0 === g ? 1 : 0 > g ? 0 : g
        }

        function e(a) {
            a = ruf(a || {}).extend(k)[0];
            var c = "/Tool/FrontEndDetails";
            ruf("jsonp").http(RTLXL.config.drmServer.host + c, {
                queryString: {
                    abstractKey: a.abstractKey
                },
                callback: "RTL.xl.ua"
            }).then(function(a) {
                RTL.rtlAccount.hasSubscription = a.HasSubscription, RTL.rtlAccount.hasHadSubscription = a.SubscriptionEndDate.length > 0, RTL.rtlAccount.daysLeft = function() {
                    return RTL.rtlAccount.hasHadSubscription === !1 ? "" : void 0
                }(), b.user = {
                    hasSubscription: a.HasSubscription,
                    isLoggedIn: a.IsLoggedIn,
                    subscriptionEndDate: a.SubscriptionEndDate
                }, b.$emit("user")
            })
        }

        function f(a) {
            var b = "{shopUrl}/Rtl.Processing.Payments.Web.BackEndProxy/PaymentFunctions/GetSignature?tid={videoUuid}&kid={videoUuid}&cid={videoUuid}&ru={returnUrl}";
            b = ruf(b).format(a), b += "&callback=JSON_CALLBACK", c.jsonp(b, {
                callback: "RTL.xl.playerSig"
            }).then(function(a) {
                i.resolve(a.data)
            }, function() {
                i.reject()
            })
        }

        function g() {
            var b = "{shopUrl}/Rtl.Processing.Payments.Web.BackEndProxy/PaymentPageFlow/StartPayment?tid={videoUuid}&kid={videoUuid}&cid={videoUuid}&tr={tariff}&ru={returnUrl}&sig={signature}";
            return function(c) {
                var d = a.defer();
                return c = ruf(c || {}).extend(k)[0], c.returnUrl = c.host + c.returnPage, ruf(h).forIn(function(a, b) {
                    var d = new RegExp(b, "g");
                    c.returnUrl = c.returnUrl.replace(d, a)
                }), f(c), i.promise.then(function(a) {
                    c.signature = a;
                    var e = ruf(b).format(c);
                    d.resolve(e)
                }, function() {
                    d.reject()
                }), d.promise
            }
        }
        var h = {
                ":": "%3a",
                "/": "%2f",
                "#": "%23"
            },
            i = a.defer(),
            j = window.location.href.split("#")[0],
            k = {
                tariff: "399",
                videoUuid: "8ae9499f-8c42-431d-850a-d124b0ba55a0",
                host: j.lastIndexOf("/") === j.length - 1 ? j + "#!/" : j + "/#!/",
                returnPage: "",
                shopUrl: RTLXL.config.payments.host,
                abstractKey: "PROMO"
            },
            l = {
                getPaymentUrl: g(),
                getSvodData: e,
                getDaysLeft: d
            };
        return RTL.xl.ua = function(a) {
            RTL.rtlAccount.hasSubscription = a.HasSubscription, RTL.rtlAccount.hasHadSubscription = a.SubscriptionEndDate.length > 0, RTL.rtlAccount.daysLeft = function() {
                return RTL.rtlAccount.hasHadSubscription === !1 ? "" : void 0
            }(), b.user = {
                hasSubscription: a.HasSubscription,
                isLoggedIn: a.IsLoggedIn,
                subscriptionEndDate: a.SubscriptionEndDate
            }, b.$emit("user")
        }, l
    }]), rtlxl.factory("Tips", ["$rootScope", "$q", "$http", function(a, b, c) {
        function d(a) {
            var b = ruf().defer(),
                c = {
                    meta: {
                        product: "rtlxl",
                        d: "pc",
                        pg: "1",
                        sort: "date desc",
                        nr_of_videos_total: 50,
                        nr_of_videos_onpage: 50,
                        nicam_base_url: "http://data.rtl.nl/active/s4mlib/nicam/xl3/*.png",
                        proglogo_base_url: "http://data.rtl.nl/service/programma_logos/",
                        thumb_base_url: "http://covers.rtl.nl/system/cover/l/thumb/",
                        poster_base_url: "http://covers.rtl.nl/system/cover/l/pc/",
                        cover_base_url: "http://covers.rtl.nl/system/cover/l/pc/"
                    },
                    abstracts: [],
                    material: []
                },
                d = [],
                e = [];
            return ruf(a.response.docs).sort({
                sortBy: function(a) {
                    return a.suggestionScore
                },
                type: "descending"
            }).forEach(function(a, b) {
                d[b] = a.img_thumb, e[b] = a
            }), ruf(e).sort({
                sortBy: function(a) {
                    return a.img_thumb
                }
            }), d.length > 0 ? VFD.client.getUuids(d).then(function(a) {
                c = a, c.isRecommendation = !0, c.meta.ext = {
                    title: "Mijn aanbevelingen"
                }, ruf(c.material).sort({
                    sortBy: function(a) {
                        return a.uuid
                    }
                }).forEach(function(a, b) {
                    a.suggestionScore = e[b].suggestionScore, ruf(c.episodes).forEach(function(b) {
                        return b.key === a.episode_key ? (a.title = a.title ? a.title : b.name, a.synopsis = a.synopsis ? a.synopsis : b.synopsis, a.genre = b.genre, !0) : void 0
                    }), a.genre = a.genre || "", a.synopsis || ruf(c.seasons).forEach(function(b) {
                        return b.key === a.season_key ? (a.synopsis = a.synopsis ? a.synopsis : b.synopsis, !0) : void 0
                    }), ruf(c.abstracts).forEach(function(b) {
                        return b.key === a.abstract_key ? (a.name = a.name ? a.name : b.name, a.synopsis = a.synopsis ? a.synopsis : b.synopsis, a.progsubtype = b.progsubtype, a.url = ruf("/#!/{0}-{1}/{2}").format([RTL.xl.slugify(a.name), a.season_key, a.uuid]), !0) : void 0
                    })
                }), ruf(c.material).sort({
                    sortBy: function(a) {
                        return a.suggestionScore
                    },
                    type: "descending"
                }), k = c, b.resolve(c)
            }) : b.resolve(c), b.promise
        }

        function e(a) {
            ruf("post").http(RTLXL.config.recommendations.apiBaseUrl + "query.json?token=" + encodeURIComponent(a), {
                send: {
                    uid: RTL.rtlAccount.rtlId,
                    rows: 50
                }
            }).then(function(a) {
                a.response.docs.length > 0 ? d(a).then(function(a) {
                    m.resolve(a)
                }) : h(!0)
            }, function() {
                k ? m.resolve(k) : h(!0)
            })
        }

        function f() {
            var a = b.defer();
            return RTL.rtlAccount.loginStatusChanged.then(function(b) {
                if (b.isLoggedIn && b.tkn) {
                    var d = RTLXL.config.recommendations.apiBaseUrl + "user/" + b.rtlId + "/history.json?token=" + encodeURIComponent(b.tkn);
                    c.get(d, {
                        timeout: 2500
                    }).then(function(b) {
                        var c = _.indexBy(b.data.history, "cid");
                        a.resolve(c)
                    }, function() {
                        a.reject("HTTP error while retrieving voting history")
                    })
                } else a.reject("The current user is not logged in")
            }), a.promise
        }

        function g(a, b) {
            RTL.rtlAccount.loginStatusChanged.then(function(d) {
                var e = _({
                    uid: d.rtlId,
                    token: d.tkn
                }).map(function(a, b) {
                    return encodeURIComponent(b) + "=" + encodeURIComponent(a)
                }).join("&");
                c.post(RTLXL.config.recommendations.apiBaseUrl + "user/" + d.rtlId + "/action.json?" + e, {
                    action: a,
                    cid: b
                }).then(function() {})
            })
        }

        function h(a, b) {
            a = a || !1, VFD.client.getVideoSnacks().then(function(c) {
                ruf(c.material).forEach(function(a) {
                    ruf(c.episodes).forEach(function(b) {
                        return a.episode_key && b.key === a.episode_key ? (a.title = a.title ? a.title : b.name, a.synopsis = a.synopsis ? a.synopsis : b.synopsis, a.genre = b.genre, !0) : void 0
                    }), a.genre = a.genre || "", a.synopsis || ruf(c.seasons).forEach(function(b) {
                        return b.key === a.season_key ? (a.synopsis = a.synopsis ? a.synopsis : b.synopsis, !0) : void 0
                    }), ruf(c.abstracts).forEach(function(b) {
                        return b.key === a.abstract_key ? (a.name = a.name ? a.name : b.name, a.synopsis = a.synopsis ? a.synopsis : b.synopsis, a.progsubtype = b.progsubtype, a.url = ruf("/#!/{0}-{1}/{2}").format([RTL.xl.slugify(a.name), a.season_key, a.uuid]), !0) : void 0
                    })
                }), a ? ruf(a)["typeof"]("number") && c.material.splice(a) : c.material.splice(5), b ? b.resolve(c) : m.resolve(c)
            })
        }

        function i(a) {
            return a && (m = ruf().defer()), RTL.rtlAccount.loginStatusChanged.then(function(b) {
                b.isLoggedIn ? e(b.tkn) : h(a)
            }), m.promise
        }

        function j(a) {
            var c = b.defer();
            return a ? (ruf("post").http(RTLXL.config.recommendations.apiBaseUrl + "query.json", {
                send: {
                    "suggestion.likes": [a],
                    rows: 50
                }
            }).then(function(a) {
                d(a).then(function(a) {
                    c.resolve(a)
                })
            }, function() {
                h(!0, c)
            }), c.promise) : i(!0)
        }
        var k, l = {
                getTipList: i,
                getVotingHistory: f,
                postAction: g,
                getVideoSpecificRecom: j
            },
            m = b.defer();
        return l
    }]), rtlxl.factory("VideoFeedService", ["$q", "rtlidService", "Tips", "xlService", "$filter", function(a, b, c, d, e) {
        "use strict";

        function f(f) {
            function g(a) {
                a = void 0 !== a ? a : 1, q.prevIndex = q.index, q.index = q.index + a < 1 ? 1 : q.index + a
            }

            function h() {
                g(-1)
            }

            function i() {
                return q.index >= q.total - 1 && r.items.length < r.totalItems && !(q.max && q.max <= r.items.length) ? (q.prefetchIndex++, void n(q.prefetchIndex).then(function() {
                    g(1)
                })) : void g(1)
            }

            function j(a) {
                var b, c, d;
                for (r.filteredCount = 0, r.filter = a, c = 0; c < r.items.length; c++) {
                    d = r.items[c], d.passFilter = a ? null : "true";
                    for (b in a) d.passFilter = e(b)(d, a[b]);
                    r.filteredCount += d.passFilter ? 1 : 0
                }
            }

            function k() {
                q.total = Math.ceil(r.items.length / q.size), r.views = [];
                for (var a = 0; a < q.total; a++) r.views.push({
                    page: a + 1
                })
            }

            function l(a) {
                if (q.size && q.size !== a && (q.size = a, k(), q.size * q.index > r.items.length)) {
                    var b = Math.floor(r.items.length / q.size);
                    g(b - q.index)
                }
            }

            function m(a) {
                return a.isProgram ? VFD.util.coverBaseUrl() + "l/thumblarge/" + a.key : r.meta.cover_base_url && a.classname && "populair" === p.type ? r.meta.cover_base_url + a.image : a.classname && "uitzending" === a.classname ? r.meta.thumb_base_url + a.image : VFD.util.screenshotBaseUrl() + "sz=355x200/uuid=" + a.uuid
            }

            function n(e) {
                var f, g, h = a.defer(),
                    i = {};
                if (r.loading) h.reject(r);
                else {
                    if (r.loading = !0, e = e || 1, "populair" === p.type) f = VFD.client.getPopular({
                        pg: 1
                    });

